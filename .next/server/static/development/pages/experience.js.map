{"version":3,"file":"static/development/pages/experience.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/cards/experience-card.tsx","webpack:///./components/cards/skill-card.tsx","webpack:///./components/layout.tsx","webpack:///./components/logos.tsx","webpack:///./components/navbar.tsx","webpack:///./components/title-banner.tsx","webpack:///./data/experience.tsx","webpack:///./data/skills.tsx","webpack:///./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/assign.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/create.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-prototype-of.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/set-prototype-of.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/symbol.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/symbol/iterator.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/classCallCheck.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/createClass.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/extends.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/inherits.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/typeof.js","webpack:///./node_modules/next/dist/client/link.js","webpack:///./node_modules/next/link.js","webpack:///./pages/experience.tsx","webpack:///./static/images/angular-icon.svg","webpack:///./static/images/apache.svg","webpack:///./static/images/clojure.svg","webpack:///./static/images/docker.svg","webpack:///./static/images/elasticsearch.svg","webpack:///./static/images/java.svg","webpack:///./static/images/javascript.svg","webpack:///./static/images/jenkins.svg","webpack:///./static/images/kubernetes.svg","webpack:///./static/images/linux-tux.svg","webpack:///./static/images/mongodb.svg","webpack:///./static/images/nodejs-icon.svg","webpack:///./static/images/postgresql.svg","webpack:///./static/images/react-ico.svg","webpack:///./static/images/spring.svg","webpack:///./static/images/typescript-icon.svg","webpack:///./static/images/vertx.svg","webpack:///external \"@material-ui/core\"","webpack:///external \"@material-ui/core/AppBar\"","webpack:///external \"@material-ui/core/Avatar\"","webpack:///external \"@material-ui/core/Card\"","webpack:///external \"@material-ui/core/CardActions\"","webpack:///external \"@material-ui/core/CardContent\"","webpack:///external \"@material-ui/core/CardHeader\"","webpack:///external \"@material-ui/core/Grid\"","webpack:///external \"@material-ui/core/Tab\"","webpack:///external \"@material-ui/core/Tabs\"","webpack:///external \"@material-ui/core/Typography\"","webpack:///external \"@material-ui/core/styles\"","webpack:///external \"@material-ui/styles\"","webpack:///external \"@material-ui/styles/makeStyles\"","webpack:///external \"core-js/library/fn/json/stringify\"","webpack:///external \"core-js/library/fn/object/assign\"","webpack:///external \"core-js/library/fn/object/create\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-prototype-of\"","webpack:///external \"core-js/library/fn/object/set-prototype-of\"","webpack:///external \"core-js/library/fn/symbol\"","webpack:///external \"core-js/library/fn/symbol/iterator\"","webpack:///external \"next-server/dist/lib/utils\"","webpack:///external \"next/router\"","webpack:///external \"prop-types\"","webpack:///external \"prop-types-exact\"","webpack:///external \"react\"","webpack:///external \"url\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\n\nfunction populateCardContent(content : String[]) {\n  return content.map((line, index) =>\n    <Typography key={index} variant=\"body1\" color=\"textPrimary\" align=\"justify\" component=\"li\">\n      {line}\n    </Typography>\n  )\n}\n\nexport interface IExperienceCardProps{\n  logo: string,\n  avatar: string,\n  title: string,\n  datePlace: string,\n  cardContent:string[],\n  techStack: string\n}\n\nfunction ExperienceCard(props: IExperienceCardProps) {\n  const {logo,avatar, title, datePlace, cardContent, techStack} = props\n\n  return (\n    <Card >\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"Experience\" src={logo}>\n          {avatar}\n          </Avatar>\n        }\n        titleTypographyProps={{ variant: 'h5' }}\n        title={title}\n        subheader={datePlace}\n      />\n      <hr />\n      <CardContent>\n        {populateCardContent(cardContent)}\n      </CardContent>\n      <hr />\n      <CardActions disableSpacing>\n        <Typography variant=\"overline\" component=\"p\">\n        Tech Stack:{techStack}\n        </Typography>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default ExperienceCard;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Grid, { GridSpacing } from '@material-ui/core/Grid';\nimport { CardContent } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n            width: '100%'\n        },\n    }),\n);\n\nfunction populateSkillCard(skills) {\n    return skills.map((skill,index) =>\n        <Grid key={index} item >\n            {skill}\n        </Grid>\n    )\n}\n\n\nfunction SkillCard(props) {\n    const { title } = props\n    const classes = useStyles()\n    const skills = populateSkillCard(props.skills);\n\n    return (\n        <Card className={classes.root}>\n            <CardHeader\n                titleTypographyProps={{ variant: 'h5' }}\n                title={title}\n            />\n            <hr />\n            <CardContent>\n                <Grid\n                    container\n                    spacing={Number(6) as GridSpacing}\n                    direction=\"row\"\n                    justify=\"space-evenly\"\n                    alignItems=\"center\"\n                >\n                    {skills}\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default SkillCard;\n","import * as React from 'react';\nimport Navbar from './navbar';\n\nexport interface ILayoutProps {\n    children: JSX.Element[] | JSX.Element\n}\n\nexport default function Layout (props: ILayoutProps) {\n    return (\n      <div style={{ backgroundColor: '#f2f2f2' }}>\n        <Navbar />\n        <br />\n        <div style={{ maxWidth: '800px', margin: '0 auto' }}>\n            {props.children}\n        </div>\n      </div>\n    );\n}\n\n","\nimport Clojure from '../static/images/clojure.svg'\nimport Java from '../static/images/java.svg'\nimport Nodejs from '../static/images/nodejs-icon.svg'\nimport Vertx from '../static/images/vertx.svg'\nimport Spring from '../static/images/spring.svg'\nimport Angular from '../static/images/angular-icon.svg'\nimport ReactIco from '../static/images/react-ico.svg'\nimport Javascript from '../static/images/javascript.svg'\nimport Typescript from '../static/images/typescript-icon.svg'\nimport Elastic from '../static/images/elasticsearch.svg'\nimport Mongo from '../static/images/mongodb.svg'\nimport Postgres from '../static/images/postgresql.svg'\nimport Kubernetes from '../static/images/kubernetes.svg'\nimport Docker from '../static/images/docker.svg'\nimport Jenkins from '../static/images/jenkins.svg'\nimport Linux from '../static/images/linux-tux.svg'\nimport Apache from '../static/images/apache.svg'\n\nexport function ClojureLogo() {\n  return (\n    <div>\n      <Clojure viewBox=\"0 0 260 260\" width={100} height={100} />\n      <span style={{ display: 'block', textAlign: 'center' }}>Clojure</span>\n    </div>\n  )\n}\n\nexport function JavaLogo() {\n  return (\n    <div>\n      <Java  width={100} height={100} />\n      <span style={{ display: 'block', textAlign: 'center' }}>Java</span>\n    </div>\n  )\n}\n\nexport function VertxLogo() {\n  return (\n    <div>\n      <Vertx  width={100} height={100} />\n      <span style={{ display: 'block', textAlign: 'center' }}>Vertx.io</span>\n    </div>\n  )\n}\n\nexport function SpringLogo() {\n  return (\n    <div>\n      <Spring  width={100} height={100} />\n      <span style={{ display: 'block', textAlign: 'center' }}>Spring boot</span>\n    </div>\n  )\n}\n\nexport function NodeLogo() {\n  return (\n    <div>\n      <Nodejs  width={100} height={100} />\n      <span style={{ display: 'block', textAlign: 'center' }}>NodeJS</span>\n    </div>\n  )\n}\n\nexport function AngularLogo() {\n  return (\n    <div>\n      <Angular width={100} height={100} />\n      <span style={{ display: 'block', textAlign: 'center' }}>Angular</span>\n    </div>\n  )\n}\n\nexport function ReactLogo() {\n  return (\n    <div>\n      <ReactIco  width={100} height={100} />\n      <span style={{ display: 'block', textAlign: 'center' }}>React</span>\n    </div>\n  )\n}\n\nexport function JavascriptLogo() {\n  return (\n    <div>\n      <Javascript width={100} height={100} />\n      <span style={{ display: 'block', textAlign: 'center' }}>Javascript</span>\n    </div>\n  )\n}\n\nexport function TypescriptLogo() {\n  return (\n    <div>\n      <Typescript width={100} height={100} />\n      <span style={{ display: 'block', textAlign: 'center' }}>Typescript</span>\n    </div>\n  )\n}\n\nexport function ElasticLogo() {\n  return (\n    <div>\n      <Elastic  width={100} height={100} />\n      <span style={{ display: 'block', textAlign: 'center' }}>ElasticSearch</span>\n    </div>\n  )\n}\n\nexport function MongoLogo() {\n  return (\n    <div>\n      <Mongo  width={100} height={100} />\n      <span style={{ display: 'block', textAlign: 'center' }}>MongoDB</span>\n    </div>\n  )\n}\n\nexport function PostgresLogo() {\n  return (\n    <div>\n      <Postgres  width={100} height={100} />\n      <span style={{ display: 'block', textAlign: 'center' }}>PostgreSQL</span>\n    </div>\n  )\n}\n\nexport function KubernetesLogo() {\n  return (\n    <div>\n      <Kubernetes viewBox=\"0 0 750 750\" width={100} height={100} />\n      <span style={{ display: 'block', textAlign: 'center' }}>Kubernetes</span>\n    </div>\n  )\n}\n\nexport function DockerLogo() {\n  return (\n    <div>\n      <Docker  width={100} height={100} />\n      <span style={{ display: 'block', textAlign: 'center' }}>Docker</span>\n    </div>\n  )\n}\n\nexport function JenkinsLogo() {\n  return (\n    <div>\n      <Jenkins viewBox=\"-30 0 350 350\" width={100} height={100} />\n      <span style={{ display: 'block', textAlign: 'center' }}>Jenkins</span>\n    </div>\n  )\n}\n\nexport function LinuxLogo() {\n  return (\n    <div>\n      <Linux  width={100} height={100} />\n      <span style={{ display: 'block', textAlign: 'center' }}>Linux</span>\n    </div>\n  )\n}\n\nexport function ApacheLogo() {\n  return (\n    <div>\n      <Apache  width={100} height={100} />\n      <span style={{ display: 'block', textAlign: 'center' }}>Apache</span>\n    </div>\n  )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, Theme, createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\nimport HelpIcon from '@material-ui/icons/Help';\nimport Typography from '@material-ui/core/Typography';\nimport Link from 'next/link';\nimport { white } from 'material-ui/styles/colors';\n\ninterface TabContainerProps {\n  children?: React.ReactNode;\n}\n\nfunction TabContainer(props: TabContainerProps) {\n  return (\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n      {props.children}\n    </Typography>\n  );\n}\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  textColorSecondary:{\n    color:'white'\n  }\n}));\n\nfunction LinkTab(props) {\n  return <Link href={props.href}>\n    <Tab {...props} />\n  </Link>\n}\n\nfunction Navbar() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const theme = createMuiTheme({\n    palette: {\n      secondary: {\n        main: '#F2F2F2'\n      },\n      primary: {\n        main: '#F2F2F2'\n      }\n    },\n  }\n  )\n\n  function handleChange(event, newValue:number) {\n    setValue(newValue);\n  }\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <AppBar position=\"static\" color=\"secondary\" style={{\n          background: `url(\"../static/images/barBackground.png\")`,\n          /* Full height */\n          /* Center and scale the image nicely */\n          backgroundPosition: 'center',\n          backgroundRepeat: 'no-repeat',\n          backgroundSize: 'cover'\n        }}>\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            variant=\"fullWidth\"\n            scrollButtons=\"on\"\n            indicatorColor=\"secondary\"\n            textColor=\"secondary\"\n          >\n            <LinkTab label=\"Welcome\" className={classes.textColorSecondary} href=\"/\" />\n            <LinkTab label=\"Experience\" className={classes.textColorSecondary} href=\"/experience\" />\n            <LinkTab label=\"Portfolio\" className={classes.textColorSecondary} href=\"/portfolio\" />\n            <LinkTab label=\"About Me\" className={classes.textColorSecondary} href=\"/about\" />\n            <LinkTab label=\"Contacts\" className={classes.textColorSecondary} href=\"/contacts\" />\n          </Tabs>\n        </AppBar>\n      </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default Navbar;","import { makeStyles, createStyles, Typography, Theme, createMuiTheme } from \"@material-ui/core\";\nimport { responsiveFontSizes } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { ResponsiveFontSizesOptions } from \"@material-ui/core/styles/responsiveFontSizes\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        background: {\n            background: `url(\"../static/images/background.jpg\")`,\n            backgroundPosition: 'center',\n            backgroundRepeat: 'no-repeat',\n            backgroundSize: 'cover'\n        }\n    })\n);\n\nexport default function TitleBanner(props) {\n    const classes = useStyles();\n\n    const options: ResponsiveFontSizesOptions = {\n        factor: 10\n    }\n    const theme = responsiveFontSizes(createMuiTheme(), options);\n\n    return (\n        <div className={classes.background}>\n            <ThemeProvider theme={theme}>\n                <Typography variant='h2' align='center' style={{ color: 'white' }}>\n                    {props.title}\n                </Typography>\n                <Typography variant='subtitle1' align='center' style={{ color: '#f0f0f0', fontStyle: 'italic' }}>\n                    {props.quote}\n                    <br />\n                    {props.quotePerson}\n                </Typography>\n            </ThemeProvider>\n        </div >\n    )\n}","import { backendSkills, devopsSkills, databaseSkills, frontendSkills } from \"./skills\";\n\n\nexport const experienceData = [\n    {\n        logo: \"https://avatars3.githubusercontent.com/u/2339114?s=200&v=4\",\n        avatar: \"\",\n        title: \"Deep Impact AG - Software Engineer\",\n        datePlace: \"May 2019 - OnGoing | Winterthur, CH\",\n        cardContent: [\n            \"Architecture and development of a smart ERP with IoT integration which\\\n        included NFC, RFID and tracking devices.In this project I have worked in\\\n        designing the architecture, backend development, deployment using Kubernetes\\\n        and optimization of the working environment using automation and CI with\\\n        Jenkins.This project also included an iOS and Android app which I supervised\\\n        but was not part of the development.\",\n            \"The position of team leader of a team of 5 people (working remote), was shared between me and another engineer for the first year at the company, where we shared the role of Scrum master.\",\n            \"Development and maintenance of a delay management system for public transportation for one of the biggest pharma companies in Switzerland.\"\n        ],\n        techStack: \"Java 8, Vertx, Spring boot, Kubernetes, Docker\"\n    },\n    {\n        logo: \"https://satcom-int.com/wp-content/uploads/2014/10/favicon.png\",\n        avatar: \"\",\n        title: \"Satcom International AG  - Software Engineer\",\n        datePlace: \"August 2017 - May 2019 | Zurich, CH\",\n        cardContent: [\n            \"Architecture and development of a smart ERP with IoT integration which\\\n        included NFC, RFID and tracking devices.In this project I have worked in\\\n        designing the architecture, backend development, deployment using Kubernetes\\\n        and optimization of the working environment using automation and CI with\\\n        Jenkins.This project also included an iOS and Android app which I supervised\\\n        but was not part of the development.\",\n            \"The position of team leader of a team of 5 people (working remote), was shared between me and another engineer for the first year at the company, where we shared the role of Scrum master.\",\n            \"Development and maintenance of a delay management system for public transportation for one of the biggest pharma companies in Switzerland.\"\n        ],\n        techStack: \"Java 8, Vertx, Spring boot, Kubernetes, Docker\"\n    },\n    {\n        //logo: \"https://wisewaresolutions.com/wp-content/uploads/2018/04/logo_wiseware_v2.png\",\n        logo: \"\",\n        avatar: \"W\",\n        title: \"WisewareSolutions - Software Engineer\",\n        datePlace: \"November 2016 - August 2017 | Aveiro, PT\",\n        cardContent: [\n            \"Architecture and development of a smart ERP with IoT integration which\\\n        included NFC, RFID and tracking devices.In this project I have worked in\\\n        designing the architecture, backend development, deployment using Kubernetes\\\n        and optimization of the working environment using automation and CI with\\\n        Jenkins.This project also included an iOS and Android app which I supervised\\\n        but was not part of the development.\",\n            \"The position of team leader of a team of 5 people (working remote), was shared between me and another engineer for the first year at the company, where we shared the role of Scrum master.\",\n            \"Development and maintenance of a delay management system for public transportation for one of the biggest pharma companies in Switzerland.\"\n        ],\n        techStack: \"Java 8, Vertx, Spring boot, Kubernetes, Docker\"\n    },\n    {\n        logo: \"https://yt3.ggpht.com/a/AGF-l79F3LZIQqdSnIOXjwg-M5zwUyrUzDH08d7RqA=s900-mo-c-c0xffffffff-rj-k-no\",\n        avatar: \"\",\n        title: \"Universidade de Aveiro - Scolarship\",\n        datePlace: \"February 2016 - November 2016 | Aveiro, PT\",\n        cardContent: [\n            \"Architecture and development of a smart ERP with IoT integration which\\\n        included NFC, RFID and tracking devices.In this project I have worked in\\\n        designing the architecture, backend development, deployment using Kubernetes\\\n        and optimization of the working environment using automation and CI with\\\n        Jenkins.This project also included an iOS and Android app which I supervised\\\n        but was not part of the development.\",\n            \"The position of team leader of a team of 5 people (working remote), was shared between me and another engineer for the first year at the company, where we shared the role of Scrum master.\",\n            \"Development and maintenance of a delay management system for public transportation for one of the biggest pharma companies in Switzerland.\"\n        ],\n        techStack: \"Java 8, Vertx, Spring boot, Kubernetes, Docker\"\n    },\n    {\n        logo: \"https://yt3.ggpht.com/a/AGF-l79F3LZIQqdSnIOXjwg-M5zwUyrUzDH08d7RqA=s900-mo-c-c0xffffffff-rj-k-no\",\n        avatar: \"\",\n        title: \"Universidade de Aveiro - MsC Computer Engineering and Telematics\",\n        datePlace: \"2008 - 2015 | Aveiro, PT\",\n        cardContent: [\n            \"Architecture and development of a smart ERP with IoT integration which\\\n        included NFC, RFID and tracking devices.In this project I have worked in\\\n        designing the architecture, backend development, deployment using Kubernetes\\\n        and optimization of the working environment using automation and CI with\\\n        Jenkins.This project also included an iOS and Android app which I supervised\\\n        but was not part of the development.\",\n            \"The position of team leader of a team of 5 people (working remote), was shared between me and another engineer for the first year at the company, where we shared the role of Scrum master.\",\n            \"Development and maintenance of a delay management system for public transportation for one of the biggest pharma companies in Switzerland.\"\n        ],\n        techStack: \"Java 8, Vertx, Spring boot, Kubernetes, Docker\"\n    },\n]\n\nexport const skillData = [\n    {\n        title: \"BACKEND\",\n        skills: backendSkills,\n    },\n    {\n        title: \"FRONTEND\",\n        skills: frontendSkills\n    },\n    {\n        title: \"DATABASE\",\n        skills: databaseSkills\n    },\n    {\n        title: \"DEVOPS\",\n        skills: devopsSkills\n    },\n]","import { ClojureLogo, JavaLogo, NodeLogo, KubernetesLogo, ReactLogo, AngularLogo, TypescriptLogo, JavascriptLogo, PostgresLogo, ElasticLogo, MongoLogo, DockerLogo, JenkinsLogo, LinuxLogo, ApacheLogo, VertxLogo, SpringLogo } from \"../components/logos\";\n\nexport const backendSkills = [\n    <ClojureLogo />,\n    <JavaLogo />,\n    <NodeLogo />,\n    <VertxLogo />,\n    <SpringLogo />,\n];\n\nexport const frontendSkills = [\n    <ReactLogo />,\n    <AngularLogo />,\n    <TypescriptLogo />,\n    <JavascriptLogo />,\n];\n\nexport const databaseSkills = [\n    <PostgresLogo />,\n    <ElasticLogo />,\n    <MongoLogo />,\n];\n\nexport const devopsSkills = [\n    <KubernetesLogo />,\n    <DockerLogo />,\n    <JenkinsLogo />,\n    <LinuxLogo />,\n    <ApacheLogo />,\n];","module.exports = require(\"core-js/library/fn/json/stringify\");","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/create\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-prototype-of\");","module.exports = require(\"core-js/library/fn/object/set-prototype-of\");","module.exports = require(\"core-js/library/fn/symbol\");","module.exports = require(\"core-js/library/fn/symbol/iterator\");","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","var _Object$defineProperty = require(\"../core-js/object/define-property\");\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n\n    _Object$defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","import _Object$assign from \"../../core-js/object/assign\";\nexport default function _extends() {\n  _extends = _Object$assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","var _Object$getPrototypeOf = require(\"../core-js/object/get-prototype-of\");\n\nvar _Object$setPrototypeOf = require(\"../core-js/object/set-prototype-of\");\n\nfunction _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = _Object$setPrototypeOf ? _Object$getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || _Object$getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var _Object$create = require(\"../core-js/object/create\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = _Object$create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","var _Object$setPrototypeOf = require(\"../core-js/object/set-prototype-of\");\n\nfunction _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = _Object$setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var _Symbol$iterator = require(\"../core-js/symbol/iterator\");\n\nvar _Symbol = require(\"../core-js/symbol\");\n\nfunction _typeof2(obj) { if (typeof _Symbol === \"function\" && typeof _Symbol$iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof _Symbol === \"function\" && _typeof2(_Symbol$iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","\"use strict\";\n/* global __NEXT_DATA__ */\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/json/stringify\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inherits\"));\n\nvar __importStar = void 0 && (void 0).__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = void 0 && (void 0).__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar url_1 = require(\"url\");\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar prop_types_1 = __importDefault(require(\"prop-types\"));\n\nvar router_1 = __importStar(require(\"next/router\"));\n\nvar utils_1 = require(\"next-server/dist/lib/utils\");\n\nfunction isLocal(href) {\n  var url = url_1.parse(href, false, true);\n  var origin = url_1.parse(utils_1.getLocationOrigin(), false, true);\n  return !url.host || url.protocol === origin.protocol && url.host === origin.host;\n}\n\nfunction memoizedFormatUrl(formatFunc) {\n  var lastHref = null;\n  var lastAs = null;\n  var lastResult = null;\n  return function (href, as) {\n    if (href === lastHref && as === lastAs) {\n      return lastResult;\n    }\n\n    var result = formatFunc(href, as);\n    lastHref = href;\n    lastAs = as;\n    lastResult = result;\n    return result;\n  };\n}\n\nfunction formatUrl(url) {\n  return url && typeof url === 'object' ? utils_1.formatWithValidation(url) : url;\n}\n\nvar Link =\n/*#__PURE__*/\nfunction (_react_1$Component) {\n  (0, _inherits2.default)(Link, _react_1$Component);\n\n  function Link() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Link);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Link).apply(this, arguments)); // The function is memoized so that no extra lifecycles are needed\n    // as per https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html\n\n    _this.formatUrls = memoizedFormatUrl(function (href, asHref) {\n      return {\n        href: formatUrl(href),\n        as: formatUrl(asHref, true)\n      };\n    });\n\n    _this.linkClicked = function (e) {\n      var _e$currentTarget = e.currentTarget,\n          nodeName = _e$currentTarget.nodeName,\n          target = _e$currentTarget.target;\n\n      if (nodeName === 'A' && (target && target !== '_self' || e.metaKey || e.ctrlKey || e.shiftKey || e.nativeEvent && e.nativeEvent.which === 2)) {\n        // ignore click for new tab / new window behavior\n        return;\n      }\n\n      var _this$formatUrls = _this.formatUrls(_this.props.href, _this.props.as),\n          href = _this$formatUrls.href,\n          as = _this$formatUrls.as;\n\n      if (!isLocal(href)) {\n        // ignore click if it's outside our scope\n        return;\n      }\n\n      var pathname = window.location.pathname;\n      href = url_1.resolve(pathname, href);\n      as = as ? url_1.resolve(pathname, as) : href;\n      e.preventDefault(); //  avoid scroll for urls with anchor refs\n\n      var scroll = _this.props.scroll;\n\n      if (scroll == null) {\n        scroll = as.indexOf('#') < 0;\n      } // replace state instead of push if prop is present\n\n\n      router_1.default[_this.props.replace ? 'replace' : 'push'](href, as, {\n        shallow: _this.props.shallow\n      }).then(function (success) {\n        if (!success) return;\n\n        if (scroll) {\n          window.scrollTo(0, 0);\n          document.body.focus();\n        }\n      }).catch(function (err) {\n        if (_this.props.onError) _this.props.onError(err);\n      });\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(Link, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.prefetch();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if ((0, _stringify.default)(this.props.href) !== (0, _stringify.default)(prevProps.href)) {\n        this.prefetch();\n      }\n    }\n  }, {\n    key: \"prefetch\",\n    value: function prefetch() {\n      if (!this.props.prefetch) return;\n      if (typeof window === 'undefined') return; // Prefetch the JSON page if asked (only in the client)\n\n      var pathname = window.location.pathname;\n\n      var _this$formatUrls2 = this.formatUrls(this.props.href, this.props.as),\n          parsedHref = _this$formatUrls2.href;\n\n      var href = url_1.resolve(pathname, parsedHref);\n      router_1.default.prefetch(href);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var children = this.props.children;\n\n      var _this$formatUrls3 = this.formatUrls(this.props.href, this.props.as),\n          href = _this$formatUrls3.href,\n          as = _this$formatUrls3.as; // Deprecated. Warning shown by propType check. If the childen provided is a string (<Link>example</Link>) we wrap it in an <a> tag\n\n\n      if (typeof children === 'string') {\n        children = react_1.default.createElement(\"a\", null, children);\n      } // This will return the first child, if multiple are provided it will throw an error\n\n\n      var child = react_1.Children.only(children);\n      var props = {\n        onClick: function onClick(e) {\n          if (child.props && typeof child.props.onClick === 'function') {\n            child.props.onClick(e);\n          }\n\n          if (!e.defaultPrevented) {\n            _this2.linkClicked(e);\n          }\n        }\n      }; // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n      // defined, we specify the current 'href', so that repetition is not needed by the user\n\n      if (this.props.passHref || child.type === 'a' && !('href' in child.props)) {\n        props.href = as || href;\n      } // Add the ending slash to the paths. So, we can serve the\n      // \"<page>/index.html\" directly.\n\n\n      if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n        if (props.href && typeof __NEXT_DATA__ !== 'undefined' && __NEXT_DATA__.nextExport) {\n          props.href = router_1.Router._rewriteUrlForNextExport(props.href);\n        }\n      }\n\n      return react_1.default.cloneElement(child, props);\n    }\n  }]);\n  return Link;\n}(react_1.Component);\n\nif (process.env.NODE_ENV === 'development') {\n  var warn = utils_1.execOnce(console.error); // This module gets removed by webpack.IgnorePlugin\n\n  var exact = require('prop-types-exact');\n\n  Link.propTypes = exact({\n    href: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.object]).isRequired,\n    as: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.object]),\n    prefetch: prop_types_1.default.bool,\n    replace: prop_types_1.default.bool,\n    shallow: prop_types_1.default.bool,\n    passHref: prop_types_1.default.bool,\n    scroll: prop_types_1.default.bool,\n    children: prop_types_1.default.oneOfType([prop_types_1.default.element, function (props, propName) {\n      var value = props[propName];\n\n      if (typeof value === 'string') {\n        warn(\"Warning: You're using a string directly inside <Link>. This usage has been deprecated. Please add an <a> tag as child of <Link>\");\n      }\n\n      return null;\n    }]).isRequired\n  });\n}\n\nexports.default = Link;","module.exports = require('./dist/client/link')\n","import React from 'react'\nimport ExperienceCard from '../components/cards/experience-card'\nimport Grid, { GridSpacing } from '@material-ui/core/Grid';\nimport makeStyles from '@material-ui/styles/makeStyles';\nimport { createStyles, Theme, Typography } from '@material-ui/core';\nimport SkillCard from '../components/cards/skill-card';\nimport Layout from '../components/layout';\nimport TitleBanner from '../components/title-banner';\nimport { experienceData, skillData } from '../data/experience';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n    })\n);\n\nfunction getExperience(experiences) {\n    return experiences.map((experience, index) => {\n        return <Grid key={index} item>\n                    <ExperienceCard key={index} {...experience}/>\n                </Grid>\n    })\n}\n\nfunction getSkills(skills) {\n    return skills.map((skill, index) => {\n        return <Grid key={index} item>\n                    <SkillCard key={index} {...skill}/>\n                </Grid>\n    })\n}\n\nexport default function Experience() {\n    const classes = useStyles();\n    const experiences = getExperience(experienceData);\n    const skills = getSkills(skillData);\n\n    return (\n        <Layout>\n            <TitleBanner\n                title=\"EXPERIENCE\"\n                quote='\"Most of the biggest problems in software are problems of misconception.\"'\n                quotePerson=\"- Rich Hickey\"\n            />\n            <br />\n            <Grid container className={classes.root}>\n                <Grid item xs={12}>\n                    <Grid\n                        container\n                        spacing={Number(6) as GridSpacing}\n                        direction=\"column\"\n                        justify=\"space-evenly\"\n                        alignItems=\"center\"\n                    >\n                        {experiences}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <br />\n            <TitleBanner\n                title=\"Skills\"\n                quote='\"The most complicated skill is to be simple.\"'\n                quotePerson=\"- Dejan Stojanovic\"\n            />\n            <br />\n            <Grid container className={classes.root}>\n                <Grid item xs={12}>\n                    <Grid\n                        container\n                        spacing={Number(6) as GridSpacing}\n                        direction=\"column\"\n                        justify=\"space-evenly\"\n                        alignItems=\"stretch\"\n                    >\n                        {skills}\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Layout>\n    )\n}","var React = require('react');\n\nfunction AngularIcon (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"g\",null,[React.createElement(\"path\",{\"d\":\"M0.0996108949,45.522179 L125.908171,0.697276265 L255.103502,44.7252918 L234.185214,211.175097 L125.908171,271.140856 L19.3245136,211.971984 L0.0996108949,45.522179 Z\",\"fill\":\"#E23237\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M255.103502,44.7252918 L125.908171,0.697276265 L125.908171,271.140856 L234.185214,211.274708 L255.103502,44.7252918 L255.103502,44.7252918 Z\",\"fill\":\"#B52E31\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M126.107393,32.27393 L126.107393,32.27393 L47.7136187,206.692607 L76.9992218,206.194553 L92.7377432,166.848249 L126.207004,166.848249 L126.306615,166.848249 L163.063035,166.848249 L180.29572,206.692607 L208.286381,207.190661 L126.107393,32.27393 L126.107393,32.27393 Z M126.306615,88.155642 L152.803113,143.5393 L127.402335,143.5393 L126.107393,143.5393 L102.997665,143.5393 L126.306615,88.155642 L126.306615,88.155642 Z\",\"fill\":\"#FFFFFF\",\"key\":2})]));\n}\n\nAngularIcon.defaultProps = {\"width\":\"256px\",\"height\":\"272px\",\"viewBox\":\"0 0 256 272\",\"version\":\"1.1\",\"preserveAspectRatio\":\"xMidYMid\"};\n\nmodule.exports = AngularIcon;\n\nAngularIcon.default = AngularIcon;\n","var React = require('react');\n\nfunction Apache (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"defs\",{\"key\":0},[React.createElement(\"linearGradient\",{\"x1\":\"16.3628891%\",\"y1\":\"63.9052008%\",\"x2\":\"159.989811%\",\"y2\":\"20.2134672%\",\"id\":\"linearGradient-1\",\"key\":0},[React.createElement(\"stop\",{\"stopColor\":\"#F69923\",\"offset\":\"0%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#F79A23\",\"offset\":\"31.23%\",\"key\":1}),React.createElement(\"stop\",{\"stopColor\":\"#E97826\",\"offset\":\"83.83%\",\"key\":2})]),React.createElement(\"linearGradient\",{\"x1\":\"-217.650978%\",\"y1\":\"394.671992%\",\"x2\":\"74.7430764%\",\"y2\":\"13.846058%\",\"id\":\"linearGradient-2\",\"key\":1},[React.createElement(\"stop\",{\"stopColor\":\"#9E2064\",\"offset\":\"32.33%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#C92037\",\"offset\":\"63.02%\",\"key\":1}),React.createElement(\"stop\",{\"stopColor\":\"#CD2335\",\"offset\":\"75.14%\",\"key\":2}),React.createElement(\"stop\",{\"stopColor\":\"#E97826\",\"offset\":\"100%\",\"key\":3})]),React.createElement(\"linearGradient\",{\"x1\":\"-80.0440054%\",\"y1\":\"170.418469%\",\"x2\":\"146.240033%\",\"y2\":\"-44.2993346%\",\"id\":\"linearGradient-3\",\"key\":2},[React.createElement(\"stop\",{\"stopColor\":\"#9E2064\",\"offset\":\"32.33%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#C92037\",\"offset\":\"63.02%\",\"key\":1}),React.createElement(\"stop\",{\"stopColor\":\"#CD2335\",\"offset\":\"75.14%\",\"key\":2}),React.createElement(\"stop\",{\"stopColor\":\"#E97826\",\"offset\":\"100%\",\"key\":3})]),React.createElement(\"linearGradient\",{\"x1\":\"-18.3158042%\",\"y1\":\"77.3603602%\",\"x2\":\"165.002%\",\"y2\":\"-41.416466%\",\"id\":\"linearGradient-4\",\"key\":3},[React.createElement(\"stop\",{\"stopColor\":\"#282662\",\"offset\":\"0%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#662E8D\",\"offset\":\"9.548389%\",\"key\":1}),React.createElement(\"stop\",{\"stopColor\":\"#9F2064\",\"offset\":\"78.82%\",\"key\":2}),React.createElement(\"stop\",{\"stopColor\":\"#CD2032\",\"offset\":\"94.87%\",\"key\":3})]),React.createElement(\"linearGradient\",{\"x1\":\"-129.782775%\",\"y1\":\"463.714866%\",\"x2\":\"66.4555408%\",\"y2\":\"17.1896681%\",\"id\":\"linearGradient-5\",\"key\":4},[React.createElement(\"stop\",{\"stopColor\":\"#9E2064\",\"offset\":\"32.33%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#C92037\",\"offset\":\"63.02%\",\"key\":1}),React.createElement(\"stop\",{\"stopColor\":\"#CD2335\",\"offset\":\"75.14%\",\"key\":2}),React.createElement(\"stop\",{\"stopColor\":\"#E97826\",\"offset\":\"100%\",\"key\":3})]),React.createElement(\"linearGradient\",{\"x1\":\"-34.8804169%\",\"y1\":\"187.706139%\",\"x2\":\"110.598662%\",\"y2\":\"-51.1003524%\",\"id\":\"linearGradient-6\",\"key\":5},[React.createElement(\"stop\",{\"stopColor\":\"#9E2064\",\"offset\":\"32.33%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#C92037\",\"offset\":\"63.02%\",\"key\":1}),React.createElement(\"stop\",{\"stopColor\":\"#CD2335\",\"offset\":\"75.14%\",\"key\":2}),React.createElement(\"stop\",{\"stopColor\":\"#E97826\",\"offset\":\"100%\",\"key\":3})]),React.createElement(\"linearGradient\",{\"x1\":\"-20.6189333%\",\"y1\":\"192.563688%\",\"x2\":\"125.259839%\",\"y2\":\"-136.90643%\",\"id\":\"linearGradient-7\",\"key\":6},[React.createElement(\"stop\",{\"stopColor\":\"#282662\",\"offset\":\"0%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#662E8D\",\"offset\":\"9.548389%\",\"key\":1}),React.createElement(\"stop\",{\"stopColor\":\"#9F2064\",\"offset\":\"78.82%\",\"key\":2}),React.createElement(\"stop\",{\"stopColor\":\"#CD2032\",\"offset\":\"94.87%\",\"key\":3})])]),React.createElement(\"g\",{\"key\":1},[React.createElement(\"path\",{\"d\":\"M218.048249,2.88871595 C210.079377,7.57042802 196.731518,21.0178988 180.793774,40.4420233 L180.793774,41.6373541 L194.7393,67.4365759 L195.436576,67.9346304 C205.696498,53.2918288 216.056031,40.0435798 226.614786,28.7875486 C227.411673,27.8910506 227.810117,27.492607 227.810117,27.492607 C227.411673,27.8910506 227.01323,28.3891051 226.614786,28.7875486 C223.228016,32.5727626 212.868482,44.52607 197.329183,68.4326848 L199.122179,68.8311284 C199.122179,68.8311284 235.480156,65.2451362 253.011673,62.2568093 L254.007782,61.3603113 C259.585992,30.0824903 248.529183,15.7385214 248.529183,15.7385214 C248.529183,15.7385214 234.583658,-6.77354086 218.048249,2.88871595 Z\",\"fill\":\"url(#linearGradient-1)\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M152.404669,139.15642 C156.88716,130.888716 161.36965,122.720623 165.85214,114.851362 C170.533852,106.683268 175.315175,98.7143969 180.196109,91.044358 C180.494942,90.6459144 180.793774,90.1478599 180.992996,89.6498054 C185.774319,82.0793774 190.555642,74.907393 195.436576,67.9346304 L180.793774,40.3424125 C179.698054,41.6373541 178.602335,43.0319066 177.506615,44.4264591 C173.322957,49.7058366 168.940078,55.2840467 164.457588,61.2607004 C159.377432,68.0342412 154.197665,75.2062257 148.918288,82.7766537 C144.037354,89.7494163 139.056809,97.1206226 134.175875,104.59144 C129.992218,111.066148 125.708949,117.640467 121.525292,124.513619 C121.32607,124.812451 121.226459,125.011673 121.027237,125.310506 L121.027237,126.406226 L139.256031,162.564981 L140.052918,162.863813 C144.136965,154.894942 148.221012,146.92607 152.404669,139.15642 Z\",\"fill\":\"url(#linearGradient-2)\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M73.014786,316.164981 C76.3019455,307.598444 79.7883268,298.932296 83.2747082,290.166537 C86.6614786,281.799222 90.048249,273.332296 93.6342412,264.86537 C97.1206226,256.398444 100.806226,247.931518 104.491829,239.364981 C108.277043,230.698833 112.062257,222.032685 115.947082,213.466148 C119.831907,204.999222 123.716732,196.532296 127.701167,188.164981 C129.09572,185.176654 130.589883,182.088716 132.084047,179.100389 C134.574319,173.920623 137.164202,168.740856 139.654475,163.6607 C139.754086,163.361868 139.953307,163.162646 140.052918,162.863813 L121.027237,125.310506 C120.728405,125.80856 120.429572,126.306615 120.130739,126.804669 C115.74786,134.076265 111.26537,141.447471 106.982101,149.017899 C102.599222,156.687938 98.3159533,164.457588 94.1322957,172.326848 C90.5463035,179.000778 87.1595331,185.674708 83.7727626,192.448249 C83.0754864,193.842802 82.477821,195.137743 81.7805447,196.532296 C77.5968872,205.098833 73.911284,213.266926 70.5245136,221.235798 C66.7392996,230.200778 63.3525292,238.767315 60.3642023,246.935409 C58.3719844,252.314397 56.6785992,257.394553 54.985214,262.375097 C53.6902724,266.558755 52.3953307,270.842023 51.2,275.025681 C48.311284,284.98677 45.9206226,294.848249 43.9284047,304.809339 L44.2272374,306.004669 L62.4560311,342.263035 L63.0536965,342.561868 C65.5439689,335.788327 68.1338521,329.014786 70.8233463,322.042023 C71.5206226,320.049805 72.3175097,318.157198 73.014786,316.164981 Z\",\"fill\":\"url(#linearGradient-3)\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M43.7291829,306.10428 C41.3385214,318.157198 39.6451362,330.210117 38.7486381,342.163424 C38.7486381,342.561868 38.6490272,342.960311 38.6490272,343.458366 C32.6723735,333.89572 16.7346304,324.631907 16.7346304,324.631907 C28.1898833,341.167315 36.8560311,357.603113 38.1509728,373.740078 C32.0747082,375.035019 23.707393,373.142412 13.9455253,369.656031 C24.0062257,378.919844 31.5766537,381.509728 34.5649805,382.207004 C25.3011673,382.804669 15.6389105,389.179767 5.8770428,396.451362 C20.1214008,390.67393 31.5766537,388.382879 39.844358,390.175875 C26.7953307,427.131518 13.7463035,467.971984 0.59766537,511.203113 C4.58210117,510.007782 6.97276265,507.318288 8.36731518,503.632685 C10.6583658,495.763424 26.1976654,444.364202 50.4031128,376.728405 C51.1003891,374.835798 51.7976654,372.84358 52.4949416,370.950973 C52.6941634,370.452918 52.8933852,369.855253 53.092607,369.357198 C55.6824903,362.284825 58.2723735,355.01323 61.0614786,347.642023 C61.659144,345.948638 62.3564202,344.255253 62.9540856,342.561868 C62.9540856,342.561868 62.9540856,342.462257 62.9540856,342.462257 L43.9284047,304.809339 C43.9284047,305.307393 43.8287938,305.705837 43.7291829,306.10428 Z\",\"fill\":\"url(#linearGradient-4)\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M197.329183,68.5322957 C193.045914,75.1066148 188.364202,82.5774319 183.284047,91.044358 C182.985214,91.4428016 182.785992,91.940856 182.48716,92.3392996 C178.10428,99.7105058 173.522179,107.679377 168.641245,116.544747 C164.457588,124.115175 160.074708,132.283268 155.492607,141.148638 C151.508171,148.818677 147.424125,156.88716 143.240467,165.553307 L144.136965,165.951751 L190.456031,160.971206 L191.551751,160.174319 C205.596887,153.699611 211.872374,147.822568 217.948638,139.355642 C219.542412,137.064591 221.235798,134.574319 222.829572,132.084047 C227.810117,124.314397 232.691051,115.847471 236.974319,107.380545 C241.157977,99.2124514 244.84358,91.044358 247.732296,83.7727626 C249.525292,79.0910506 251.019455,74.8077821 252.015564,71.0225681 C252.912062,67.6357977 253.609339,64.448249 254.107393,61.4599222 C235.380545,64.7470817 212.370428,67.8350195 197.329183,68.5322957 Z\",\"fill\":\"url(#linearGradient-5)\",\"key\":4}),React.createElement(\"path\",{\"d\":\"M141.447471,169.438132 C139.853696,172.824903 138.160311,176.311284 136.466926,179.797665 C134.67393,183.582879 132.781323,187.567315 130.988327,191.551751 C130.091829,193.543969 129.09572,195.635798 128.199222,197.628016 C125.310506,203.803891 122.521401,210.178988 119.533074,216.753307 C115.947082,224.82179 112.261479,233.288716 108.575875,241.954864 C104.989883,250.322179 101.403891,258.888716 97.8178988,267.853696 C94.3315175,276.320623 90.8451362,285.086381 87.3587549,294.051362 C84.1712062,302.119844 80.9836576,310.287938 77.7961089,318.854475 C77.5968872,319.252918 77.4972763,319.651362 77.2980545,320.049805 C74.1105058,328.516732 71.0015321,337.13001 67.7143726,345.995379 C67.6147617,346.194601 67.4368555,346.713047 67.3372446,346.912269 L68.025231,347.064993 L81.8801556,345.574599 L82.6623298,345.251362 C82.3634971,345.151751 82.1789883,344.753307 81.8801556,344.653696 C100.20856,342.362646 124.61323,328.616342 140.451362,311.68249 C147.722957,303.91284 154.297276,294.649027 160.473152,283.891051 C165.055253,275.822568 169.238911,266.957198 173.322957,257.09572 C176.908949,248.529183 180.29572,239.165759 183.582879,229.105058 C179.399222,231.296498 174.518288,232.989883 169.238911,234.085603 C168.342412,234.284825 167.346304,234.484047 166.350195,234.683268 C165.354086,234.88249 164.357977,234.982101 163.461479,235.181323 C180.594553,228.607004 191.352529,215.856809 199.22179,200.31751 C194.7393,203.405447 187.368093,207.389883 178.602335,209.382101 C177.407004,209.680934 176.211673,209.880156 174.916732,210.079377 C174.617899,210.079377 174.319066,210.178988 174.020233,210.178988 C179.996887,207.688716 184.977432,204.899611 189.360311,201.612451 C190.256809,200.915175 191.153307,200.217899 192.049805,199.421012 C193.344747,198.225681 194.639689,197.03035 195.835019,195.835019 C196.631907,195.038132 197.329183,194.241245 198.12607,193.344747 C199.819455,191.352529 201.41323,189.161089 202.907393,186.770428 C203.405447,186.073152 203.803891,185.276265 204.301946,184.578988 C204.899611,183.483268 205.397665,182.387549 205.89572,181.291829 C208.286381,176.510506 210.178988,172.227237 211.673152,168.442023 C212.470039,166.549416 213.067704,164.856031 213.66537,163.162646 C213.864591,162.564981 214.063813,161.867704 214.362646,161.270039 C214.960311,159.477043 215.458366,157.883268 215.856809,156.389105 C216.454475,154.297276 216.753307,152.603891 216.952529,151.40856 C216.354864,151.906615 215.757198,152.305058 214.960311,152.803113 C209.780545,155.891051 200.915175,158.680156 193.743191,159.975097 L207.887938,158.381323 L193.743191,159.975097 C192.747082,160.174319 192.049805,160.27393 191.252918,160.473152 C191.319326,160.406744 175.343888,162.095858 143.326605,165.540491 C143.127383,165.739713 141.945525,168.242802 141.447471,169.438132 Z\",\"fill\":\"url(#linearGradient-6)\",\"key\":5}),React.createElement(\"path\",{\"d\":\"M65.8428016,350.63035 C63.3525292,357.503502 60.7626459,364.575875 58.2723735,371.74786 C58.2723735,371.847471 58.1727626,371.947082 58.1727626,372.046693 C57.7743191,373.042802 57.4754864,374.038911 57.0770428,375.13463 C55.3836576,380.015564 53.8894942,384.298833 50.5027237,394.259922 C56.0809339,396.849805 60.5634241,403.523735 64.8466926,411.193774 C64.448249,403.324514 61.1610895,395.853696 54.8856031,390.175875 C82.477821,391.371206 106.284825,384.398444 118.536965,364.277043 C119.632685,362.484047 120.628794,360.59144 121.525292,358.599222 C115.947082,365.671595 108.974319,368.659922 96.0249027,367.962646 C96.0249027,367.962646 95.9252918,367.962646 95.9252918,367.962646 C95.9252918,367.962646 96.0249027,367.962646 96.0249027,367.962646 C115.249805,359.396109 124.812451,351.128405 133.378988,337.481712 C135.371206,334.194553 137.363424,330.708171 139.355642,326.823346 C122.521401,344.056031 103.097276,348.936965 82.6770428,345.251362 L67.336965,346.944747 C66.8389105,348.040467 66.340856,349.335409 65.8428016,350.63035 Z\",\"fill\":\"url(#linearGradient-7)\",\"key\":6})])]);\n}\n\nApache.defaultProps = {\"width\":\"256px\",\"height\":\"512px\",\"viewBox\":\"0 0 256 512\",\"version\":\"1.1\",\"preserveAspectRatio\":\"xMidYMid\"};\n\nmodule.exports = Apache;\n\nApache.default = Apache;\n","var React = require('react');\n\nfunction Clojure (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M127.999 0C57.423 0 0 57.423 0 128.001c0 70.584 57.423 128.004 127.999 128.004 70.578 0 128.001-57.42 128.001-128.004C256 57.423 198.577 0 127.999 0\",\"fill\":\"#fff\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M123.318 130.303a534.748 534.748 0 0 0-3.733 8.272c-4.645 10.524-9.789 23.33-11.668 31.534-.675 2.922-1.093 6.543-1.085 10.558 0 1.588.085 3.257.22 4.957a61.266 61.266 0 0 0 21.067 3.753 61.374 61.374 0 0 0 19.284-3.143c-1.425-1.303-2.785-2.692-4.023-4.257-8.22-10.482-12.806-25.844-20.062-51.674M92.97 78.225c-15.699 11.064-25.972 29.312-26.011 49.992.039 20.371 10.003 38.383 25.307 49.493 3.754-15.637 13.164-29.955 27.275-58.655a230.831 230.831 0 0 0-2.862-7.469c-3.909-9.806-9.551-21.194-14.586-26.351-2.567-2.694-5.682-5.022-9.123-7.01\",\"fill\":\"#91dc47\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M181.394 198.367c-8.1-1.015-14.785-2.24-20.633-4.303a73.181 73.181 0 0 1-32.642 7.643c-40.584 0-73.483-32.894-73.488-73.49 0-22.027 9.704-41.773 25.056-55.24-4.106-.992-8.388-1.571-12.762-1.563-21.562.203-44.323 12.136-53.799 44.363-.886 4.691-.675 8.238-.675 12.442 0 63.885 51.791 115.676 115.671 115.676 39.122 0 73.682-19.439 94.611-49.169-11.32 2.821-22.206 4.17-31.528 4.199-3.494 0-6.774-.187-9.811-.558\",\"fill\":\"#63b132\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M159.658 175.953c.714.354 2.333.932 4.586 1.571 15.157-11.127 25.007-29.05 25.046-49.307h-.006c-.057-33.771-27.386-61.096-61.165-61.163a61.312 61.312 0 0 0-19.203 3.122c12.419 14.156 18.391 34.386 24.168 56.515.003.01.008.018.01.026.011.018 1.848 6.145 5.002 14.274 3.132 8.118 7.594 18.168 12.46 25.492 3.195 4.908 6.709 8.435 9.102 9.47\",\"fill\":\"#90b4fe\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M128.122 12.541c-38.744 0-73.016 19.073-94.008 48.318 10.925-6.842 22.08-9.31 31.815-9.222 13.446.039 24.017 4.208 29.089 7.06a53.275 53.275 0 0 1 3.527 2.247 73.183 73.183 0 0 1 29.574-6.215c40.589.005 73.493 32.899 73.499 73.488h-.006c0 20.464-8.37 38.967-21.863 52.291 3.312.371 6.844.602 10.451.584 12.811.006 26.658-2.821 37.039-11.552 6.769-5.702 12.44-14.051 15.585-26.569.615-4.835.969-9.75.969-14.752 0-63.882-51.786-115.678-115.671-115.678\",\"fill\":\"#5881d8\",\"key\":4})]);\n}\n\nClojure.defaultProps = {\"width\":\"256\",\"height\":\"256\"};\n\nmodule.exports = Clojure;\n\nClojure.default = Clojure;\n","var React = require('react');\n\nfunction Docker (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"g\",{\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\"},[React.createElement(\"path\",{\"d\":\"M38.6169038,173.984134 L38.6169038,157.621556 C38.6169038,155.47287 39.9611715,153.744603 42.1864435,153.744603 L42.8034142,153.744603 C45.0281506,153.744603 46.3659916,155.473941 46.3659916,157.621556 L46.3659916,192.069088 C46.3659916,200.469423 42.215364,207.152736 34.9841674,211.411013 C31.6309958,213.384033 27.9259582,214.396251 24.0388285,214.396251 L22.5022929,214.396251 C14.1003515,214.396251 7.42453556,210.242946 3.15983264,203.015498 C1.1809205,199.660184 0.175665272,195.960502 0.175665272,192.069088 L0.175665272,190.533623 C0.175665272,182.130611 4.32843515,175.451046 11.5542762,171.185272 C14.9101255,169.204218 18.6098075,168.200033 22.5022929,168.200033 L24.0388285,168.200033 C29.7249205,168.200033 34.5492887,170.403883 38.6169038,173.984134 L38.6169038,173.984134 Z M7.92368201,191.300017 C7.92368201,197.367967 10.8650042,201.929908 16.1820921,204.839096 C18.3318494,206.015732 20.6663766,206.647699 23.1192636,206.647699 C29.0752803,206.647699 33.4926192,203.838126 36.5399833,198.790962 C37.9570879,196.44251 38.6169038,193.874477 38.6169038,191.143096 C38.6169038,185.882778 36.1265272,181.778209 31.8880669,178.729238 C29.3178912,176.881004 26.4247699,175.953941 23.2697573,175.953941 C16.7781757,175.953941 12.1064435,179.233205 9.30222594,185.059615 C8.35588285,187.029423 7.92368201,189.121339 7.92368201,191.300017 L7.92368201,191.300017 Z M73.2481339,168.200033 L74.3219414,168.200033 C83.3001506,168.200033 90.1275314,172.555247 94.4548954,180.392167 C96.1853054,183.527364 97.1107615,186.948552 97.1107615,190.533623 L97.1107615,192.069088 C97.1107615,200.468887 92.9687029,207.162377 85.7257238,211.412084 C82.3725523,213.378678 78.6685858,214.396251 74.7825272,214.396251 L73.2481339,214.396251 C64.8461925,214.396251 58.1693054,210.242946 53.9056736,203.015498 C51.9267615,199.660184 50.919364,195.960502 50.919364,192.069088 L50.919364,190.533623 C50.919364,182.12954 55.0876653,175.471933 62.2958326,171.187414 C65.6473975,169.195649 69.3535063,168.200033 73.2481339,168.200033 L73.2481339,168.200033 Z M58.6673808,191.300017 C58.6673808,197.190159 61.5583598,201.522879 66.5332218,204.569172 C68.8693556,206.000201 71.4416736,206.647699 74.1714477,206.647699 C79.991431,206.647699 84.2930879,203.696736 87.287431,198.784536 C88.7152469,196.44251 89.3611381,193.870192 89.3611381,191.143096 C89.3611381,185.66641 86.7229456,181.482042 82.2134895,178.449674 C79.7418577,176.786745 76.9906611,175.953941 74.0145272,175.953941 C67.5229456,175.953941 62.8512134,179.233205 60.0480669,185.059615 C59.0995816,187.029423 58.6673808,189.121339 58.6673808,191.300017 L58.6673808,191.300017 Z M129.324452,176.573054 C128.154778,176.025172 125.964318,175.843079 124.699849,175.794879 C118.225941,175.551197 113.541891,179.196787 110.793908,184.90805 C109.845423,186.877858 109.412151,188.963347 109.412151,191.143096 C109.412151,197.780351 112.896536,202.426912 118.820954,205.259515 C120.985172,206.29369 123.779213,206.490778 126.144268,206.490778 C128.224937,206.490778 131.164117,205.215598 133.010209,204.338879 L133.330477,204.187314 L134.762577,204.187314 L134.920569,204.219448 C136.683113,204.585774 138.013456,205.702962 138.013456,207.599397 L138.013456,208.366326 C138.013456,213.083582 129.391397,214.164351 126.101423,214.393573 C114.491448,215.197456 105.808335,208.821021 102.498008,197.746611 C101.922812,195.824469 101.664134,193.914109 101.664134,191.910025 L101.664134,190.376703 C101.664134,181.97369 105.833506,175.318226 113.040603,171.036385 C116.392167,169.046226 120.098276,168.046862 123.991833,168.046862 L125.527297,168.046862 C129.657038,168.046862 133.461155,169.219749 136.871096,171.548921 L137.151732,171.742795 L137.328469,172.034678 C137.696402,172.645222 138.013456,173.350561 138.013456,174.077322 L138.013456,174.844251 C138.013456,176.822092 136.53369,177.885724 134.747046,178.230092 L134.59923,178.256335 L134.141322,178.256335 C132.984502,178.256335 130.356485,177.058812 129.324452,176.573054 L129.324452,176.573054 Z M154.457975,181.819983 C157.467314,178.80636 160.488435,175.798092 163.542762,172.833741 C164.39431,172.007364 167.617339,168.507448 168.886092,168.507448 L170.274276,168.507448 L170.432268,168.539582 C172.199632,168.906979 173.524084,170.02631 173.524084,171.925958 L173.524084,172.692351 C173.524084,173.988418 172.006293,175.493891 171.169205,176.380787 C169.388987,178.267582 167.51451,180.093322 165.692519,181.941556 L156.331381,191.444619 C160.362042,195.484385 164.388954,199.528435 168.386946,203.599264 C169.492887,204.725021 170.599364,205.852385 171.688167,206.994745 C172.073238,207.399632 172.641473,207.903598 172.964418,208.465406 C173.310929,208.990795 173.524084,209.583665 173.524084,210.216703 L173.524084,211.017908 L173.479096,211.202142 C173.043682,212.969506 171.921674,214.396251 169.962577,214.396251 L169.346142,214.396251 C168.064,214.396251 166.616368,212.945406 165.737506,212.117423 C163.928904,210.411113 162.18082,208.616971 160.407029,206.874243 L154.457975,201.034444 L154.457975,210.368268 C154.457975,212.518025 153.1121,214.245757 150.888971,214.245757 L150.278427,214.245757 C148.053155,214.245757 146.709423,212.518025 146.709423,210.368268 L146.709423,157.77205 C146.709423,155.621222 148.054226,153.901523 150.278427,153.901523 L150.888971,153.901523 C153.1121,153.901523 154.457975,155.621222 154.457975,157.77205 L154.457975,181.819983 L154.457975,181.819983 Z M251.035314,168.507448 L251.804385,168.507448 C254.128736,168.507448 255.679732,170.073439 255.679732,172.383866 C255.679732,175.5919 252.613088,176.412921 249.959364,176.412921 C246.479264,176.412921 243.157155,178.519833 240.75836,180.882745 C237.766695,183.831565 236.457238,187.608904 236.457238,191.760603 L236.457238,210.519833 C236.457238,212.670661 235.115113,214.396251 232.887163,214.396251 L232.276084,214.396251 C230.049205,214.396251 228.707079,212.670661 228.707079,210.519833 L228.707079,190.684117 C228.707079,183.066778 232.415331,176.849406 238.596285,172.488301 C242.288469,169.882778 246.515682,168.507448 251.035314,168.507448 L251.035314,168.507448 Z M195.960502,205.683146 C198.780251,206.667515 201.995782,206.527197 204.888904,206.02323 C206.368134,205.394477 210.152971,203.743866 211.544904,203.985406 L211.762343,204.021824 L211.962109,204.120368 C212.811515,204.532218 213.623431,205.114912 214.056703,205.979314 C215.071063,208.007498 214.583699,210.044787 212.591933,211.195715 L211.928904,211.578644 C204.578276,215.821389 196.760636,215.233339 189.434109,211.270695 C185.930979,209.377473 183.251013,206.565757 181.274243,203.139213 L180.811515,202.338008 C176.093188,194.16636 176.729975,185.570008 182.051347,177.798962 C183.88887,175.113105 186.289808,173.037791 189.097238,171.415029 L190.159264,170.802343 C197.081439,166.806494 204.500084,167.079632 211.609707,170.587046 C215.432033,172.47277 218.529205,175.284485 220.663431,178.980954 L221.046895,179.646661 C222.597356,182.332519 220.588987,184.673473 218.515816,186.273205 C216.110059,188.129473 213.680736,190.362778 211.374594,192.353473 C206.233172,196.791699 201.099247,201.240636 195.960502,205.683146 L195.960502,205.683146 Z M189.305573,201.009272 C195.056469,196.078326 200.808435,191.144167 206.542728,186.193406 C208.50236,184.503163 210.651582,182.749188 212.596218,180.971649 C211.035582,179.006126 208.430059,177.589021 206.215498,176.7439 C201.746745,175.040803 197.339046,175.612787 193.240368,177.978912 C187.874544,181.076619 185.589824,186.010243 185.790661,192.149423 C185.869389,194.566962 186.5201,196.896669 187.803314,198.953774 C188.255331,199.678929 188.760368,200.359632 189.305573,201.009272 L189.305573,201.009272 Z\",\"fill\":\"#364548\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M147.487598,45.7324184 L170.35354,45.7324184 L170.35354,69.1071464 L181.915314,69.1071464 C187.25436,69.1071464 192.746042,68.1559833 197.80231,66.4427113 C200.286795,65.6002678 203.075481,64.4279163 205.526226,62.9535063 C202.298377,58.7391464 200.650444,53.4177741 200.165222,48.1724519 C199.506477,41.0381925 200.94554,31.7520335 205.774192,26.1682343 L208.177808,23.3881172 L211.042008,25.6905105 C218.253389,31.484251 224.318126,39.5798494 225.387113,48.8087029 C234.070226,46.2545941 244.264703,46.8587113 251.91846,51.2760502 L255.058477,53.0878661 L253.405724,56.3135732 C246.932887,68.946477 233.40077,72.8598494 220.170711,72.167364 C200.373556,121.475749 157.272904,144.81995 105.013556,144.81995 C78.0146611,144.81995 53.2437155,134.72723 39.1380084,110.773021 L38.9066444,110.382059 L36.851682,106.200904 C32.0835481,95.6567029 30.4998828,84.1056402 31.5742259,72.5642176 L31.896636,69.1071464 L51.4495732,69.1071464 L51.4495732,45.7324184 L74.3149791,45.7324184 L74.3149791,22.8659414 L120.047933,22.8659414 L120.047933,0 L147.487598,0 L147.487598,45.7324184\",\"fill\":\"#364548\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M221.570142,54.3796485 C223.103464,42.4644017 214.18631,33.1048703 208.656067,28.6612887 C202.283381,36.0290544 201.293121,55.3388452 211.291046,63.4687197 C205.711531,68.4248368 193.953741,72.9171548 181.915314,72.9171548 L35.3703096,72.9171548 C34.1995649,85.4841841 36.4060921,97.0566695 41.4446862,106.962477 L43.1118996,110.011448 C44.1674979,111.802912 45.320569,113.531715 46.5668285,115.196251 L46.567364,115.196251 C52.5919331,115.582929 58.1468117,115.71682 63.2287866,115.604351 L63.2309289,115.604351 C73.2181423,115.383163 81.3667615,114.204921 87.5428954,112.064803 C88.4624603,111.745071 89.4645021,112.232971 89.7826276,113.151464 C90.1002176,114.069958 89.6139247,115.072536 88.695431,115.391197 C87.87441,115.675582 87.0180418,115.941757 86.1338243,116.194544 C86.1327531,116.195079 86.131682,116.195079 86.1306109,116.195615 C81.267682,117.583799 76.0534226,118.51836 69.3251213,118.933423 C69.7241172,118.939849 68.9089874,118.993406 68.9068452,118.993941 C68.678159,119.007866 68.3900251,119.040536 68.1602678,119.053389 C65.5124351,119.201741 62.6541255,119.232803 59.7320837,119.232803 C56.5363682,119.232803 53.3888536,119.172285 49.8701925,118.993941 L49.7802176,119.053389 C61.9905607,132.777238 81.0823766,141.008335 105.013556,141.008335 C155.661925,141.008335 198.622259,118.556385 217.645523,68.1506276 C231.142293,69.5355983 244.113138,66.0940586 250.013456,54.5762008 C240.614828,49.1525356 228.529272,50.8818745 221.570142,54.3796485\",\"fill\":\"#22A0C8\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M221.570142,54.3796485 C223.103464,42.4644017 214.18631,33.1048703 208.656067,28.6612887 C202.283381,36.0290544 201.293121,55.3388452 211.291046,63.4687197 C205.711531,68.4248368 193.953741,72.9171548 181.915314,72.9171548 L44.0480669,72.9171548 C43.449841,92.1632134 50.5921339,106.772351 63.2287866,115.604351 L63.2309289,115.604351 C73.2181423,115.383163 81.3667615,114.204921 87.5428954,112.064803 C88.4624603,111.745071 89.4645021,112.232971 89.7826276,113.151464 C90.1002176,114.069958 89.6139247,115.072536 88.695431,115.391197 C87.87441,115.675582 87.0180418,115.941757 86.1338243,116.194544 C86.1327531,116.195079 86.131682,116.195079 86.1306109,116.195615 C81.267682,117.583799 75.6051548,118.638326 68.8768536,119.053389 C68.8752469,119.053389 68.7140418,118.89754 68.7118996,118.898075 C85.9485188,127.739715 110.942259,127.708117 139.597121,116.700653 C171.727799,104.35749 201.625707,80.8408368 222.487565,53.9436987 C222.172653,54.0856234 221.86631,54.2312971 221.570142,54.3796485\",\"fill\":\"#37B1D9\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M35.6445188,88.1861088 C36.5555146,94.9176234 38.524251,101.220686 41.4446862,106.962477 L43.1118996,110.011448 C44.1674979,111.802912 45.320569,113.531715 46.567364,115.196251 C52.5930042,115.582929 58.1484184,115.71682 63.2309289,115.604351 C73.2181423,115.383163 81.3667615,114.204921 87.5428954,112.064803 C88.4624603,111.745071 89.4645021,112.232971 89.7826276,113.151464 C90.1002176,114.069958 89.6139247,115.072536 88.695431,115.391197 C87.87441,115.675582 87.0180418,115.941757 86.1338243,116.194544 C86.1327531,116.195079 86.131682,116.195079 86.1306109,116.195615 C81.267682,117.583799 75.6351464,118.578343 68.9068452,118.993941 C68.6760167,119.007866 68.273272,119.010544 68.0403013,119.023397 C65.3935397,119.172285 62.5646862,119.262795 59.6421088,119.262795 C56.4469289,119.262795 53.1794477,119.201741 49.6613222,119.023397 C61.8711297,132.747247 81.0823766,141.008335 105.013556,141.008335 C148.373423,141.008335 186.09754,124.550427 207.992502,88.1861088 L35.6445188,88.1861088\",\"fill\":\"#1B81A5\",\"key\":4}),React.createElement(\"path\",{\"d\":\"M45.3671632,88.1861088 C47.9592971,100.00549 54.1884519,109.284686 63.2309289,115.604351 C73.2181423,115.383163 81.3667615,114.204921 87.5428954,112.064803 C88.4624603,111.745071 89.4645021,112.232971 89.7826276,113.151464 C90.1002176,114.069958 89.6139247,115.072536 88.695431,115.391197 C87.87441,115.675582 87.0180418,115.941757 86.1338243,116.194544 C86.1327531,116.195079 86.131682,116.195079 86.1306109,116.195615 C81.267682,117.583799 75.5157155,118.578343 68.7874142,118.993941 C86.0229623,127.833975 110.944402,127.707046 139.597121,116.700653 C156.931213,110.040904 173.614059,100.126527 188.58149,88.1861088 L45.3671632,88.1861088\",\"fill\":\"#1D91B4\",\"key\":5}),React.createElement(\"path\",{\"d\":\"M55.2606527,49.5429623 L75.0776234,49.5429623 L75.0776234,69.3610042 L55.2606527,69.3610042 L55.2606527,49.5429623 Z M56.9112636,51.1946444 L58.475113,51.1946444 L58.475113,67.7103933 L56.9112636,67.7103933 L56.9112636,51.1946444 Z M59.8515146,51.1946444 L61.4780251,51.1946444 L61.4780251,67.7103933 L59.8515146,67.7103933 L59.8515146,51.1946444 Z M62.8533556,51.1946444 L64.4798661,51.1946444 L64.4798661,67.7103933 L62.8533556,67.7103933 L62.8533556,51.1946444 Z M65.8568033,51.1946444 L67.4833138,51.1946444 L67.4833138,67.7103933 L65.8568033,67.7103933 L65.8568033,51.1946444 Z M68.8597155,51.1946444 L70.4862259,51.1946444 L70.4862259,67.7103933 L68.8597155,67.7103933 L68.8597155,51.1946444 Z M71.8620921,51.1946444 L73.4270126,51.1946444 L73.4270126,67.7103933 L71.8620921,67.7103933 L71.8620921,51.1946444 Z\",\"fill\":\"#23A3C2\",\"key\":6}),React.createElement(\"path\",{\"d\":\"M78.125523,26.6770209 L97.944636,26.6770209 L97.944636,46.4939916 L78.125523,46.4939916 L78.125523,26.6770209 Z M79.7782762,28.3287029 L81.3410544,28.3287029 L81.3410544,44.8428452 L79.7782762,44.8428452 L79.7782762,28.3287029 Z M82.7185272,28.3287029 L84.3439665,28.3287029 L84.3439665,44.8428452 L82.7185272,44.8428452 L82.7185272,28.3287029 Z M85.7198326,28.3287029 L87.3463431,28.3287029 L87.3463431,44.8428452 L85.7198326,44.8428452 L85.7198326,28.3287029 Z M88.7227448,28.3287029 L90.3492552,28.3287029 L90.3492552,44.8428452 L88.7227448,44.8428452 L88.7227448,28.3287029 Z M91.7261925,28.3287029 L93.3527029,28.3287029 L93.3527029,44.8428452 L91.7261925,44.8428452 L91.7261925,28.3287029 Z M94.7280335,28.3287029 L96.2940251,28.3287029 L96.2940251,44.8428452 L94.7280335,44.8428452 L94.7280335,28.3287029 Z\",\"fill\":\"#23A3C2\",\"key\":7}),React.createElement(\"path\",{\"d\":\"M78.125523,49.5429623 L97.944636,49.5429623 L97.944636,69.3610042 L78.125523,69.3610042 L78.125523,49.5429623 Z M79.7782762,51.1946444 L81.3410544,51.1946444 L81.3410544,67.7103933 L79.7782762,67.7103933 L79.7782762,51.1946444 Z M82.7185272,51.1946444 L84.3439665,51.1946444 L84.3439665,67.7103933 L82.7185272,67.7103933 L82.7185272,51.1946444 Z M85.7198326,51.1946444 L87.3463431,51.1946444 L87.3463431,67.7103933 L85.7198326,67.7103933 L85.7198326,51.1946444 Z M88.7227448,51.1946444 L90.3492552,51.1946444 L90.3492552,67.7103933 L88.7227448,67.7103933 L88.7227448,51.1946444 Z M91.7261925,51.1946444 L93.3527029,51.1946444 L93.3527029,67.7103933 L91.7261925,67.7103933 L91.7261925,51.1946444 Z M94.7280335,51.1946444 L96.2940251,51.1946444 L96.2940251,67.7103933 L94.7280335,67.7103933 L94.7280335,51.1946444 Z\",\"fill\":\"#34BBDE\",\"key\":8}),React.createElement(\"path\",{\"d\":\"M100.992536,49.5429623 L120.810577,49.5429623 L120.810577,69.3610042 L100.992536,69.3610042 L100.992536,49.5429623 Z M102.644218,51.1946444 L104.206996,51.1946444 L104.206996,67.7103933 L102.644218,67.7103933 L102.644218,51.1946444 Z M105.583933,51.1946444 L107.210444,51.1946444 L107.210444,67.7103933 L105.583933,67.7103933 L105.583933,51.1946444 Z M108.586845,51.1946444 L110.213356,51.1946444 L110.213356,67.7103933 L108.586845,67.7103933 L108.586845,51.1946444 Z M111.589757,51.1946444 L113.216268,51.1946444 L113.216268,67.7103933 L111.589757,67.7103933 L111.589757,51.1946444 Z M114.592134,51.1946444 L116.219715,51.1946444 L116.219715,67.7103933 L114.592134,67.7103933 L114.592134,51.1946444 Z M117.595046,51.1946444 L119.158895,51.1946444 L119.158895,67.7103933 L117.595046,67.7103933 L117.595046,51.1946444 Z\",\"fill\":\"#23A3C2\",\"key\":9}),React.createElement(\"path\",{\"d\":\"M100.992536,26.6770209 L120.810577,26.6770209 L120.810577,46.4939916 L100.992536,46.4939916 L100.992536,26.6770209 Z M102.644218,28.3287029 L104.206996,28.3287029 L104.206996,44.8428452 L102.644218,44.8428452 L102.644218,28.3287029 Z M105.583933,28.3287029 L107.210444,28.3287029 L107.210444,44.8428452 L105.583933,44.8428452 L105.583933,28.3287029 Z M108.586845,28.3287029 L110.213356,28.3287029 L110.213356,44.8428452 L108.586845,44.8428452 L108.586845,28.3287029 Z M111.589757,28.3287029 L113.216268,28.3287029 L113.216268,44.8428452 L111.589757,44.8428452 L111.589757,28.3287029 Z M114.592134,28.3287029 L116.219715,28.3287029 L116.219715,44.8428452 L114.592134,44.8428452 L114.592134,28.3287029 Z M117.595046,28.3287029 L119.158895,28.3287029 L119.158895,44.8428452 L117.595046,44.8428452 L117.595046,28.3287029 Z\",\"fill\":\"#34BBDE\",\"key\":10}),React.createElement(\"path\",{\"d\":\"M123.859013,49.5429623 L143.676519,49.5429623 L143.676519,69.3610042 L123.859013,69.3610042 L123.859013,49.5429623 Z M125.510695,51.1946444 L127.074008,51.1946444 L127.074008,67.7103933 L125.510695,67.7103933 L125.510695,51.1946444 Z M128.450946,51.1946444 L130.077456,51.1946444 L130.077456,67.7103933 L128.450946,67.7103933 L128.450946,51.1946444 Z M131.452787,51.1946444 L133.079297,51.1946444 L133.079297,67.7103933 L131.452787,67.7103933 L131.452787,51.1946444 Z M134.456234,51.1946444 L136.082745,51.1946444 L136.082745,67.7103933 L134.456234,67.7103933 L134.456234,51.1946444 Z M137.459146,51.1946444 L139.085657,51.1946444 L139.085657,67.7103933 L137.459146,67.7103933 L137.459146,51.1946444 Z M140.461523,51.1946444 L142.025908,51.1946444 L142.025908,67.7103933 L140.461523,67.7103933 L140.461523,51.1946444 Z\",\"fill\":\"#34BBDE\",\"key\":11}),React.createElement(\"path\",{\"d\":\"M123.859013,26.6770209 L143.676519,26.6770209 L143.676519,46.4939916 L123.859013,46.4939916 L123.859013,26.6770209 Z M125.510695,28.3287029 L127.074008,28.3287029 L127.074008,44.8428452 L125.510695,44.8428452 L125.510695,28.3287029 Z M128.450946,28.3287029 L130.077456,28.3287029 L130.077456,44.8428452 L128.450946,44.8428452 L128.450946,28.3287029 Z M131.452787,28.3287029 L133.079297,28.3287029 L133.079297,44.8428452 L131.452787,44.8428452 L131.452787,28.3287029 Z M134.456234,28.3287029 L136.082745,28.3287029 L136.082745,44.8428452 L134.456234,44.8428452 L134.456234,28.3287029 Z M137.459146,28.3287029 L139.085657,28.3287029 L139.085657,44.8428452 L137.459146,44.8428452 L137.459146,28.3287029 Z M140.461523,28.3287029 L142.025908,28.3287029 L142.025908,44.8428452 L140.461523,44.8428452 L140.461523,28.3287029 Z\",\"fill\":\"#23A3C2\",\"key\":12}),React.createElement(\"path\",{\"d\":\"M123.859013,3.81054393 L143.676519,3.81054393 L143.676519,23.6285858 L123.859013,23.6285858 L123.859013,3.81054393 Z M125.510695,5.46115481 L127.074008,5.46115481 L127.074008,21.9769038 L125.510695,21.9769038 L125.510695,5.46115481 Z M128.450946,5.46115481 L130.077456,5.46115481 L130.077456,21.9769038 L128.450946,21.9769038 L128.450946,5.46115481 Z M131.452787,5.46115481 L133.079297,5.46115481 L133.079297,21.9769038 L131.452787,21.9769038 L131.452787,5.46115481 Z M134.456234,5.46115481 L136.082745,5.46115481 L136.082745,21.9769038 L134.456234,21.9769038 L134.456234,5.46115481 Z M137.459146,5.46115481 L139.085657,5.46115481 L139.085657,21.9769038 L137.459146,21.9769038 L137.459146,5.46115481 Z M140.461523,5.46115481 L142.025908,5.46115481 L142.025908,21.9769038 L140.461523,21.9769038 L140.461523,5.46115481 Z\",\"fill\":\"#34BBDE\",\"key\":13}),React.createElement(\"path\",{\"d\":\"M146.724954,49.5429623 L166.542996,49.5429623 L166.542996,69.3610042 L146.724954,69.3610042 L146.724954,49.5429623 Z M148.375565,51.1946444 L149.940485,51.1946444 L149.940485,67.7103933 L148.375565,67.7103933 L148.375565,51.1946444 Z M151.315816,51.1946444 L152.942326,51.1946444 L152.942326,67.7103933 L151.315816,67.7103933 L151.315816,51.1946444 Z M154.319264,51.1946444 L155.945774,51.1946444 L155.945774,67.7103933 L154.319264,67.7103933 L154.319264,51.1946444 Z M157.321105,51.1946444 L158.947615,51.1946444 L158.947615,67.7103933 L157.321105,67.7103933 L157.321105,51.1946444 Z M160.325088,51.1946444 L161.951063,51.1946444 L161.951063,67.7103933 L160.325088,67.7103933 L160.325088,51.1946444 Z M163.327464,51.1946444 L164.891314,51.1946444 L164.891314,67.7103933 L163.327464,67.7103933 L163.327464,51.1946444 Z\",\"fill\":\"#23A3C2\",\"key\":14}),React.createElement(\"path\",{\"d\":\"M96.7037322,101.491682 C99.7227113,101.491682 102.170243,103.940285 102.170243,106.959264 C102.170243,109.978243 99.7227113,112.425774 96.7037322,112.425774 C93.6842176,112.425774 91.2361506,109.978243 91.2361506,106.959264 C91.2361506,103.940285 93.6842176,101.491682 96.7037322,101.491682\",\"fill\":\"#D3ECEC\",\"key\":15}),React.createElement(\"path\",{\"d\":\"M96.7037322,103.042678 C97.2039498,103.042678 97.6811381,103.136937 98.1213724,103.307782 C97.6441841,103.583598 97.3212385,104.100418 97.3212385,104.691682 C97.3212385,105.574293 98.0367531,106.288736 98.919364,106.288736 C99.5240167,106.288736 100.049406,105.952937 100.320937,105.457004 C100.512669,105.919197 100.619247,106.426912 100.619247,106.959264 C100.619247,109.121339 98.8663431,110.874243 96.7037322,110.874243 C94.5416569,110.874243 92.787682,109.121339 92.787682,106.959264 C92.787682,104.796117 94.5416569,103.042678 96.7037322,103.042678\",\"fill\":\"#364548\",\"key\":16}),React.createElement(\"path\",{\"d\":\"M0,90.1623431 L254.327431,90.1623431 C248.78969,88.7575565 236.806427,86.8600502 238.782661,79.6026109 C228.713506,91.2543598 204.429925,87.7769372 198.301456,82.0313975 C191.476753,91.9297071 151.746946,88.167364 148.975933,80.4563013 C140.420285,90.4970711 113.908753,90.4970711 105.352569,80.4563013 C102.580485,88.167364 62.8512134,91.9297071 56.0259749,82.0313975 C49.8975063,87.7769372 25.6160669,91.2543598 15.545841,79.6026109 C17.5220753,86.8600502 5.53881172,88.7575565 0,90.1623431\",\"fill\":\"#364548\",\"key\":17}),React.createElement(\"path\",{\"d\":\"M111.237356,140.889975 C97.6977406,134.464803 90.2657071,125.730812 86.1306109,116.195615 C81.1016569,117.631464 75.0556653,118.548887 68.0311967,118.943063 C65.3849707,119.091414 62.6016402,119.167464 59.6801339,119.167464 C56.3125021,119.167464 52.7638494,119.067849 49.0384603,118.870226 C61.4549958,131.279264 76.7303766,140.833741 105.013556,141.008335 C107.101724,141.008335 109.174895,140.967632 111.237356,140.889975\",\"fill\":\"#BDD9D7\",\"key\":18}),React.createElement(\"path\",{\"d\":\"M91.1601004,124.993874 C89.2866946,122.451013 87.469523,119.255297 86.1338243,116.194544 C81.1037992,117.630929 75.0567364,118.548887 68.0311967,118.943063 C72.856636,121.56251 79.7584603,123.98969 91.1601004,124.993874\",\"fill\":\"#D3ECEC\",\"key\":19})]));\n}\n\nDocker.defaultProps = {\"width\":\"256px\",\"height\":\"215px\",\"viewBox\":\"0 0 256 215\",\"version\":\"1.1\"};\n\nmodule.exports = Docker;\n\nDocker.default = Docker;\n","var React = require('react');\n\nfunction Elasticsearch (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"g\",null,[React.createElement(\"path\",{\"d\":\"M14.3443,80.1733 L203.5503,80.1733 C224.4013,80.1733 243.0203,70.6123 255.5133,55.6863 C229.4533,21.8353 188.5523,0.0003 142.5303,0.0003 C86.1783,0.0003 37.4763,32.7113 14.3443,80.1733\",\"fill\":\"#F0BF1A\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M187.5152,102.4438 L5.7552,102.4438 C2.0332,115.1648 0.0002,128.6068 0.0002,142.5298 C0.0002,156.4538 2.0332,169.8968 5.7552,182.6168 L187.5152,182.6168 C209.3402,182.6168 227.6022,164.8008 227.6022,142.5298 C227.6022,120.2598 209.7862,102.4438 187.5152,102.4438\",\"fill\":\"#07A5DE\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M255.9996,228.7548 C243.5856,214.1638 225.1166,204.8868 204.4406,204.8868 L14.3446,204.8868 C37.4766,252.3498 86.1786,285.0598 142.5296,285.0598 C188.8356,285.0598 229.9656,262.9628 255.9996,228.7548\",\"fill\":\"#3EBEB0\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M5.7555,102.4438 C2.0325,115.1648 0.0005,128.6068 0.0005,142.5298 C0.0005,156.4538 2.0325,169.8968 5.7555,182.6168 L124.7135,182.6168 C127.8315,170.5908 129.6125,157.2288 129.6125,142.5298 C129.6125,127.8318 127.8315,114.4698 124.7135,102.4438 L5.7555,102.4438 Z\",\"fill\":\"#231F20\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M70.8199,19.1528 C46.7669,33.4058 26.7239,54.7848 14.2529,80.1738 L119.3689,80.1738 C108.6789,55.6758 91.7539,35.1878 70.8199,19.1528\",\"fill\":\"#D7A229\",\"key\":4}),React.createElement(\"path\",{\"d\":\"M75.274,268.1347 C95.762,251.6547 112.242,229.8297 122.487,204.8867 L14.253,204.8867 C27.615,231.6117 48.995,253.8817 75.274,268.1347\",\"fill\":\"#019B8F\",\"key\":5})]));\n}\n\nElasticsearch.defaultProps = {\"width\":\"256px\",\"height\":\"286px\",\"viewBox\":\"0 0 256 286\",\"version\":\"1.1\",\"preserveAspectRatio\":\"xMidYMid\"};\n\nmodule.exports = Elasticsearch;\n\nElasticsearch.default = Elasticsearch;\n","var React = require('react');\n\nfunction Java (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"g\",null,[React.createElement(\"path\",{\"d\":\"M82.5539491,267.472524 C82.5539491,267.472524 69.35552,275.147869 91.9468218,277.745105 C119.315549,280.867375 133.303389,280.419607 163.463913,274.711273 C163.463913,274.711273 171.393396,279.683258 182.467491,283.989644 C114.855564,312.966982 29.4483782,282.311215 82.5539491,267.472524\",\"fill\":\"#5382A1\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M74.2921309,229.658996 C74.2921309,229.658996 59.4888145,240.616727 82.0968727,242.955171 C111.333004,245.971316 134.421411,246.218007 174.373236,238.524975 C174.373236,238.524975 179.899113,244.127185 188.588218,247.190807 C106.841367,271.094691 15.79008,249.075898 74.2921309,229.658996\",\"fill\":\"#5382A1\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M143.941818,165.514705 C160.601367,184.695156 139.564684,201.955142 139.564684,201.955142 C139.564684,201.955142 181.866124,180.117876 162.438982,152.772422 C144.294633,127.271098 130.380335,114.600495 205.706705,70.9138618 C205.706705,70.9138618 87.4691491,100.44416 143.941818,165.514705\",\"fill\":\"#E76F00\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M233.364015,295.441687 C233.364015,295.441687 243.131113,303.489396 222.60736,309.715316 C183.580858,321.537862 60.1748945,325.107898 25.8932364,310.186356 C13.5698618,304.825251 36.67968,297.385425 43.9491491,295.824291 C51.5304727,294.180305 55.8629236,294.486575 55.8629236,294.486575 C42.15808,284.832116 -32.7195927,313.443607 17.8287709,321.637469 C155.681513,343.993251 269.121164,311.570618 233.364015,295.441687\",\"fill\":\"#5382A1\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M88.9008873,190.479825 C88.9008873,190.479825 26.1287564,205.389265 66.6717091,210.803433 C83.7901964,213.095331 117.915462,212.576815 149.702284,209.913484 C175.680233,207.722124 201.765236,203.062924 201.765236,203.062924 C201.765236,203.062924 192.605091,206.985775 185.977949,211.510924 C122.233949,228.275665 -0.907636364,220.476509 34.5432436,203.328233 C64.5241018,188.83584 88.9008873,190.479825 88.9008873,190.479825\",\"fill\":\"#5382A1\",\"key\":4}),React.createElement(\"path\",{\"d\":\"M201.506444,253.422313 C266.305164,219.7504 236.344785,187.392 215.432844,191.751447 C210.307258,192.818269 208.021876,193.742662 208.021876,193.742662 C208.021876,193.742662 209.924655,190.761891 213.558924,189.471651 C254.929455,174.927127 286.746065,232.368873 200.204102,255.11936 C200.204102,255.120291 201.206691,254.223825 201.506444,253.422313\",\"fill\":\"#5382A1\",\"key\":5}),React.createElement(\"path\",{\"d\":\"M162.438982,0.371432727 C162.438982,0.371432727 198.325527,36.27008 128.402153,91.4720582 C72.3307055,135.753542 115.616116,161.001658 128.37888,189.848669 C95.6490473,160.318371 71.6297309,134.322735 87.7437673,110.128407 C111.395375,74.6132945 176.918342,57.3942691 162.438982,0.371432727\",\"fill\":\"#E76F00\",\"key\":6}),React.createElement(\"path\",{\"d\":\"M95.2683055,344.665367 C157.466996,348.646865 252.980131,342.45632 255.24224,313.025629 C255.24224,313.025629 250.893964,324.182575 203.838371,333.042967 C150.750487,343.033484 85.2740655,341.867055 46.4393309,335.464262 C46.4402618,335.463331 54.3892945,342.043927 95.2683055,344.665367\",\"fill\":\"#5382A1\",\"key\":7})]));\n}\n\nJava.defaultProps = {\"width\":\"256px\",\"height\":\"346px\",\"viewBox\":\"0 0 256 346\",\"version\":\"1.1\",\"preserveAspectRatio\":\"xMidYMid\"};\n\nmodule.exports = Java;\n\nJava.default = Java;\n","var React = require('react');\n\nfunction Javascript (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"g\",null,[React.createElement(\"path\",{\"d\":\"M0,0 L256,0 L256,256 L0,256 L0,0 Z\",\"fill\":\"#F7DF1E\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M67.311746,213.932292 L86.902654,202.076241 C90.6821079,208.777346 94.1202286,214.447137 102.367086,214.447137 C110.272203,214.447137 115.256076,211.354819 115.256076,199.326883 L115.256076,117.528787 L139.313575,117.528787 L139.313575,199.666997 C139.313575,224.58433 124.707759,235.925943 103.3984,235.925943 C84.1532952,235.925943 72.9819429,225.958603 67.3113397,213.93026\",\"fill\":\"#000000\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M152.380952,211.354413 L171.969422,200.0128 C177.125994,208.433981 183.827911,214.619835 195.684368,214.619835 C205.652521,214.619835 212.009041,209.635962 212.009041,202.762159 C212.009041,194.513676 205.479416,191.592025 194.481168,186.78207 L188.468419,184.202565 C171.111213,176.81473 159.597308,167.53534 159.597308,147.944838 C159.597308,129.901308 173.344508,116.153295 194.825752,116.153295 C210.119924,116.153295 221.117765,121.48094 229.021663,135.400432 L210.29059,147.428775 C206.166146,140.040127 201.699556,137.119289 194.826159,137.119289 C187.78047,137.119289 183.312254,141.587098 183.312254,147.428775 C183.312254,154.646349 187.78047,157.568406 198.089956,162.036622 L204.103924,164.614095 C224.553448,173.378641 236.067352,182.313448 236.067352,202.418387 C236.067352,224.071924 219.055137,235.927975 196.200432,235.927975 C173.860978,235.927975 159.425829,225.274311 152.381359,211.354413\",\"fill\":\"#000000\",\"key\":2})]));\n}\n\nJavascript.defaultProps = {\"width\":\"256px\",\"height\":\"256px\",\"viewBox\":\"0 0 256 256\",\"version\":\"1.1\",\"preserveAspectRatio\":\"xMidYMid\"};\n\nmodule.exports = Javascript;\n\nJavascript.default = Javascript;\n","var React = require('react');\n\nfunction Jenkins (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"g\",null,[React.createElement(\"path\",{\"d\":\"M250.741085,169.277519 C250.741085,238.734884 195.671318,295.094574 127.702326,295.094574 C59.7333333,295.094574 4.66356589,238.734884 4.66356589,169.277519 C4.66356589,99.820155 59.7333333,43.4604651 127.702326,43.4604651 C195.671318,43.4604651 250.741085,99.820155 250.741085,169.277519\",\"fill\":\"#D33833\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M9.72403101,200.434109 C9.72403101,200.434109 0.79379845,69.2589147 121.748837,65.4883721 L113.314729,51.3984496 L47.7271318,73.4263566 L28.9736434,94.9581395 L12.6015504,126.313178 L3.2744186,162.827907 L6.05271318,187.237209\",\"fill\":\"#EF3D3A\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M43.4604651,83.448062 C21.9286822,105.575194 8.53333333,136.037209 8.53333333,169.773643 L8.53333333,169.773643 C8.53333333,203.510078 21.9286822,233.972093 43.4604651,256.099225 L43.4604651,256.099225 C65.0914729,278.226357 94.7596899,291.820155 127.702326,291.820155 L127.702326,291.820155 C160.644961,291.820155 190.313178,278.226357 211.944186,256.099225 L211.944186,256.099225 C233.475969,233.972093 246.871318,203.510078 246.871318,169.773643 L246.871318,169.773643 C246.871318,136.037209 233.475969,105.575194 211.944186,83.448062 L211.944186,83.448062 C190.313178,61.420155 160.644961,47.7271318 127.702326,47.7271318 L127.702326,47.7271318 C94.8589147,47.7271318 65.0914729,61.3209302 43.4604651,83.448062 L43.4604651,83.448062 L43.4604651,83.448062 Z M38.0031008,261.35814 C15.0821705,237.941085 0.893023256,205.494574 0.893023256,169.773643 L0.893023256,169.773643 C0.893023256,134.052713 15.0821705,101.606202 38.0031008,78.0899225 L38.0031008,78.0899225 C60.924031,54.6728682 92.675969,40.0868217 127.702326,40.0868217 L127.702326,40.0868217 C162.728682,40.0868217 194.48062,54.6728682 217.40155,78.0899225 L217.40155,78.0899225 C240.322481,101.506977 254.511628,133.953488 254.511628,169.773643 L254.511628,169.773643 C254.511628,205.494574 240.322481,237.941085 217.40155,261.35814 L217.40155,261.35814 C194.48062,284.874419 162.728682,299.36124 127.702326,299.36124 L127.702326,299.36124 C92.675969,299.36124 60.924031,284.874419 38.0031008,261.35814 L38.0031008,261.35814 L38.0031008,261.35814 Z\",\"fill\":\"#231F20\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M179.497674,169.972093 L160.744186,172.750388 L135.44186,175.627907 L119.069767,176.024806 L103.094574,175.528682 L90.8899225,171.75814 L80.0744186,160.049612 L71.6403101,136.136434 L69.7550388,130.976744 L58.5426357,127.206202 L51.9937984,116.390698 L47.3302326,100.911628 L52.4899225,87.3178295 L64.6945736,83.0511628 L74.5178295,87.7147287 L79.1813953,98.0341085 L84.8372093,97.1410853 L86.7224806,94.7596899 L84.8372093,83.944186 L84.3410853,70.3503876 L87.1193798,51.5968992 L87.020155,40.8806202 L95.5534884,27.1875969 L110.536434,16.372093 L136.731783,5.15968992 L165.804651,9.42635659 L191.106977,27.6837209 L202.815504,46.4372093 L210.356589,60.0310078 L212.24186,93.7674419 L206.586047,122.84031 L196.266667,148.63876 L186.542636,162.431008\",\"fill\":\"#F0D6B7\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M163.621705,251.03876 L96.6449612,253.817054 L96.6449612,265.029457 L102.300775,304.421705 L99.5224806,307.696124 L52.6883721,291.72093 L49.4139535,286.065116 L44.7503876,233.07907 L33.7364341,201.327132 L31.3550388,193.786047 L68.8620155,167.987597 L80.5705426,163.324031 L90.8899225,176.024806 L99.820155,183.962791 L110.139535,187.237209 L114.803101,188.626357 L120.458915,213.035659 L124.725581,218.195349 L135.541085,214.424806 L128,229.010853 L168.682171,248.260465 L163.621705,251.03876\",\"fill\":\"#335061\",\"key\":4}),React.createElement(\"path\",{\"d\":\"M52.4899225,87.5162791 L64.6945736,83.2496124 L74.5178295,87.9131783 L79.1813953,98.2325581 L84.8372093,97.3395349 L86.2263566,91.6837209 L83.448062,80.8682171 L86.2263566,55.0697674 L83.8449612,40.979845 L92.2790698,31.1565891 L110.536434,16.6697674 L105.376744,9.6248062 L79.5782946,22.3255814 L68.7627907,30.7596899 L62.7100775,43.8573643 L53.3829457,56.5581395 L50.6046512,71.5410853 L52.4899225,87.5162791\",\"fill\":\"#6D6B6D\",\"key\":5}),React.createElement(\"path\",{\"d\":\"M71.7395349,43.4604651 C71.7395349,43.4604651 78.7844961,26.096124 106.865116,17.6620155 C134.945736,9.22790698 108.254264,11.6093023 108.254264,11.6093023 L77.7922481,23.3178295 L66.0837209,35.0263566 L60.924031,44.3534884 L71.7395349,43.4604651\",\"fill\":\"#DCD9D8\",\"key\":6}),React.createElement(\"path\",{\"d\":\"M57.6496124,84.2418605 C57.6496124,84.2418605 47.8263566,51.3984496 85.3333333,46.7348837 L83.944186,41.0790698 L58.1457364,47.1317829 L50.6046512,71.5410853 L52.4899225,87.5162791 L57.6496124,84.2418605\",\"fill\":\"#DCD9D8\",\"key\":7}),React.createElement(\"path\",{\"d\":\"M72.6325581,127.80155 L78.7844961,121.848062 C78.7844961,121.848062 81.5627907,122.145736 82.0589147,125.420155 C82.5550388,128.694574 83.944186,158.263566 104.086822,174.139535 C105.972093,175.627907 89.103876,171.75814 89.103876,171.75814 L74.1209302,148.341085\",\"fill\":\"#F7E4CD\",\"key\":8}),React.createElement(\"path\",{\"d\":\"M158.858915,118.871318 C158.858915,118.871318 159.950388,104.682171 163.820155,105.773643 C167.689922,106.865116 167.689922,110.734884 167.689922,110.734884 C167.689922,110.734884 158.362791,116.688372 158.858915,118.871318\",\"fill\":\"#F7E4CD\",\"key\":9}),React.createElement(\"path\",{\"d\":\"M197.755039,66.8775194 C197.755039,66.8775194 190.015504,68.4651163 189.32093,75.3116279 C188.626357,82.1581395 197.755039,76.7007752 199.144186,76.2046512\",\"fill\":\"#F7E4CD\",\"key\":10}),React.createElement(\"path\",{\"d\":\"M141.097674,67.3736434 C141.097674,67.3736434 130.778295,68.7627907 130.778295,75.3116279 C130.778295,81.8604651 142.486822,81.3643411 145.76124,78.5860465\",\"fill\":\"#F7E4CD\",\"key\":11}),React.createElement(\"path\",{\"d\":\"M77.3953488,97.8356589 C77.3953488,97.8356589 59.6341085,87.020155 57.7488372,97.3395349 C55.8635659,107.658915 51.696124,115.100775 60.5271318,125.916279 L54.4744186,124.031008 L48.8186047,109.544186 L46.9333333,95.4542636 L57.7488372,84.2418605 L69.9534884,85.1348837 L76.9984496,90.7906977 L77.3953488,97.8356589\",\"fill\":\"#F7E4CD\",\"key\":12}),React.createElement(\"path\",{\"d\":\"M85.8294574,68.2666667 C85.8294574,68.2666667 93.7674419,26.9891473 134.052713,19.0511628 C167.193798,12.5023256 184.657364,20.4403101 191.206202,27.9813953 C191.206202,27.9813953 161.637209,-7.14418605 133.556589,3.57209302 C105.475969,14.3875969 84.8372093,34.0341085 85.3333333,46.6356589 C86.1271318,68.2666667 85.8294574,68.2666667 85.8294574,68.2666667\",\"fill\":\"#F7E4CD\",\"key\":13}),React.createElement(\"path\",{\"d\":\"M194.48062,32.6449612 C194.48062,32.6449612 180.886822,32.1488372 180.390698,44.3534884 C180.390698,44.3534884 180.390698,46.2387597 181.283721,48.124031 C181.283721,48.124031 192.099225,35.9193798 198.648062,42.4682171\",\"fill\":\"#F7E4CD\",\"key\":14}),React.createElement(\"path\",{\"d\":\"M135.044961,49.4139535 C135.044961,49.4139535 132.663566,30.7596899 116.787597,41.5751938 C106.468217,48.620155 107.460465,58.4434109 109.246512,60.3286822 C111.131783,62.2139535 110.635659,65.9844961 112.024806,63.4046512 C113.413953,60.8248062 113.017054,52.3906977 118.176744,50.0093023 C123.237209,47.627907 131.770543,45.048062 135.044961,49.4139535\",\"fill\":\"#F7E4CD\",\"key\":15}),React.createElement(\"path\",{\"d\":\"M90.9891473,176.024806 L46.9333333,195.671318 C46.9333333,195.671318 65.1906977,268.303876 55.8635659,290.827907 L49.3147287,288.446512 L48.8186047,260.762791 L36.6139535,208.372093 L31.4542636,193.885271 L77.3953488,162.927132 L90.9891473,176.024806\",\"fill\":\"#49728B\",\"key\":16}),React.createElement(\"path\",{\"d\":\"M95.4542636,216.210853 L101.705426,223.851163 L101.705426,251.931783 L94.2635659,251.931783 C94.2635659,251.931783 93.3705426,232.285271 93.3705426,229.903876 C93.3705426,227.522481 94.2635659,219.088372 94.2635659,219.088372\",\"fill\":\"#49728B\",\"key\":17}),React.createElement(\"path\",{\"d\":\"M95.6527132,256.19845 L74.5178295,257.091473 L80.5705426,261.35814 L95.5534884,263.739535\",\"fill\":\"#49728B\",\"key\":18}),React.createElement(\"path\",{\"d\":\"M167.789147,251.534884 L185.153488,251.03876 L189.420155,294.102326 L171.658915,296.483721 L167.789147,251.534884\",\"fill\":\"#335061\",\"key\":19}),React.createElement(\"path\",{\"d\":\"M172.452713,251.534884 L198.648062,250.145736 C198.648062,250.145736 209.463566,222.95814 209.463566,221.568992 C209.463566,220.179845 218.790698,182.176744 218.790698,182.176744 L197.655814,160.148837 L193.389147,156.378295 L182.176744,167.590698 L182.176744,211.150388 L172.452713,251.534884\",\"fill\":\"#335061\",\"key\":20}),React.createElement(\"path\",{\"d\":\"M184.16124,248.260465 L167.789147,251.534884 L170.170543,264.632558 C176.223256,267.410853 186.542636,259.968992 186.542636,259.968992\",\"fill\":\"#49728B\",\"key\":21}),React.createElement(\"path\",{\"d\":\"M184.657364,166.20155 L217.500775,190.610853 L218.393798,179.39845 L193.587597,156.477519 L184.657364,166.20155\",\"fill\":\"#49728B\",\"key\":22}),React.createElement(\"path\",{\"d\":\"M111.925581,343.813953 L102.20155,304.421705 L97.3395349,275.348837 L96.5457364,253.817054 L140.502326,251.435659 L167.789147,251.435659 L165.308527,300.651163 L169.575194,338.654264 L169.07907,345.699225 L133.457364,348.477519 L111.925581,343.813953\",\"fill\":\"#FFFFFF\",\"key\":23}),React.createElement(\"path\",{\"d\":\"M161.736434,251.03876 C161.736434,251.03876 159.355039,299.75814 166.4,334.486822 C166.4,334.486822 152.310078,343.417054 131.770543,345.699225 L171.162791,344.310078 L175.826357,341.531783 L170.170543,264.731783 L168.682171,248.260465\",\"fill\":\"#DCD9D8\",\"key\":24}),React.createElement(\"path\",{\"d\":\"M190.114729,290.431008 L208.372093,285.271318 L243.00155,283.386047 L248.16124,267.410853 L238.834109,239.727132 L228.018605,238.337984 L213.035659,243.00155 L198.747287,250.046512 L191.106977,248.657364 L185.153488,251.03876\",\"fill\":\"#FFFFFF\",\"key\":25}),React.createElement(\"path\",{\"d\":\"M189.817054,281.004651 C189.817054,281.004651 202.021705,275.348837 203.906977,275.844961 L198.747287,250.046512 L204.8,247.665116 C204.8,247.665116 209.066667,272.074419 209.066667,274.852713 C209.066667,274.852713 235.262016,276.24186 237.643411,276.24186 C237.643411,276.24186 243.299225,265.426357 241.910078,254.213953 L247.069767,269.196899 L247.565891,277.631008 L240.024806,288.843411 L231.590698,290.728682 L217.500775,290.232558 L212.837209,284.179845 L196.465116,286.56124 L191.305426,288.446512\",\"fill\":\"#DCD9D8\",\"key\":26}),React.createElement(\"path\",{\"d\":\"M171.36124,247.764341 L161.04186,221.568992 L150.226357,206.089922 C150.226357,206.089922 152.607752,199.541085 155.882171,199.541085 L166.697674,199.541085 L177.017054,203.311628 L176.124031,220.675969 L171.36124,247.764341\",\"fill\":\"#FFFFFF\",\"key\":27}),React.createElement(\"path\",{\"d\":\"M173.444961,238.834109 C173.444961,238.834109 160.347287,213.531783 160.347287,209.76124 C160.347287,209.76124 162.728682,204.105426 166.003101,205.494574 C169.277519,206.883721 176.322481,210.654264 176.322481,210.654264 L176.322481,201.724031 L160.347287,198.449612 L149.531783,199.83876 L167.789147,243.100775 L171.55969,243.596899\",\"fill\":\"#DCD9D8\",\"key\":28}),React.createElement(\"path\",{\"d\":\"M116.093023,177.017054 L103.094574,175.627907 L90.8899225,171.857364 L90.8899225,176.124031 L96.8434109,182.672868 L115.596899,191.106977\",\"fill\":\"#FFFFFF\",\"key\":29}),React.createElement(\"path\",{\"d\":\"M95.1565891,178.406202 C95.1565891,178.406202 109.643411,184.458915 114.406202,183.069767 L114.902326,188.725581 L101.804651,185.947287 L93.8666667,180.291473 L95.1565891,178.406202\",\"fill\":\"#DCD9D8\",\"key\":30}),React.createElement(\"path\",{\"d\":\"M190.114729,201.128682 C182.176744,200.930233 174.933333,199.937984 168.682171,198.151938 C169.07907,195.572093 168.285271,193.091473 168.979845,191.206202 C170.765891,189.916279 173.643411,189.916279 176.322481,189.618605 C174.04031,188.527132 170.765891,188.031008 168.186047,188.725581 C168.086822,186.939535 167.293023,185.848062 166.796899,184.458915 C171.262016,182.871318 181.779845,172.452713 187.733333,175.826357 C190.610853,177.513178 191.80155,186.84031 192,191.503876 C192.19845,195.274419 191.603101,199.044961 190.114729,201.128682\",\"fill\":\"#D33833\",\"key\":31}),React.createElement(\"path\",{\"d\":\"M190.114729,201.128682 C182.176744,200.930233 174.933333,199.937984 168.682171,198.151938 C169.07907,195.572093 168.285271,193.091473 168.979845,191.206202 C170.765891,189.916279 173.643411,189.916279 176.322481,189.618605 C174.04031,188.527132 170.765891,188.031008 168.186047,188.725581 C168.086822,186.939535 167.293023,185.848062 166.796899,184.458915 C171.262016,182.871318 181.779845,172.452713 187.733333,175.826357 C190.610853,177.513178 191.80155,186.84031 192,191.503876 C192.19845,195.274419 191.603101,199.044961 190.114729,201.128682 L190.114729,201.128682 Z\",\"stroke\":\"#D33833\",\"strokeWidth\":\"2\",\"key\":32}),React.createElement(\"path\",{\"d\":\"M152.111628,188.130233 C152.111628,188.725581 152.111628,189.32093 152.012403,189.916279 C149.531783,191.503876 145.562791,191.503876 142.784496,192.893023 C146.753488,193.091473 149.928682,194.083721 152.706977,195.373643 C152.607752,196.862016 152.607752,198.449612 152.508527,199.937984 C147.944186,203.013953 143.776744,207.677519 138.418605,210.654264 C135.83876,212.043411 127.007752,215.615504 124.328682,214.92093 C122.84031,214.524031 122.64186,212.63876 122.046512,210.852713 C120.756589,207.082171 117.779845,200.930233 117.482171,195.175194 C117.184496,187.931783 116.390698,175.727132 124.229457,177.215504 C130.579845,178.406202 137.922481,181.283721 142.784496,183.962791 C145.860465,185.748837 147.547287,187.733333 152.111628,188.130233\",\"fill\":\"#D33833\",\"key\":33}),React.createElement(\"path\",{\"d\":\"M152.111628,188.130233 C152.111628,188.725581 152.111628,189.32093 152.012403,189.916279 C149.531783,191.503876 145.562791,191.503876 142.784496,192.893023 C146.753488,193.091473 149.928682,194.083721 152.706977,195.373643 C152.607752,196.862016 152.607752,198.449612 152.508527,199.937984 C147.944186,203.013953 143.776744,207.677519 138.418605,210.654264 C135.83876,212.043411 127.007752,215.615504 124.328682,214.92093 C122.84031,214.524031 122.64186,212.63876 122.046512,210.852713 C120.756589,207.082171 117.779845,200.930233 117.482171,195.175194 C117.184496,187.931783 116.390698,175.727132 124.229457,177.215504 C130.579845,178.406202 137.922481,181.283721 142.784496,183.962791 C145.860465,185.748837 147.547287,187.733333 152.111628,188.130233 L152.111628,188.130233 Z\",\"stroke\":\"#D33833\",\"strokeWidth\":\"2\",\"key\":34}),React.createElement(\"path\",{\"d\":\"M156.576744,196.762791 C155.882171,192.793798 155.088372,191.702326 155.386047,188.229457 C166.003101,181.184496 167.888372,200.334884 156.576744,196.762791\",\"fill\":\"#D33833\",\"key\":35}),React.createElement(\"path\",{\"d\":\"M156.576744,196.762791 C155.882171,192.793798 155.088372,191.702326 155.386047,188.229457 C166.003101,181.184496 167.888372,200.334884 156.576744,196.762791 L156.576744,196.762791 Z\",\"stroke\":\"#D33833\",\"strokeWidth\":\"2\",\"key\":36}),React.createElement(\"path\",{\"d\":\"M171.857364,199.937984 C171.857364,199.937984 168.582946,195.274419 170.964341,193.885271 C173.345736,192.496124 175.627907,193.885271 177.017054,191.503876 C178.406202,189.122481 177.017054,187.733333 177.513178,184.955039 C178.009302,182.176744 180.291473,181.68062 182.672868,181.184496 C185.054264,180.688372 191.603101,179.795349 192.496124,182.077519 L189.717829,173.643411 L184.062016,171.75814 L166.300775,182.077519 L165.407752,187.237209 L165.407752,197.556589\",\"fill\":\"#EF3D3A\",\"key\":37}),React.createElement(\"path\",{\"d\":\"M122.64186,215.417054 C122.046512,208.074419 121.451163,200.831008 120.855814,193.488372 C119.863566,182.573643 123.435659,184.458915 132.96124,184.458915 C134.449612,184.458915 141.891473,186.145736 142.387597,187.237209 C144.967442,192.496124 138.12093,191.305426 145.364341,195.274419 C151.417054,198.548837 162.232558,193.289922 159.751938,185.848062 C158.362791,184.16124 152.607752,185.351938 150.524031,184.260465 C146.852713,182.375194 143.181395,180.489922 139.510078,178.604651 C134.846512,176.223256 124.130233,172.651163 119.168992,176.024806 C106.567442,184.55814 119.962791,205.990698 124.427907,214.92093\",\"fill\":\"#EF3D3A\",\"key\":38}),React.createElement(\"path\",{\"d\":\"M135.044961,49.4139535 C122.244961,46.4372093 115.894574,54.772093 112.024806,63.4046512 C108.551938,62.6108527 109.941085,57.848062 110.834109,55.4666667 C113.116279,49.2155039 122.344186,40.7813953 129.885271,41.972093 C133.060465,42.3689922 137.426357,45.3457364 135.044961,49.4139535\",\"fill\":\"#231F20\",\"key\":39}),React.createElement(\"path\",{\"d\":\"M197.258915,63.9007752 L197.854264,63.9007752 C200.731783,69.8542636 203.212403,76.2046512 206.883721,81.5627907 C204.403101,87.3178295 188.427907,92.2790698 188.626357,82.1581395 C192.099225,80.6697674 198.052713,81.8604651 201.128682,79.875969 C199.342636,75.0139535 196.862016,70.8465116 197.258915,63.9007752\",\"fill\":\"#231F20\",\"key\":40}),React.createElement(\"path\",{\"d\":\"M141.494574,64.0992248 C144.272868,69.1596899 145.165891,74.4186047 149.035659,78.1891473 C150.821705,79.875969 154.195349,81.9596899 152.508527,86.7224806 C152.111628,87.8139535 149.234109,90.2945736 147.547287,90.7906977 C141.494574,92.5767442 127.305426,91.1875969 132.068217,83.5472868 C137.128682,83.7457364 143.875969,86.8217054 147.646512,83.1503876 C144.768992,78.5860465 139.609302,69.4573643 141.494574,64.0992248\",\"fill\":\"#231F20\",\"key\":41}),React.createElement(\"path\",{\"d\":\"M194.976744,115.100775 C185.848062,120.955039 175.627907,127.404651 160.545736,125.916279 C157.370543,123.137984 156.08062,116.886822 159.255814,112.818605 C160.843411,115.596899 159.851163,120.756589 164.415504,121.550388 C172.948837,123.03876 182.871318,116.291473 189.023256,114.009302 C192.793798,107.55969 188.725581,105.277519 185.252713,101.110078 C178.207752,92.675969 168.88062,82.1581395 169.178295,69.5565891 C172.055814,67.4728682 172.254264,72.7317829 172.651163,73.6248062 C176.322481,82.1581395 185.550388,93.172093 192.19845,100.514729 C193.885271,102.300775 196.564341,104.086822 196.862016,105.277519 C197.755039,108.651163 194.579845,112.818605 194.976744,115.100775\",\"fill\":\"#231F20\",\"key\":42}),React.createElement(\"path\",{\"d\":\"M74.1209302,108.948837 C71.2434109,107.262016 70.5488372,100.117829 67.1751938,99.9193798 C62.3131783,99.6217054 63.2062016,109.246512 63.2062016,114.902326 C59.9317829,111.925581 59.3364341,102.59845 61.7178295,97.8356589 C58.9395349,96.4465116 57.7488372,99.324031 56.1612403,100.316279 C58.2449612,85.9286822 77.296124,93.6682171 74.1209302,108.948837\",\"fill\":\"#231F20\",\"key\":43}),React.createElement(\"path\",{\"d\":\"M200.731783,121.153488 C196.465116,129.289922 190.412403,138.220155 177.910078,138.517829 C177.612403,135.937984 177.413953,131.869767 177.910078,130.282171 C187.534884,129.289922 193.488372,124.427907 200.731783,121.153488\",\"fill\":\"#231F20\",\"key\":44}),React.createElement(\"path\",{\"d\":\"M140.8,126.412403 C148.737984,130.579845 163.423256,131.075969 174.337984,130.778295 C174.933333,133.15969 174.933333,136.136434 174.933333,139.013953 C160.942636,139.609302 144.471318,136.136434 140.8,126.412403\",\"fill\":\"#231F20\",\"key\":45}),React.createElement(\"path\",{\"d\":\"M139.311628,134.151938 C144.868217,148.043411 163.820155,146.455814 179.795349,146.058915 C179.100775,147.844961 177.612403,150.027907 175.627907,150.722481 C170.468217,152.806202 156.378295,154.393798 149.234109,150.623256 C144.768992,148.24186 141.792248,142.784496 139.311628,139.609302 C138.220155,138.12093 132.266667,134.251163 139.311628,134.151938\",\"fill\":\"#231F20\",\"key\":46}),React.createElement(\"path\",{\"d\":\"M194.282171,210.654264 C187.832558,221.767442 181.581395,233.178295 173.941085,242.902326 C177.116279,233.475969 178.505426,217.6 179.00155,205.494574 C185.748837,202.31938 191.503876,206.189147 194.282171,210.654264\",\"fill\":\"#81B0C4\",\"key\":47}),React.createElement(\"path\",{\"d\":\"M229.110078,250.542636 C221.866667,252.031008 216.806202,259.075969 209.662016,258.579845 C213.631008,253.122481 220.378295,250.741085 229.110078,250.542636\",\"fill\":\"#231F20\",\"key\":48}),React.createElement(\"path\",{\"d\":\"M232.285271,261.854264 C226.331783,262.449612 219.386047,263.44186 213.432558,262.945736 C216.310078,258.579845 227.224806,260.167442 232.285271,261.854264\",\"fill\":\"#231F20\",\"key\":49}),React.createElement(\"path\",{\"d\":\"M234.368992,271.677519 C227.72093,271.776744 219.485271,271.677519 213.134884,271.181395 C216.905426,267.113178 230.102326,269.693023 234.368992,271.677519\",\"fill\":\"#231F20\",\"key\":50}),React.createElement(\"path\",{\"d\":\"M181.779845,298.468217 C182.772093,306.803101 186.046512,315.237209 185.649612,324.365891 C181.978295,325.556589 179.894574,326.648062 174.933333,326.648062 C174.635659,318.908527 173.544186,307.00155 173.84186,299.55969 C176.223256,299.75814 179.795349,297.872868 181.779845,298.468217\",\"fill\":\"#DCD9D8\",\"key\":51}),React.createElement(\"path\",{\"d\":\"M171.063566,175.429457 C167.689922,177.612403 164.911628,180.291473 161.637209,182.672868 C154.493023,183.069767 150.623256,182.176744 145.463566,178.108527 C145.562791,177.810853 146.058915,177.910078 146.058915,177.513178 C153.699225,180.886822 163.423256,176.124031 171.063566,175.429457\",\"fill\":\"#F0D6B7\",\"key\":52}),React.createElement(\"path\",{\"d\":\"M131.175194,227.324031 C133.258915,218.294574 141.494574,213.531783 148.936434,208.570543 C156.576744,218.294574 161.24031,230.796899 166.4,242.902326 C154.195349,239.231008 141.792248,233.376744 131.175194,227.324031\",\"fill\":\"#81B0C4\",\"key\":53}),React.createElement(\"path\",{\"d\":\"M173.84186,299.658915 C173.544186,307.100775 174.536434,318.908527 174.933333,326.747287 C179.894574,326.747287 181.978295,325.655814 185.649612,324.465116 C186.046512,315.336434 182.772093,306.902326 181.779845,298.567442 C179.795349,297.872868 176.223256,299.75814 173.84186,299.658915 L173.84186,299.658915 Z M97.2403101,257.587597 C100.514729,287.454264 105.178295,312.458915 113.810853,338.951938 C132.96124,344.806202 155.981395,345.302326 172.948837,340.043411 C169.872868,325.15969 171.162791,307.00155 169.376744,291.026357 C167.987597,279.020155 168.682171,267.013953 166.796899,254.809302 C146.257364,250.542636 117.283721,253.817054 97.2403101,257.587597 L97.2403101,257.587597 Z M171.658915,255.007752 C171.460465,267.807752 172.254264,280.508527 173.246512,293.308527 C178.207752,292.613953 181.482171,292.117829 186.046512,291.026357 C184.55814,278.722481 184.756589,264.731783 181.68062,253.817054 C178.207752,253.916279 175.131783,253.817054 171.658915,255.007752 L171.658915,255.007752 Z M196.564341,252.924031 C194.182946,252.427907 191.503876,252.924031 189.32093,252.924031 C190.412403,263.342636 192.893023,274.852713 193.786047,285.866667 C197.258915,285.965891 199.144186,284.27907 202.021705,283.782946 C202.220155,274.15814 201.227907,260.862016 196.564341,252.924031 L196.564341,252.924031 L196.564341,252.924031 Z M234.368992,287.454264 C241.711628,285.668217 246.275969,276.737984 244.192248,267.510078 C242.803101,261.35814 240.421705,249.649612 237.742636,245.68062 C235.857364,242.803101 230.59845,238.933333 226.331783,241.612403 C219.485271,245.978295 207.47907,247.268217 202.517829,252.527132 C204.99845,260.862016 205.792248,272.173643 206.784496,282.691473 C215.317829,283.187597 225.736434,280.310078 232.88062,283.386047 C227.91938,284.973643 221.568992,284.973643 217.302326,287.355039 C220.874419,289.04186 229.010853,288.744186 234.368992,287.454264 L234.368992,287.454264 L234.368992,287.454264 Z M166.300775,242.902326 C161.141085,230.796899 156.477519,218.294574 148.837209,208.570543 C141.395349,213.531783 133.258915,218.294574 131.075969,227.324031 C141.792248,233.376744 154.195349,239.231008 166.300775,242.902326 L166.300775,242.902326 Z M179.00155,205.494574 C178.505426,217.6 177.116279,233.475969 173.941085,242.902326 C181.581395,233.07907 187.832558,221.767442 194.282171,210.654264 C191.503876,206.189147 185.748837,202.31938 179.00155,205.494574 L179.00155,205.494574 Z M164.613953,200.434109 C161.736434,200.136434 159.255814,203.807752 155.485271,202.220155 C154.592248,203.212403 153.79845,204.204651 152.905426,205.196899 C161.24031,215.317829 165.110078,229.606202 171.55969,241.413953 C175.032558,230.003101 174.635659,217.6 175.429457,205.196899 C170.666667,205.395349 167.987597,200.731783 164.613953,200.434109 L164.613953,200.434109 Z M155.386047,188.229457 C155.088372,191.702326 155.882171,192.793798 156.576744,196.762791 C167.888372,200.334884 166.003101,181.184496 155.386047,188.229457 L155.386047,188.229457 Z M142.784496,184.062016 C137.922481,181.382946 130.579845,178.505426 124.229457,177.314729 C116.390698,175.826357 117.184496,188.031008 117.482171,195.274419 C117.779845,201.029457 120.756589,207.082171 122.046512,210.951938 C122.64186,212.737984 122.84031,214.623256 124.328682,215.020155 C127.007752,215.615504 135.937984,212.142636 138.418605,210.753488 C143.776744,207.875969 147.944186,203.212403 152.508527,200.037209 C152.607752,198.548837 152.607752,196.96124 152.706977,195.472868 C149.928682,194.083721 146.852713,193.190698 142.784496,192.992248 C145.463566,191.603101 149.531783,191.603101 152.012403,190.015504 C152.012403,189.420155 152.012403,188.824806 152.111628,188.229457 C147.547287,187.733333 145.860465,185.748837 142.784496,184.062016 L142.784496,184.062016 Z M96.1488372,175.627907 C92.0806202,179.795349 107.55969,185.351938 112.421705,185.649612 C112.421705,183.069767 113.910078,180.589147 113.612403,178.703876 C107.75814,177.711628 100.117829,178.406202 96.1488372,175.627907 L96.1488372,175.627907 Z M146.15814,177.513178 C146.15814,177.910078 145.662016,177.810853 145.562791,178.108527 C150.821705,182.176744 154.691473,183.069767 161.736434,182.672868 C164.911628,180.390698 167.789147,177.612403 171.162791,175.429457 C163.423256,176.124031 153.699225,180.886822 146.15814,177.513178 L146.15814,177.513178 Z M192,191.404651 C191.80155,186.84031 190.610853,177.413953 187.733333,175.727132 C181.779845,172.254264 171.262016,182.772093 166.796899,184.35969 C167.293023,185.748837 168.086822,186.84031 168.186047,188.626357 C170.865116,187.931783 174.04031,188.427907 176.322481,189.51938 C173.643411,189.817054 170.765891,189.817054 168.979845,191.106977 C168.384496,192.992248 169.178295,195.472868 168.682171,198.052713 C174.933333,199.83876 182.176744,200.731783 190.114729,201.029457 C191.603101,199.044961 192.19845,195.274419 192,191.404651 L192,191.404651 Z M89.3023256,179.596899 C88.0124031,178.703876 79.379845,167.491473 78.1891473,167.987597 C62.6108527,174.139535 48.0248062,184.756589 35.0263566,194.877519 C47.4294574,221.568992 52.4899225,254.213953 53.3829457,285.668217 C67.572093,292.316279 80.0744186,301.941085 99.4232558,302.933333 C97.1410853,287.156589 95.1565891,272.967442 93.8666667,258.083721 C89.0046512,256 82.0589147,258.182946 77.4945736,257.488372 C77.4945736,252.031008 84.4403101,255.106977 85.0356589,251.435659 C85.4325581,248.657364 81.1658915,248.458915 82.5550388,244.093023 C86.1271318,245.382946 88.0124031,248.260465 91.7829457,249.351938 C95.255814,241.810853 91.7829457,228.415504 92.2790698,222.065116 C92.3782946,220.874419 92.8744186,215.516279 95.5534884,216.409302 C97.9348837,217.203101 95.4542636,230.796899 95.6527132,236.750388 C95.8511628,242.306977 94.9581395,247.565891 97.2403101,251.03876 C115.894574,248.458915 134.846512,246.871318 155.088372,246.275969 C150.623256,244.390698 145.364341,242.604651 139.609302,239.330233 C136.434109,237.544186 126.610853,233.872868 125.717829,230.896124 C124.229457,226.133333 129.488372,223.652713 130.381395,219.584496 C120.955039,224.744186 119.168992,214.623256 116.886822,207.578295 C114.902326,201.128682 113.711628,196.266667 113.215504,192.595349 C104.979845,188.427907 96.248062,184.55814 89.3023256,179.596899 L89.3023256,179.596899 L89.3023256,179.596899 Z M183.764341,169.277519 C196.762791,163.026357 199.144186,192.793798 193.984496,202.418605 C194.778295,205.296124 197.457364,206.387597 198.548837,208.967442 C191.305426,221.965891 183.268217,234.071318 175.826357,246.871318 C181.283721,243.39845 189.221705,246.275969 195.671318,243.696124 C198.052713,242.803101 199.739535,237.345736 201.525581,232.979845 C206.486822,221.072868 211.646512,205.990698 213.928682,194.67907 C214.424806,192.099225 215.913178,186.443411 215.516279,184.16124 C214.92093,179.993798 209.364341,176.917829 206.486822,174.437209 C201.227907,169.674419 197.953488,165.606202 192.396899,161.141085 C190.313178,164.415504 185.550388,166.59845 183.764341,169.277519 L183.764341,169.277519 L183.764341,169.277519 Z M59.6341085,54.0775194 C53.4821705,60.924031 54.772093,73.6248062 55.4666667,82.7534884 C66.6790698,75.7085271 81.4635659,83.3488372 81.3643411,95.255814 C86.7224806,95.1565891 83.3488372,88.6077519 82.3565891,84.3410853 C79.1813953,70.5488372 87.7147287,55.6651163 82.7534884,43.0635659 C73.1286822,43.8573643 65.2899225,47.7271318 59.6341085,54.0775194 L59.6341085,54.0775194 L59.6341085,54.0775194 Z M103.888372,14.4868217 C89.8976744,18.455814 71.9379845,28.675969 66.1829457,41.2775194 C70.648062,40.5829457 73.724031,38.4 78.0899225,38.1023256 C79.7767442,38.0031008 81.9596899,38.7968992 83.8449612,38.3007752 C87.6155039,37.3085271 90.8899225,28.7751938 93.7674419,25.6 C96.5457364,22.524031 99.9193798,21.1348837 102.20155,18.3565891 C103.689922,17.6620155 105.872868,17.6620155 105.972093,15.4790698 C105.376744,14.7844961 104.682171,14.2883721 103.888372,14.4868217 L103.888372,14.4868217 Z M176.818605,18.2573643 C162.232558,10.0217054 137.624806,3.86976744 122.145736,11.6093023 C109.643411,17.8604651 92.7751938,28.179845 87.020155,41.1782946 C92.3782946,53.779845 85.4325581,65.2899225 84.9364341,78.0899225 C84.7379845,84.9364341 88.1116279,90.7906977 88.4093023,98.2325581 C86.524031,101.308527 80.9674419,101.606202 77.0976744,101.407752 C75.8077519,94.8589147 73.5255814,87.5162791 66.7782946,86.7224806 C57.2527132,85.6310078 50.2077519,93.5689922 49.8108527,101.804651 C49.3147287,111.528682 57.2527132,127.603101 68.5643411,126.511628 C72.9302326,126.114729 74.0217054,121.748837 78.7844961,121.748837 C81.3643411,126.908527 74.8155039,128.496124 74.1209302,132.167442 C73.9224806,133.15969 74.6170543,136.831008 75.1131783,138.617054 C77.1968992,147.051163 81.7612403,158.065116 86.2263566,164.514729 C91.9813953,172.750388 103.193798,173.941085 115.299225,174.734884 C117.482171,170.071318 125.420155,170.468217 130.579845,171.658915 C124.328682,169.178295 118.573643,163.224806 113.810853,157.965891 C108.353488,151.913178 102.796899,145.463566 102.499225,137.525581 C112.917829,151.913178 121.451163,164.514729 140.303876,170.865116 C154.592248,175.627907 171.262016,168.682171 182.275969,160.942636 C186.84031,157.767442 189.51938,152.607752 192.793798,148.043411 C204.899225,130.579845 210.555039,105.773643 209.364341,81.6620155 C208.868217,71.7395349 208.868217,61.8170543 205.494574,55.1689922 C202.021705,48.2232558 190.213953,41.8728682 183.268217,48.2232558 C181.978295,41.3767442 189.023256,37.2093023 197.258915,39.6899225 C191.404651,32.0496124 185.252713,23.020155 176.818605,18.2573643 L176.818605,18.2573643 L176.818605,18.2573643 Z M204.006202,242.604651 C215.417054,236.948837 236.651163,227.423256 243.696124,242.604651 C246.375194,248.260465 249.451163,257.686822 250.741085,263.541085 C252.626357,271.677519 248.657364,288.942636 240.223256,291.621705 C232.781395,294.003101 224.148837,293.903876 215.218605,292.117829 C214.127132,291.224806 213.035659,289.736434 212.142636,288.148837 C205.792248,287.950388 199.739535,288.446512 194.778295,291.125581 C195.274419,295.888372 192.099225,296.582946 189.023256,297.575194 C186.84031,306.406202 193.488372,317.916279 191.900775,325.854264 C190.809302,331.609302 183.764341,332.502326 178.604651,333.494574 C178.406202,336.669767 178.803101,339.348837 179.2,342.027907 C178.009302,346.393798 172.750388,348.874419 167.689922,349.469767 C151.11938,351.454264 126.015504,352.347287 110.139535,346.592248 C105.674419,335.677519 102.20155,322.48062 98.5302326,310.077519 C83.0511628,311.764341 70.4496124,303.429457 58.6418605,297.872868 C54.5736434,295.987597 48.9178295,294.896124 47.3302326,291.621705 C45.8418605,288.446512 46.4372093,282.393798 46.0403101,276.737984 C45.1472868,262.151938 44.2542636,248.062016 40.4837209,233.178295 C38.7968992,226.431008 35.7209302,220.576744 33.6372093,214.127132 C31.6527132,208.173643 28.2790698,200.731783 27.3860465,194.778295 C26.096124,185.947287 34.4310078,185.451163 39.6899225,181.581395 C47.9255814,175.627907 54.3751938,172.353488 63.3054264,166.995349 C65.9844961,165.407752 73.9224806,161.43876 74.8155039,159.553488 C76.6015504,155.882171 71.7395349,150.722481 70.4496124,147.844961 C68.3658915,143.28062 67.2744186,139.410853 66.9767442,134.945736 C59.5348837,133.755039 53.779845,129.289922 50.4062016,124.328682 C44.7503876,115.993798 40.7813953,100.613953 45.7426357,89.0046512 C46.1395349,88.1116279 48.0248062,86.2263566 48.3224806,84.8372093 C48.9178295,82.0589147 47.2310078,78.3875969 47.1317829,75.4108527 C46.6356589,60.2294574 49.7116279,47.1317829 59.9317829,42.5674419 C64.0992248,25.9968992 78.9829457,20.5395349 92.9736434,12.303876 C98.2325581,9.22790698 103.987597,7.24341085 109.941085,5.06046512 C131.274419,-2.77829457 164.117829,-1.28992248 181.87907,12.1054264 C189.420155,17.7612403 201.426357,29.7674419 205.693023,38.4992248 C217.103876,61.420155 216.210853,99.820155 208.272868,127.80155 C207.181395,131.572093 205.693023,137.029457 203.510078,141.593798 C202.021705,144.768992 197.35814,151.020155 197.854264,153.79845 C198.449612,156.675969 208.570543,164.316279 210.753488,166.4 C214.623256,170.170543 222.065116,175.131783 222.660465,179.894574 C223.355039,184.955039 220.477519,191.900775 218.989147,196.762791 C214.226357,213.035659 209.463566,228.018605 204.006202,242.604651 L204.006202,242.604651 Z\",\"fill\":\"#231F20\",\"key\":54}),React.createElement(\"path\",{\"d\":\"M128.099225,129.885271 C128.694574,129.091473 132.068217,127.80155 136.831008,130.083721 C136.831008,130.083721 131.175194,130.976744 131.671318,140.403101 L129.289922,139.906977 C129.389147,140.006202 126.908527,131.472868 128.099225,129.885271\",\"fill\":\"#F7E4CD\",\"key\":55}),React.createElement(\"path\",{\"d\":\"M169.178295,210.455814 C169.178295,211.844961 167.987597,213.035659 166.59845,213.035659 C165.209302,213.035659 164.018605,211.844961 164.018605,210.455814 C164.018605,209.066667 165.209302,207.875969 166.59845,207.875969 C168.086822,207.875969 169.178295,209.066667 169.178295,210.455814\",\"fill\":\"#1D1919\",\"key\":56}),React.createElement(\"path\",{\"d\":\"M171.75814,222.462016 C171.75814,223.851163 170.567442,225.04186 169.178295,225.04186 C167.789147,225.04186 166.59845,223.851163 166.59845,222.462016 C166.59845,221.072868 167.789147,219.882171 169.178295,219.882171 C170.666667,219.882171 171.75814,220.973643 171.75814,222.462016\",\"fill\":\"#1D1919\",\"key\":57}),React.createElement(\"g\",{\"transform\":\"translate(0.992248, 367.131783)\",\"fill\":\"#231F20\",\"key\":58},[React.createElement(\"path\",{\"d\":\"M35.6217054,7.14418605 C34.827907,7.24341085 34.1333333,7.34263566 33.5379845,7.44186047 C32.9426357,7.54108527 32.3472868,7.64031008 31.5534884,7.83875969 C30.6604651,8.0372093 30.1643411,8.43410853 29.9658915,9.02945736 C29.7674419,9.6248062 29.5689922,10.220155 29.5689922,11.0139535 L29.5689922,35.2248062 C29.5689922,37.4077519 29.0728682,39.4914729 28.179845,41.3767442 C27.2868217,43.2620155 26.096124,44.7503876 24.5085271,46.0403101 C22.9209302,47.2310078 21.1348837,48.2232558 19.1503876,48.8186047 C17.1658915,49.4139535 15.0821705,49.8108527 12.8992248,49.8108527 C9.02945736,49.8108527 5.95348837,48.9178295 3.57209302,47.0325581 C1.19069767,45.1472868 0,42.6666667 0,39.3922481 C0,37.5069767 0.496124031,35.9193798 1.5875969,34.6294574 C2.67906977,33.3395349 4.16744186,32.744186 6.05271318,32.744186 C7.83875969,32.744186 9.22790698,33.2403101 10.3193798,34.3317829 C11.4108527,35.4232558 11.9069767,36.7131783 11.9069767,38.2015504 C11.9069767,39.4914729 11.4108527,40.7813953 10.5178295,41.8728682 C9.6248062,42.9643411 8.53333333,44.055814 7.34263566,44.9488372 L7.34263566,45.3457364 C7.54108527,45.7426357 7.9379845,46.1395349 8.53333333,46.4372093 C9.12868217,46.7348837 9.82325581,46.8341085 10.4186047,46.8341085 C12.8992248,46.8341085 14.8837209,45.9410853 16.2728682,44.1550388 C17.6620155,42.3689922 18.3565891,39.6899225 18.3565891,36.1178295 L18.3565891,11.3116279 C18.3565891,10.6170543 18.2573643,9.92248062 18.0589147,9.42635659 C17.8604651,8.93023256 17.2651163,8.53333333 16.372093,8.13643411 C15.7767442,7.83875969 14.9829457,7.64031008 14.0899225,7.44186047 C13.1968992,7.24341085 12.5023256,7.14418605 11.9069767,7.04496124 L11.9069767,4.66356589 L35.324031,4.66356589 L35.324031,7.14418605 L35.6217054,7.14418605 Z\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M72.3348837,41.2775194 C71.6403101,42.4682171 70.7472868,43.5596899 69.7550388,44.6511628 C68.7627907,45.7426357 67.572093,46.5364341 66.2821705,47.3302326 C64.8930233,48.124031 63.503876,48.7193798 62.1147287,49.1162791 C60.7255814,49.5131783 59.0387597,49.7116279 57.2527132,49.7116279 C54.1767442,49.7116279 51.5968992,49.3147287 49.3147287,48.4217054 C47.1317829,47.5286822 45.2465116,46.4372093 43.8573643,44.9488372 C42.3689922,43.4604651 41.3767442,41.7736434 40.5829457,39.7891473 C39.8883721,37.8046512 39.4914729,35.6217054 39.4914729,33.3395349 C39.4914729,31.255814 39.8883721,29.172093 40.6821705,27.2868217 C41.475969,25.4015504 42.5674419,23.6155039 43.9565891,22.1271318 C45.3457364,20.6387597 47.1317829,19.448062 49.3147287,18.5550388 C51.4976744,17.6620155 53.8790698,17.1658915 56.4589147,17.1658915 C59.3364341,17.1658915 61.7178295,17.5627907 63.6031008,18.2573643 C65.4883721,18.951938 66.9767442,19.944186 68.1674419,21.1348837 C69.3581395,22.3255814 70.151938,23.7147287 70.7472868,25.3023256 C71.2434109,26.8899225 71.5410853,28.5767442 71.5410853,30.3627907 L71.5410853,32.3472868 L50.6046512,32.3472868 C50.6046512,36.6139535 51.3984496,39.7891473 53.0852713,41.972093 C54.6728682,44.1550388 57.351938,45.2465116 60.8248062,45.2465116 C62.8093023,45.2465116 64.496124,44.7503876 66.0837209,43.6589147 C67.6713178,42.5674419 68.9612403,41.2775194 70.0527132,39.5906977 L72.3348837,41.2775194 L72.3348837,41.2775194 Z M60.5271318,29.4697674 C60.5271318,28.2790698 60.427907,26.9891473 60.3286822,25.6992248 C60.2294574,24.4093023 60.0310078,23.3178295 59.6341085,22.524031 C59.2372093,21.5317829 58.8403101,20.8372093 58.1457364,20.3410853 C57.5503876,19.8449612 56.7565891,19.6465116 55.8635659,19.6465116 C54.275969,19.6465116 52.9860465,20.4403101 52.0930233,22.027907 C51.1007752,23.6155039 50.6046512,26.1953488 50.5054264,29.6682171 L60.5271318,29.4697674 L60.5271318,29.4697674 Z\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M116.093023,48.620155 L97.4387597,48.620155 L97.4387597,46.3379845 C97.8356589,46.3379845 98.3317829,46.2387597 98.827907,46.1395349 C99.4232558,46.0403101 99.820155,45.9410853 100.117829,45.8418605 C100.514729,45.6434109 100.812403,45.2465116 101.010853,44.8496124 C101.209302,44.4527132 101.308527,43.7581395 101.308527,42.9643411 L101.308527,28.4775194 C101.308527,26.3937984 100.911628,24.8062016 100.117829,23.7147287 C99.324031,22.6232558 98.2325581,22.1271318 96.6449612,22.1271318 C95.8511628,22.1271318 95.0573643,22.2263566 94.3627907,22.524031 C93.6682171,22.7224806 92.9736434,23.1193798 92.2790698,23.6155039 C91.6837209,24.0124031 91.1875969,24.4093023 90.7906977,24.9054264 C90.3937984,25.3023256 90.096124,25.6992248 89.8976744,26.096124 L89.8976744,42.6666667 C89.8976744,43.3612403 89.9968992,43.9565891 90.1953488,44.4527132 C90.3937984,44.9488372 90.7906977,45.3457364 91.1875969,45.544186 C91.4852713,45.7426357 91.8821705,45.9410853 92.3782946,46.0403101 C92.8744186,46.1395349 93.3705426,46.2387597 93.8666667,46.3379845 L93.8666667,48.620155 L75.0139535,48.620155 L75.0139535,46.3379845 C75.5100775,46.3379845 76.0062016,46.2387597 76.6015504,46.1395349 C77.0976744,46.0403101 77.5937984,45.9410853 77.9906977,45.8418605 C78.6852713,45.6434109 79.0821705,45.2465116 79.379845,44.7503876 C79.5782946,44.2542636 79.7767442,43.6589147 79.7767442,42.8651163 L79.7767442,24.8062016 C79.7767442,24.2108527 79.5782946,23.5162791 79.2806202,22.9209302 C78.9829457,22.3255814 78.4868217,21.8294574 77.9906977,21.4325581 C77.5937984,21.2341085 77.1968992,20.9364341 76.6015504,20.8372093 C76.0062016,20.6387597 75.4108527,20.5395349 74.7162791,20.5395349 L74.7162791,18.2573643 L89.5007752,17.4635659 L89.9968992,17.9596899 L89.9968992,22.4248062 L90.096124,22.4248062 C90.6914729,21.9286822 91.3860465,21.3333333 92.179845,20.5395349 C92.9736434,19.8449612 93.7674419,19.2496124 94.4620155,18.7534884 C95.255814,18.2573643 96.248062,17.8604651 97.4387597,17.4635659 C98.6294574,17.0666667 100.018605,16.9674419 101.407752,16.9674419 C104.781395,16.9674419 107.262016,17.9596899 108.948837,19.8449612 C110.635659,21.7302326 111.429457,24.3100775 111.429457,27.4852713 L111.429457,42.6666667 C111.429457,43.4604651 111.528682,44.055814 111.727132,44.4527132 C111.925581,44.9488372 112.421705,45.2465116 113.017054,45.544186 C113.314729,45.6434109 113.711628,45.8418605 114.207752,45.9410853 C114.703876,46.0403101 115.2,46.1395349 115.894574,46.2387597 L115.894574,48.620155 L116.093023,48.620155 Z\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M158.75969,48.620155 L144.173643,48.620155 C142.387597,45.4449612 140.700775,42.7658915 139.212403,40.5829457 C137.724031,38.4 136.334884,36.3162791 135.044961,34.5302326 L133.258915,36.1178295 L133.258915,42.8651163 C133.258915,43.5596899 133.35814,44.2542636 133.556589,44.6511628 C133.755039,45.1472868 134.151938,45.4449612 134.846512,45.7426357 C135.243411,45.9410853 135.64031,46.0403101 136.136434,46.1395349 C136.632558,46.2387597 137.128682,46.3379845 137.624806,46.3379845 L137.624806,48.620155 L118.375194,48.620155 L118.375194,46.3379845 C118.871318,46.3379845 119.367442,46.2387597 119.962791,46.1395349 C120.458915,46.0403101 120.955039,45.9410853 121.351938,45.8418605 C122.046512,45.6434109 122.443411,45.2465116 122.741085,44.7503876 C122.939535,44.2542636 123.137984,43.6589147 123.137984,42.8651163 L123.137984,8.33488372 C123.137984,7.64031008 122.939535,6.94573643 122.64186,6.25116279 C122.344186,5.55658915 121.947287,4.96124031 121.351938,4.56434109 C120.955039,4.36589147 120.35969,4.06821705 119.565891,3.96899225 C118.772093,3.77054264 118.077519,3.67131783 117.382946,3.67131783 L117.382946,1.38914729 L132.762791,0.595348837 L133.258915,1.09147287 L133.258915,33.0418605 C134.747287,31.6527132 136.533333,30.0651163 138.418605,28.2790698 C140.303876,26.4930233 141.891473,25.0046512 142.982946,23.8139535 C143.677519,23.1193798 144.074419,22.6232558 144.074419,22.2263566 C144.173643,21.8294574 144.173643,21.6310078 144.173643,21.5317829 C144.173643,21.1348837 143.875969,20.8372093 143.181395,20.6387597 C142.486822,20.4403101 141.593798,20.1426357 140.204651,19.944186 L140.204651,17.7612403 L155.882171,17.7612403 L155.882171,19.944186 C153.79845,20.5395349 152.210853,21.0356589 151.11938,21.5317829 C150.027907,22.027907 148.837209,22.7224806 147.547287,23.5162791 C146.654264,24.1116279 145.860465,24.7069767 145.066667,25.3023256 C144.272868,25.8976744 143.379845,26.6914729 142.288372,27.5844961 C144.272868,30.5612403 146.15814,33.2403101 147.844961,35.7209302 C149.531783,38.2015504 151.317829,40.8806202 153.203101,43.6589147 C153.79845,44.6511628 154.592248,45.2465116 155.584496,45.6434109 C156.576744,45.9410853 157.469767,46.1395349 158.462016,46.2387597 L158.462016,48.620155 L158.75969,48.620155 Z\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M178.604651,48.620155 L159.057364,48.620155 L159.057364,46.3379845 C159.553488,46.3379845 160.148837,46.2387597 160.644961,46.1395349 C161.141085,46.0403101 161.637209,45.9410853 161.934884,45.8418605 C162.629457,45.6434109 163.026357,45.2465116 163.324031,44.7503876 C163.621705,44.2542636 163.72093,43.6589147 163.72093,42.8651163 L163.72093,24.8062016 C163.72093,24.1116279 163.522481,23.4170543 163.224806,22.9209302 C162.927132,22.3255814 162.530233,21.9286822 162.034109,21.6310078 C161.637209,21.4325581 161.141085,21.1348837 160.347287,20.9364341 C159.553488,20.7379845 158.858915,20.5395349 158.263566,20.5395349 L158.263566,18.2573643 L173.444961,17.4635659 L173.941085,17.9596899 L173.941085,42.5674419 C173.941085,43.2620155 174.139535,43.8573643 174.437209,44.4527132 C174.734884,44.9488372 175.231008,45.3457364 175.727132,45.544186 C176.124031,45.7426357 176.620155,45.9410853 177.116279,46.0403101 C177.612403,46.1395349 178.108527,46.2387597 178.703876,46.3379845 L178.703876,48.620155 L178.604651,48.620155 Z M174.139535,6.4496124 C174.139535,8.0372093 173.544186,9.32713178 172.353488,10.4186047 C171.162791,11.5100775 169.674419,12.1054264 168.086822,12.1054264 C166.4,12.1054264 165.010853,11.5100775 163.72093,10.4186047 C162.530233,9.32713178 161.934884,7.9379845 161.934884,6.4496124 C161.934884,4.8620155 162.530233,3.57209302 163.72093,2.38139535 C164.911628,1.28992248 166.4,0.694573643 168.086822,0.694573643 C169.773643,0.694573643 171.162791,1.28992248 172.353488,2.38139535 C173.544186,3.47286822 174.139535,4.8620155 174.139535,6.4496124 L174.139535,6.4496124 Z\",\"key\":4}),React.createElement(\"path\",{\"d\":\"M222.362791,48.620155 L203.708527,48.620155 L203.708527,46.3379845 C204.105426,46.3379845 204.60155,46.2387597 205.097674,46.1395349 C205.693023,46.0403101 206.089922,45.9410853 206.387597,45.8418605 C206.784496,45.6434109 207.082171,45.2465116 207.28062,44.8496124 C207.47907,44.4527132 207.578295,43.7581395 207.578295,42.9643411 L207.578295,28.4775194 C207.578295,26.3937984 207.181395,24.8062016 206.387597,23.7147287 C205.593798,22.6232558 204.502326,22.1271318 202.914729,22.1271318 C202.12093,22.1271318 201.327132,22.2263566 200.632558,22.524031 C199.937984,22.8217054 199.243411,23.1193798 198.548837,23.6155039 C197.953488,24.0124031 197.457364,24.4093023 197.060465,24.9054264 C196.663566,25.3023256 196.365891,25.6992248 196.167442,26.096124 L196.167442,42.6666667 C196.167442,43.3612403 196.266667,43.9565891 196.465116,44.4527132 C196.663566,44.9488372 197.060465,45.3457364 197.457364,45.544186 C197.755039,45.7426357 198.151938,45.9410853 198.648062,46.0403101 C199.144186,46.1395349 199.64031,46.2387597 200.136434,46.3379845 L200.136434,48.620155 L181.283721,48.620155 L181.283721,46.3379845 C181.779845,46.3379845 182.275969,46.2387597 182.871318,46.1395349 C183.367442,46.0403101 183.863566,45.9410853 184.260465,45.8418605 C184.955039,45.6434109 185.351938,45.2465116 185.649612,44.7503876 C185.848062,44.2542636 186.046512,43.6589147 186.046512,42.8651163 L186.046512,24.8062016 C186.046512,24.2108527 185.848062,23.5162791 185.550388,22.9209302 C185.252713,22.3255814 184.756589,21.8294574 184.260465,21.4325581 C183.863566,21.2341085 183.466667,20.9364341 182.871318,20.8372093 C182.275969,20.6387597 181.68062,20.5395349 180.986047,20.5395349 L180.986047,18.2573643 L195.770543,17.4635659 L196.266667,17.9596899 L196.266667,22.4248062 L196.365891,22.4248062 C196.96124,21.9286822 197.655814,21.3333333 198.449612,20.5395349 C199.243411,19.8449612 200.037209,19.2496124 200.731783,18.7534884 C201.525581,18.2573643 202.517829,17.8604651 203.708527,17.4635659 C204.899225,17.0666667 206.288372,16.9674419 207.677519,16.9674419 C211.051163,16.9674419 213.531783,17.9596899 215.218605,19.8449612 C216.905426,21.7302326 217.699225,24.3100775 217.699225,27.4852713 L217.699225,42.6666667 C217.699225,43.4604651 217.79845,44.055814 217.996899,44.4527132 C218.195349,44.9488372 218.691473,45.2465116 219.286822,45.544186 C219.584496,45.6434109 219.981395,45.8418605 220.477519,45.9410853 C220.973643,46.0403101 221.469767,46.1395349 222.164341,46.2387597 L222.164341,48.620155 L222.362791,48.620155 Z\",\"key\":5}),React.createElement(\"path\",{\"d\":\"M239.528682,49.7116279 C237.544186,49.7116279 235.55969,49.4139535 233.674419,48.8186047 C231.789147,48.2232558 230.300775,47.627907 229.209302,46.9333333 L228.316279,49.0170543 L225.934884,49.0170543 L225.537984,37.5069767 L227.820155,37.5069767 C228.117829,38.4 228.613953,39.4914729 229.407752,40.6821705 C230.102326,41.8728682 230.995349,42.8651163 231.888372,43.8573643 C232.88062,44.7503876 233.972093,45.544186 235.262016,46.2387597 C236.551938,46.8341085 237.84186,47.2310078 239.231008,47.2310078 C241.116279,47.2310078 242.505426,46.8341085 243.39845,46.1395349 C244.291473,45.4449612 244.787597,44.2542636 244.787597,42.7658915 C244.787597,41.972093 244.589147,41.2775194 244.192248,40.6821705 C243.795349,40.1860465 243.2,39.6899225 242.505426,39.2930233 C241.711628,38.896124 240.818605,38.4992248 239.826357,38.2015504 C238.834109,37.903876 237.643411,37.6062016 236.254264,37.1100775 C234.865116,36.7131783 233.674419,36.3162791 232.682171,35.820155 C231.689922,35.4232558 230.59845,34.7286822 229.606202,33.8356589 C228.713178,33.0418605 227.91938,32.0496124 227.423256,30.9581395 C226.827907,29.8666667 226.629457,28.4775194 226.629457,26.8899225 C226.629457,24.0124031 227.820155,21.6310078 230.300775,19.8449612 C232.781395,18.0589147 235.956589,17.1658915 239.925581,17.1658915 C241.810853,17.1658915 243.497674,17.3643411 245.085271,17.7612403 C246.672868,18.1581395 247.962791,18.5550388 249.054264,19.0511628 L249.748837,17.2651163 L252.130233,17.2651163 L252.626357,27.7829457 L250.443411,27.7829457 C249.748837,25.6 248.458915,23.8139535 246.772093,22.2263566 C244.986047,20.6387597 243.100775,19.8449612 241.116279,19.8449612 C239.528682,19.8449612 238.23876,20.1426357 237.345736,20.8372093 C236.452713,21.5317829 235.956589,22.4248062 235.956589,23.6155039 C235.956589,25.2031008 236.651163,26.2945736 237.941085,26.9891473 C239.231008,27.6837209 241.116279,28.3782946 243.497674,28.9736434 C247.168992,29.9658915 249.848062,31.255814 251.634109,32.8434109 C253.32093,34.5302326 254.213953,36.6139535 254.213953,39.0945736 C254.213953,42.4682171 252.924031,45.1472868 250.244961,46.9333333 C247.268217,48.7193798 243.795349,49.7116279 239.528682,49.7116279 L239.528682,49.7116279 Z\",\"key\":6})])]));\n}\n\nJenkins.defaultProps = {\"width\":\"256px\",\"height\":\"417px\",\"viewBox\":\"0 0 256 417\",\"version\":\"1.1\",\"preserveAspectRatio\":\"xMidYMid\"};\n\nmodule.exports = Jenkins;\n\nJenkins.default = Jenkins;\n","var React = require('react');\n\nfunction Kubernetes (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"g\",{\"id\":\"layer1\",\"transform\":\"translate(-6.3260942,-174.7524)\"},React.createElement(\"g\",{\"id\":\"g3052\"},[React.createElement(\"path\",{\"style\":{\"fill\":\"#326ce5\",\"fillOpacity\":\"1\",\"stroke\":\"#ffffff\",\"strokeWidth\":\"0\",\"strokeMiterlimit\":\"4\",\"strokeOpacity\":\"1\",\"strokeDasharray\":\"none\"},\"d\":\"m 365.3125,184.8125 a 46.724621,46.342246 0 0 0 -17.90625,4.53125 l -244.34375,116.75 a 46.724621,46.342246 0 0 0 -25.28125,31.4375 L 17.5,599.78125 A 46.724621,46.342246 0 0 0 23.84375,635.3125 46.724621,46.342246 0 0 0 26.5,639 l 169.125,210.28125 a 46.724621,46.342246 0 0 0 36.53125,17.4375 L 503.375,866.65625 A 46.724621,46.342246 0 0 0 539.90625,849.25 L 708.96875,638.9375 A 46.724621,46.342246 0 0 0 718,599.71875 l -60.375,-262.25 a 46.724621,46.342246 0 0 0 -25.28125,-31.4375 l -244.375,-116.6875 A 46.724621,46.342246 0 0 0 365.3125,184.8125 z\",\"key\":0}),React.createElement(\"path\",{\"d\":\"m 367.73366,274.05962 c -8.07696,8.2e-4 -14.62596,7.27591 -14.625,16.25 1e-5,0.13773 0.0282,0.26934 0.0312,0.40625 -0.0119,1.21936 -0.0708,2.68836 -0.0312,3.75 0.19262,5.176 1.3209,9.13749 2,13.90625 1.23028,10.20666 2.26117,18.66736 1.625,26.53125 -0.61869,2.9654 -2.80288,5.67741 -4.75,7.5625 l -0.34375,6.1875 c -8.77682,0.72717 -17.61235,2.05874 -26.4375,4.0625 -37.97461,8.62218 -70.67008,28.18307 -95.5625,54.59375 -1.61522,-1.10193 -4.44103,-3.12914 -5.2813,-3.75 -2.61117,0.35262 -5.25021,1.15829 -8.6875,-0.84375 -6.54491,-4.40563 -12.50587,-10.48693 -19.71875,-17.8125 -3.30498,-3.50419 -5.69832,-6.84101 -9.625,-10.21875 -0.89172,-0.76707 -2.25258,-1.80455 -3.25,-2.59375 -3.06988,-2.44757 -6.6907,-3.72402 -10.1875,-3.84375 -4.49589,-0.15394 -8.82394,1.60385 -11.65625,5.15625 -5.03521,6.31538 -3.42312,15.96805 3.59375,21.5625 0.0712,0.0567 0.14702,0.10078 0.21875,0.15625 0.96422,0.78162 2.14496,1.78313 3.03125,2.4375 4.16687,3.07655 7.9732,4.65145 12.125,7.09375 8.747,5.40181 15.99837,9.88086 21.75,15.28125 2.24602,2.39417 2.63858,6.61292 2.9375,8.4375 l 4.6875,4.1875 c -25.09342,37.76368 -36.70686,84.40946 -29.8437,131.9375 l -6.125,1.78125 c -1.6143,2.08461 -3.89541,5.36474 -6.2813,6.34375 -7.52513,2.37021 -15.99424,3.24059 -26.21875,4.3125 -4.80031,0.39915 -8.94218,0.16095 -14.03125,1.125 -1.12008,0.21218 -2.68072,0.61877 -3.90625,0.90625 -0.0426,0.009 -0.0824,0.0216 -0.125,0.0312 -0.0668,0.0155 -0.15456,0.0479 -0.21875,0.0625 -8.62014,2.08279 -14.15774,10.006 -12.375,17.8125 1.78316,7.80833 10.20314,12.55677 18.875,10.6875 0.0626,-0.0143 0.1535,-0.0167 0.21875,-0.0312 0.0979,-0.0224 0.18409,-0.0699 0.28125,-0.0937 1.20885,-0.26536 2.72377,-0.5606 3.78125,-0.84375 5.00334,-1.33963 8.62694,-3.30796 13.125,-5.03125 9.67694,-3.47077 17.69173,-6.37022 25.5,-7.5 3.26118,-0.25542 6.69711,2.01216 8.40625,2.96875 l 6.375,-1.09375 c 14.67018,45.48282 45.41416,82.24502 84.34375,105.3125 l -2.65625,6.375 c 0.95742,2.47542 2.01341,5.8247 1.30022,8.26932 -2.83868,7.3612 -7.70097,15.13097 -13.23772,23.79318 -2.68085,4.00192 -5.42453,7.10761 -7.84375,11.6875 -0.5789,1.09589 -1.31618,2.77932 -1.875,3.9375 -3.75884,8.04236 -1.00164,17.3052 6.21875,20.78125 7.26575,3.49788 16.28447,-0.19134 20.1875,-8.25 0.006,-0.0114 0.0257,-0.0198 0.0312,-0.0312 0.004,-0.009 -0.004,-0.0225 0,-0.0312 0.55593,-1.14255 1.34353,-2.64437 1.8125,-3.71875 2.07213,-4.74702 2.76161,-8.81506 4.21875,-13.40625 3.86962,-9.72014 5.99567,-19.91903 11.32258,-26.27411 1.45868,-1.74023 3.83681,-2.4095 6.30242,-3.06964 l 3.3125,-6 c 33.93824,13.0268 71.92666,16.52246 109.875,7.90625 8.65697,-1.96557 17.01444,-4.50945 25.09375,-7.5625 0.93098,1.65133 2.66113,4.8257 3.125,5.625 2.50559,0.81518 5.24044,1.23614 7.46875,4.53125 3.98539,6.80898 6.7109,14.86416 10.03125,24.59375 1.45738,4.59111 2.17762,8.65933 4.25,13.40625 0.47234,1.08195 1.256,2.60486 1.8125,3.75 3.89482,8.08484 12.94212,11.78667 20.21875,8.28125 7.2195,-3.4779 9.97974,-12.7399 6.21875,-20.78125 -0.55889,-1.15814 -1.3273,-2.84164 -1.90625,-3.9375 -2.41946,-4.57976 -5.1627,-7.65448 -7.84375,-11.65625 -5.53721,-8.66192 -10.12968,-15.8577 -12.96875,-23.21875 -1.18711,-3.79657 0.20028,-6.15774 1.125,-8.625 -0.55378,-0.63477 -1.73881,-4.22009 -2.4375,-5.90625 40.4574,-23.88816 70.29856,-62.02129 84.3125,-106.0625 1.8924,0.29742 5.18154,0.87936 6.25,1.09375 2.19954,-1.4507 4.22194,-3.34352 8.1875,-3.03125 7.80832,1.12937 15.82288,4.02973 25.5,7.5 4.49815,1.72306 8.1216,3.72313 13.125,5.0625 1.05749,0.28309 2.57238,0.5472 3.78125,0.8125 0.0972,0.0238 0.1833,0.0714 0.28125,0.0937 0.0653,0.0146 0.15615,0.0169 0.21875,0.0312 8.67236,1.86695 17.09384,-2.87871 18.875,-10.6875 1.78074,-7.80696 -3.7543,-15.73201 -12.375,-17.8125 -1.25393,-0.28513 -3.03225,-0.76938 -4.25,-1 -5.08912,-0.96378 -9.23092,-0.7261 -14.03125,-1.125 -10.22456,-1.07138 -18.6935,-1.94269 -26.21875,-4.3125 -3.06826,-1.19028 -5.25103,-4.84124 -6.31255,-6.34375 l -5.90625,-1.71875 c 3.06226,-22.15442 2.23655,-45.21134 -3.0625,-68.28125 -5.34839,-23.28471 -14.80037,-44.58084 -27.40625,-63.34375 1.51505,-1.37729 4.37619,-3.91091 5.1875,-4.65625 0.23716,-2.62417 0.0334,-5.37553 2.75,-8.28125 5.75134,-5.40069 13.00329,-9.87898 21.75,-15.28125 4.15167,-2.44252 7.98954,-4.01698 12.15625,-7.09375 0.94225,-0.69576 2.2289,-1.79759 3.21875,-2.59375 7.01538,-5.59633 8.63058,-15.24842 3.59375,-21.5625 -5.03683,-6.31408 -14.79712,-6.90883 -21.8125,-1.3125 -0.99856,0.79085 -2.35353,1.82252 -3.25,2.59375 -3.9265,3.37796 -6.35145,6.71439 -9.65625,10.21875 -7.21249,7.32595 -13.17407,13.43777 -19.71875,17.84375 -2.83601,1.65106 -6.98996,1.07978 -8.87505,0.96875 l -5.5625,3.96875 c -31.7188,-33.26057 -74.90466,-54.52546 -121.40605,-58.6563 -0.13006,-1.94872 -0.30045,-5.47117 -0.34375,-6.53125 -1.90371,-1.82165 -4.20342,-3.37686 -4.78125,-7.3125 -0.63617,-7.86389 0.42597,-16.32459 1.65625,-26.53125 0.6791,-4.76876 1.80738,-8.73025 2,-13.90625 0.0438,-1.17663 -0.0265,-2.88401 -0.0312,-4.15625 -9.6e-4,-8.97409 -6.54804,-16.25082 -14.625,-16.25 z m -18.3125,113.4375 -4.34375,76.71875 -0.3125,0.15625 c -0.29134,6.86335 -5.93996,12.34375 -12.875,12.34375 -2.84081,0 -5.46294,-0.91229 -7.59375,-2.46875 l -0.125,0.0625 -62.90625,-44.59375 c 19.33365,-19.01115 44.06291,-33.06039 72.5625,-39.53125 5.20599,-1.18203 10.40966,-2.0591 15.59375,-2.6875 z m 36.65625,0 c 33.27347,4.09232 64.04501,19.15882 87.625,42.25 l -62.5,44.3125 -0.21875,-0.0937 c -5.54745,4.05169 -13.36343,3.04639 -17.6875,-2.375 -1.77132,-2.22096 -2.70072,-4.83239 -2.8125,-7.46875 l -0.0625,-0.0312 z m -147.625,70.875 57.4375,51.375 -0.0625,0.3125 c 5.18437,4.50697 5.94888,12.32794 1.625,17.75 -1.7712,2.22105 -4.14208,3.71074 -6.6875,4.40625 l -0.0625,0.25 -73.625,21.25 c -3.74728,-34.26517 4.32855,-67.57364 21.375,-95.34375 z m 258.15625,0.0312 c 8.5341,13.83256 14.99655,29.28214 18.84375,46.03125 3.80106,16.54828 4.75499,33.06697 3.1875,49.03125 l -74,-21.3125 -0.0625,-0.3125 c -6.6265,-1.81104 -10.69893,-8.55162 -9.15625,-15.3125 0.63203,-2.76962 2.10222,-5.11264 4.09375,-6.84375 l -0.0312,-0.15625 57.125,-51.125 z m -140.65625,55.3125 23.53125,0 14.625,18.28125 -5.25,22.8125 -21.125,10.15625 -21.1875,-10.1875 -5.25,-22.8125 z m 75.4375,62.5625 c 0.99997,-0.0505 1.99558,0.0396 2.96875,0.21875 l 0.125,-0.15625 76.15625,12.875 c -11.1455,31.3131 -32.47281,58.44018 -60.96875,76.59375 l -29.5625,-71.40625 0.0937,-0.125 c -2.71561,-6.30999 0.002,-13.70956 6.25,-16.71875 1.59965,-0.77041 3.27089,-1.19701 4.9375,-1.28125 z m -127.90625,0.3125 c 5.81174,0.0815 11.02462,4.11525 12.375,10.03125 0.63219,2.76958 0.3245,5.51375 -0.71875,7.9375 l 0.21875,0.28125 -29.25,70.6875 c -27.34716,-17.5486 -49.12927,-43.82403 -60.78125,-76.06245 l 75.5,-12.8125 0.125,0.15625 c 0.84451,-0.15541 1.701,-0.2304 2.53125,-0.21875 z m 63.78125,30.9688 c 2.02445,-0.0744 4.07865,0.34098 6.03125,1.28125 2.55951,1.23253 4.53673,3.17319 5.78125,5.5 l 0.28125,0 37.21875,67.25 c -4.83029,1.61923 -9.79609,3.00308 -14.875,4.15625 -28.46453,6.4629 -56.83862,4.50467 -82.53125,-4.25 l 37.125,-67.125 0.0625,0 c 2.22767,-4.16441 6.45247,-6.64887 10.90625,-6.8125 z\",\"style\":{\"fontSize\":\"medium\",\"fontStyle\":\"normal\",\"fontVariant\":\"normal\",\"fontWeight\":\"normal\",\"fontStretch\":\"normal\",\"textIndent\":\"0\",\"textAlign\":\"start\",\"textDecoration\":\"none\",\"lineHeight\":\"normal\",\"letterSpacing\":\"normal\",\"wordSpacing\":\"normal\",\"textTransform\":\"none\",\"direction\":\"ltr\",\"blockProgression\":\"tb\",\"writingMode\":\"lr-tb\",\"textAnchor\":\"start\",\"baselineShift\":\"baseline\",\"color\":\"#000000\",\"fill\":\"#ffffff\",\"fillOpacity\":\"1\",\"stroke\":\"#ffffff\",\"strokeWidth\":\"0.25\",\"strokeMiterlimit\":\"4\",\"strokeOpacity\":\"1\",\"strokeDasharray\":\"none\",\"marker\":\"none\",\"visibility\":\"visible\",\"display\":\"inline\",\"overflow\":\"visible\",\"enableBackground\":\"accumulate\",\"fontFamily\":\"Sans\"},\"key\":1}),\"\\n      \\n      \\n    />\\n    \"])));\n}\n\nKubernetes.defaultProps = {};\n\nmodule.exports = Kubernetes;\n\nKubernetes.default = Kubernetes;\n","var React = require('react');\n\nfunction LinuxTux (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"defs\",{\"key\":0},[React.createElement(\"filter\",{\"x\":\"-50%\",\"y\":\"-50%\",\"width\":\"200%\",\"height\":\"200%\",\"filterUnits\":\"objectBoundingBox\",\"id\":\"filter-1\",\"key\":0},[React.createElement(\"feOffset\",{\"dx\":\"0\",\"dy\":\"0\",\"in\":\"SourceAlpha\",\"result\":\"shadowOffsetOuter1\",\"key\":0}),React.createElement(\"feGaussianBlur\",{\"stdDeviation\":\"6.5\",\"in\":\"shadowOffsetOuter1\",\"result\":\"shadowBlurOuter1\",\"key\":1})]),React.createElement(\"linearGradient\",{\"x1\":\"48.5477412%\",\"y1\":\"115.276174%\",\"x2\":\"51.0473804%\",\"y2\":\"41.3637237%\",\"id\":\"linearGradient-2\",\"key\":1},[React.createElement(\"stop\",{\"stopColor\":\"#FFEED7\",\"offset\":\"0%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#BDBFC2\",\"offset\":\"100%\",\"key\":1})]),React.createElement(\"linearGradient\",{\"x1\":\"54.4065463%\",\"y1\":\"2.40410545%\",\"x2\":\"46.1753957%\",\"y2\":\"90.5422349%\",\"id\":\"linearGradient-3\",\"key\":2},[React.createElement(\"stop\",{\"stopColor\":\"#FFFFFF\",\"stopOpacity\":\"0.8\",\"offset\":\"0%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#FFFFFF\",\"stopOpacity\":\"0\",\"offset\":\"100%\",\"key\":1})]),React.createElement(\"linearGradient\",{\"x1\":\"51.859653%\",\"y1\":\"88.2477484%\",\"x2\":\"47.9469396%\",\"y2\":\"9.74782136%\",\"id\":\"linearGradient-4\",\"key\":3},[React.createElement(\"stop\",{\"stopColor\":\"#FFEED7\",\"offset\":\"0%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#BDBFC2\",\"offset\":\"100%\",\"key\":1})]),React.createElement(\"linearGradient\",{\"x1\":\"49.9251097%\",\"y1\":\"85.4900173%\",\"x2\":\"49.9236843%\",\"y2\":\"13.8109272%\",\"id\":\"linearGradient-5\",\"key\":4},[React.createElement(\"stop\",{\"stopColor\":\"#FFEED7\",\"offset\":\"0%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#BDBFC2\",\"offset\":\"100%\",\"key\":1})]),React.createElement(\"linearGradient\",{\"x1\":\"53.9014071%\",\"y1\":\"3.10177585%\",\"x2\":\"45.9555354%\",\"y2\":\"93.8949571%\",\"id\":\"linearGradient-6\",\"key\":5},[React.createElement(\"stop\",{\"stopColor\":\"#FFFFFF\",\"stopOpacity\":\"0.65\",\"offset\":\"0%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#FFFFFF\",\"stopOpacity\":\"0\",\"offset\":\"100%\",\"key\":1})]),React.createElement(\"linearGradient\",{\"x1\":\"45.5928761%\",\"y1\":\"5.47459052%\",\"x2\":\"54.811359%\",\"y2\":\"93.5235162%\",\"id\":\"linearGradient-7\",\"key\":6},[React.createElement(\"stop\",{\"stopColor\":\"#FFFFFF\",\"stopOpacity\":\"0.65\",\"offset\":\"0%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#FFFFFF\",\"stopOpacity\":\"0\",\"offset\":\"100%\",\"key\":1})]),React.createElement(\"linearGradient\",{\"x1\":\"49.9844987%\",\"y1\":\"89.8452442%\",\"x2\":\"49.9844987%\",\"y2\":\"40.6316864%\",\"id\":\"linearGradient-8\",\"key\":7},[React.createElement(\"stop\",{\"stopColor\":\"#FFEED7\",\"offset\":\"0%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#BDBFC2\",\"offset\":\"100%\",\"key\":1})]),React.createElement(\"linearGradient\",{\"x1\":\"53.5047131%\",\"y1\":\"99.97524%\",\"x2\":\"42.7455968%\",\"y2\":\"23.5451715%\",\"id\":\"linearGradient-9\",\"key\":8},[React.createElement(\"stop\",{\"stopColor\":\"#FFEED7\",\"offset\":\"0%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#BDBFC2\",\"offset\":\"100%\",\"key\":1})]),React.createElement(\"linearGradient\",{\"x1\":\"49.8413363%\",\"y1\":\"13.2289558%\",\"x2\":\"50.2412612%\",\"y2\":\"94.6729694%\",\"id\":\"linearGradient-10\",\"key\":9},[React.createElement(\"stop\",{\"stopColor\":\"#FFFFFF\",\"stopOpacity\":\"0.8\",\"offset\":\"0%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#FFFFFF\",\"stopOpacity\":\"0\",\"offset\":\"100%\",\"key\":1})]),React.createElement(\"linearGradient\",{\"x1\":\"49.9272298%\",\"y1\":\"37.3270337%\",\"x2\":\"50.7270446%\",\"y2\":\"92.7824735%\",\"id\":\"linearGradient-11\",\"key\":10},[React.createElement(\"stop\",{\"stopColor\":\"#FFFFFF\",\"stopOpacity\":\"0.65\",\"offset\":\"0%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#FFFFFF\",\"stopOpacity\":\"0\",\"offset\":\"100%\",\"key\":1})]),React.createElement(\"linearGradient\",{\"x1\":\"49.8755597%\",\"y1\":\"2.29900584%\",\"x2\":\"49.8755597%\",\"y2\":\"81.203617%\",\"id\":\"linearGradient-12\",\"key\":11},[React.createElement(\"stop\",{\"stopColor\":\"#FFFFFF\",\"stopOpacity\":\"0.65\",\"offset\":\"0%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#FFFFFF\",\"stopOpacity\":\"0\",\"offset\":\"100%\",\"key\":1})]),React.createElement(\"linearGradient\",{\"x1\":\"49.8334391%\",\"y1\":\"2.27189065%\",\"x2\":\"49.8240398%\",\"y2\":\"71.7989617%\",\"id\":\"linearGradient-13\",\"key\":12},[React.createElement(\"stop\",{\"stopColor\":\"#FFFFFF\",\"stopOpacity\":\"0.65\",\"offset\":\"0%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#FFFFFF\",\"stopOpacity\":\"0\",\"offset\":\"100%\",\"key\":1})]),React.createElement(\"linearGradient\",{\"x1\":\"53.4670683%\",\"y1\":\"48.9213861%\",\"x2\":\"38.9488708%\",\"y2\":\"98.0999776%\",\"id\":\"linearGradient-14\",\"key\":13},[React.createElement(\"stop\",{\"stopColor\":\"#FFA63F\",\"offset\":\"0%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#FFFF00\",\"offset\":\"100%\",\"key\":1})]),React.createElement(\"linearGradient\",{\"x1\":\"52.3731508%\",\"y1\":\"143.008909%\",\"x2\":\"47.57909%\",\"y2\":\"-64.6215389%\",\"id\":\"linearGradient-15\",\"key\":14},[React.createElement(\"stop\",{\"stopColor\":\"#FFEED7\",\"offset\":\"0%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#BDBFC2\",\"offset\":\"100%\",\"key\":1})]),React.createElement(\"linearGradient\",{\"x1\":\"30.580815%\",\"y1\":\"34.0241079%\",\"x2\":\"65.8867024%\",\"y2\":\"89.175349%\",\"id\":\"linearGradient-16\",\"key\":15},[React.createElement(\"stop\",{\"stopColor\":\"#FFA63F\",\"offset\":\"0%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#FFFF00\",\"offset\":\"100%\",\"key\":1})]),React.createElement(\"linearGradient\",{\"x1\":\"59.5715091%\",\"y1\":\"-17.2155207%\",\"x2\":\"48.3608522%\",\"y2\":\"66.1184465%\",\"id\":\"linearGradient-17\",\"key\":16},[React.createElement(\"stop\",{\"stopColor\":\"#FFFFFF\",\"stopOpacity\":\"0.65\",\"offset\":\"0%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#FFFFFF\",\"stopOpacity\":\"0\",\"offset\":\"100%\",\"key\":1})]),React.createElement(\"linearGradient\",{\"x1\":\"47.7689553%\",\"y1\":\"1.56481301%\",\"x2\":\"51.3733028%\",\"y2\":\"104.312856%\",\"id\":\"linearGradient-18\",\"key\":17},[React.createElement(\"stop\",{\"stopColor\":\"#FFFFFF\",\"stopOpacity\":\"0.65\",\"offset\":\"0%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#FFFFFF\",\"stopOpacity\":\"0\",\"offset\":\"100%\",\"key\":1})]),React.createElement(\"linearGradient\",{\"x1\":\"43.5495626%\",\"y1\":\"4.5334861%\",\"x2\":\"57.1143288%\",\"y2\":\"92.8267174%\",\"id\":\"linearGradient-19\",\"key\":18},[React.createElement(\"stop\",{\"stopColor\":\"#FFFFFF\",\"stopOpacity\":\"0.65\",\"offset\":\"0%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#FFFFFF\",\"stopOpacity\":\"0\",\"offset\":\"100%\",\"key\":1})]),React.createElement(\"linearGradient\",{\"x1\":\"49.7328042%\",\"y1\":\"17.6085216%\",\"x2\":\"50.5582487%\",\"y2\":\"99.3854667%\",\"id\":\"linearGradient-20\",\"key\":19},[React.createElement(\"stop\",{\"stopColor\":\"#FFA63F\",\"offset\":\"0%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#FFFF00\",\"offset\":\"100%\",\"key\":1})]),React.createElement(\"linearGradient\",{\"x1\":\"50.1697217%\",\"y1\":\"2.89048531%\",\"x2\":\"49.6802359%\",\"y2\":\"94.1704279%\",\"id\":\"linearGradient-21\",\"key\":20},[React.createElement(\"stop\",{\"stopColor\":\"#FFFFFF\",\"stopOpacity\":\"0.65\",\"offset\":\"0%\",\"key\":0}),React.createElement(\"stop\",{\"stopColor\":\"#FFFFFF\",\"stopOpacity\":\"0\",\"offset\":\"100%\",\"key\":1})])]),React.createElement(\"g\",{\"fill\":\"none\",\"key\":1},React.createElement(\"g\",{\"transform\":\"translate(10.000000, 0.000000)\"},[React.createElement(\"path\",{\"d\":\"M235.125423,249.358628 C235.125423,266.714271 182.507524,280.855905 117.584567,280.855905 C52.6616093,280.855905 0.0437105058,266.806099 0.0437105058,249.358628 L0.0437105058,249.358628 C0.0437105058,232.002986 52.6616093,217.861352 117.584567,217.861352 C182.507524,217.861352 235.033594,232.002986 235.125423,249.358628 L235.125423,249.358628 L235.125423,249.358628 Z\",\"fill\":\"#000\",\"fillOpacity\":\"0.2\",\"filter\":\"url(#filter-1)\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M53.2125821,215.473804 C41.8258117,199.128278 39.6219206,145.867578 66.160442,113.084699 C79.2919595,97.3819748 82.6896249,86.4543483 83.6997416,71.6699125 C84.434372,54.8652433 71.8538272,4.81855066 119.237485,1.05357012 C167.263944,-2.80323922 164.600909,44.5804184 164.325423,69.6496791 C164.141765,90.7703016 179.844489,102.799874 190.680286,119.329056 C210.607135,149.632558 208.954216,201.791313 186.915306,230.074582 C158.999353,265.428667 135.123866,250.093259 119.237485,251.378862 C89.4849556,253.123609 88.4748389,268.918162 53.2125821,215.473804 L53.2125821,215.473804 Z\",\"fill\":\"#000000\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M169.10052,122.451235 C177.365111,130.073025 198.76122,164.141508 164.876395,185.445788 C152.938652,192.88392 175.528535,221.167189 186.364333,207.484699 C205.556551,182.874582 193.343321,143.571858 181.772893,129.522053 C174.059275,119.604543 162.121532,115.747734 169.10052,122.451235 L169.10052,122.451235 Z\",\"fill\":\"url(#linearGradient-2)\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M166.8048,117.859796 C180.395461,128.879251 205.097407,167.447344 169.008691,192.608434 C157.162777,200.413881 179.477174,225.115827 192.057718,212.535282 C235.676395,168.641119 190.955773,118.227111 175.528535,100.871469 C161.754216,85.719718 149.540987,104.360963 166.8048,117.859796 L166.8048,117.859796 Z\",\"stroke\":\"#000000\",\"strokeWidth\":\"0.9773\",\"fill\":\"#000000\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M147.245267,25.0208853 C146.786123,37.60143 132.919975,48.5290565 116.298963,49.5391732 C99.6779518,50.54929 86.638263,40.9990954 87.097407,28.4185507 L87.097407,28.4185507 C87.556551,15.8380059 101.422699,4.91037946 118.043711,3.90026272 C134.664722,2.98197479 147.704411,12.4403405 147.245267,25.0208853 L147.245267,25.0208853 L147.245267,25.0208853 Z\",\"fill\":\"url(#linearGradient-3)\",\"key\":4}),React.createElement(\"path\",{\"d\":\"M107.483399,54.9570721 C107.942543,63.1298347 104.085734,70.0169942 98.7596638,70.2924806 C93.4335938,70.567967 88.7503253,64.2317802 88.2911813,56.0590176 L88.2911813,56.0590176 C87.8320374,47.8862549 91.6888467,40.9990954 97.0149167,40.723609 C102.340987,40.4481226 107.024255,46.7843094 107.483399,54.9570721 L107.483399,54.9570721 L107.483399,54.9570721 Z\",\"fill\":\"url(#linearGradient-4)\",\"key\":5}),React.createElement(\"path\",{\"d\":\"M117.125423,55.5998736 C117.30908,65.0582394 123.461609,72.5882005 130.807913,72.4045429 C138.154216,72.2208853 143.93943,64.4154378 143.755773,54.8652433 L143.755773,54.8652433 C143.572115,45.4068775 137.419586,37.8769164 130.073282,38.060574 C122.726979,38.2442316 116.849936,46.1415079 117.125423,55.5998736 L117.125423,55.5998736 L117.125423,55.5998736 Z\",\"fill\":\"url(#linearGradient-5)\",\"key\":6}),React.createElement(\"path\",{\"d\":\"M123.186123,57.7119359 C123.094294,62.9461771 125.6655,67.1703016 129.063166,67.1703016 C132.369002,67.1703016 135.215695,62.9461771 135.307524,57.8037647 L135.307524,57.8037647 C135.399353,52.5695234 132.828146,48.3453989 129.430481,48.3453989 C126.032816,48.3453989 123.277952,52.5695234 123.186123,57.7119359 L123.186123,57.7119359 L123.186123,57.7119359 Z\",\"fill\":\"#000000\",\"key\":7}),React.createElement(\"path\",{\"d\":\"M101.973672,57.8037647 C102.432816,62.119718 100.779897,65.7928697 98.3923486,66.1601849 C96.0048,66.4356713 93.7090802,63.2216635 93.2499362,58.9057102 L93.2499362,58.9057102 C92.7907922,54.5897569 94.4437105,50.9166051 96.8312591,50.54929 C99.2188078,50.2738036 101.514528,53.4878114 101.973672,57.8037647 L101.973672,57.8037647 L101.973672,57.8037647 Z\",\"fill\":\"#000000\",\"key\":8}),React.createElement(\"path\",{\"d\":\"M124.563555,54.7734145 C124.288068,57.7119359 125.6655,60.0994845 127.593905,60.2831421 C129.52231,60.4667997 131.358886,58.1710798 131.634372,55.3243872 L131.634372,55.3243872 C131.909858,52.3858658 130.532426,49.9983172 128.604022,49.8146596 C126.675617,49.631002 124.839041,51.9267219 124.563555,54.7734145 L124.563555,54.7734145 L124.563555,54.7734145 Z\",\"fill\":\"url(#linearGradient-6)\",\"key\":9}),React.createElement(\"path\",{\"d\":\"M99.9534381,55.5080448 C100.228925,57.8955935 99.2188078,60.0076557 97.7495471,60.1913133 C96.2802864,60.3749709 94.9028545,58.538395 94.6273681,56.0590176 L94.6273681,56.0590176 C94.3518817,53.6714689 95.3619984,51.5594067 96.8312591,51.3757491 C98.3005198,51.1920915 99.6779518,53.1204962 99.9534381,55.5080448 L99.9534381,55.5080448 L99.9534381,55.5080448 Z\",\"fill\":\"url(#linearGradient-7)\",\"key\":10}),React.createElement(\"path\",{\"d\":\"M71.0273681,145.68392 C77.5472125,130.899485 91.4133603,104.911936 91.6888467,84.80143 C91.6888467,68.8232199 139.531648,64.9664106 143.388458,80.9446207 C147.245267,96.9228308 156.979119,120.798317 163.223477,132.368745 C169.467835,143.847344 187.558107,180.487033 168.274061,212.443453 C150.918419,240.726722 98.3005198,263.132948 70.2009089,208.586644 C60.6507144,189.669913 62.3954615,166.25357 71.0273681,145.68392 L71.0273681,145.68392 Z\",\"fill\":\"url(#linearGradient-8)\",\"key\":11}),React.createElement(\"path\",{\"d\":\"M65.1503253,134.664465 C59.5487689,145.224776 47.9783409,172.957072 76.2616093,188.108823 C106.65694,204.270691 106.565111,237.420885 70.0172514,221.626333 C36.5915704,207.39287 51.3760062,149.724387 60.7425432,135.950068 C66.8032436,126.308045 75.986123,114.46213 65.1503253,134.664465 L65.1503253,134.664465 Z\",\"fill\":\"url(#linearGradient-9)\",\"key\":12}),React.createElement(\"path\",{\"d\":\"M69.9254226,122.726722 C61.0180296,137.235671 39.7137494,171.395983 68.2725043,189.210769 C106.65694,212.810769 95.8211424,236.31894 60.7425432,215.106488 C11.3386521,185.537617 54.7736716,125.848901 74.5168623,103.07536 C97.1067455,77.5469553 78.8328156,107.758628 69.9254226,122.726722 L69.9254226,122.726722 Z\",\"stroke\":\"#000000\",\"strokeWidth\":\"1.25\",\"fill\":\"#000000\",\"key\":13}),React.createElement(\"path\",{\"d\":\"M156.428146,151.285477 C156.428146,167.447344 140.90908,188.384309 114.27873,188.200652 C86.8219206,188.384309 75.1596638,167.447344 75.1596638,151.285477 C75.1596638,135.123609 93.341765,121.992092 115.747991,121.992092 C138.246045,122.08392 156.428146,135.123609 156.428146,151.285477 L156.428146,151.285477 Z\",\"fill\":\"url(#linearGradient-10)\",\"key\":14}),React.createElement(\"path\",{\"d\":\"M141.919197,100.504154 C141.643711,117.216994 130.716084,121.165632 116.941765,121.165632 C103.167446,121.165632 93.1581074,118.686255 91.9643331,100.504154 C91.9643331,89.1173833 103.167446,82.5057102 116.941765,82.5057102 C130.716084,82.4138814 141.919197,89.0255546 141.919197,100.504154 L141.919197,100.504154 Z\",\"fill\":\"url(#linearGradient-11)\",\"key\":15}),React.createElement(\"path\",{\"d\":\"M58.6304809,126.216216 C67.6297027,112.533726 86.638263,91.504932 62.2118039,129.154737 C42.3767844,160.19287 54.8655004,180.119718 61.293516,185.629446 C79.8429323,202.158628 79.1083019,213.269913 64.5075237,204.546177 C33.1939051,185.904932 39.7137494,154.499485 58.6304809,126.216216 L58.6304809,126.216216 Z\",\"fill\":\"url(#linearGradient-12)\",\"key\":16}),React.createElement(\"path\",{\"d\":\"M188.935539,131.817772 C181.130092,115.747734 156.336318,74.9757491 190.129314,122.359407 C220.89196,165.243453 199.312193,195.087811 195.455384,198.026333 C191.598574,200.964854 178.650714,206.933726 182.415695,196.557072 C186.272504,186.180418 205.372893,166.529056 188.935539,131.817772 L188.935539,131.817772 Z\",\"fill\":\"url(#linearGradient-13)\",\"key\":17}),React.createElement(\"path\",{\"d\":\"M51.8351502,258.541508 C31.2655004,247.613881 1.42114241,260.65357 12.2569401,231.084699 C14.4608311,224.381197 9.0429323,214.280029 12.5324265,207.760185 C16.6647222,199.77108 25.5721152,201.515827 30.8981852,196.189757 C36.1324265,190.680029 39.438263,181.129835 49.263944,182.599095 C58.9977961,184.068356 65.5176405,196.006099 72.3129712,210.698706 C77.3635549,221.167189 95.1783409,235.951625 93.9845665,247.70571 C92.5153058,265.704154 72.0374848,269.101819 51.8351502,258.541508 L51.8351502,258.541508 Z\",\"stroke\":\"#E68C3F\",\"strokeWidth\":\"6.25\",\"fill\":\"url(#linearGradient-14)\",\"key\":18}),React.createElement(\"path\",{\"d\":\"M201.607913,189.11894 C198.485734,194.995983 185.446045,204.454348 176.72231,201.974971 C167.906746,199.587422 163.866279,186.180418 165.611026,175.987422 C167.263944,164.600652 176.72231,163.95785 188.660053,169.651235 C201.516084,175.987422 205.372893,181.313492 201.607913,189.11894 L201.607913,189.11894 Z\",\"fill\":\"url(#linearGradient-15)\",\"key\":19}),React.createElement(\"path\",{\"d\":\"M194.445267,253.490924 C209.505189,235.216994 243.022699,238.981975 220.432816,213.912714 C215.657718,208.494815 217.126979,196.924387 211.249936,191.965632 C204.362777,185.904932 196.740987,190.863687 189.761998,187.741508 C182.78301,184.343842 175.436707,177.823998 166.896629,182.415438 C158.356551,187.098706 157.438263,199.220107 156.611804,215.198317 C155.877174,226.676916 145.408691,245.869134 151.010247,256.429446 C159.091181,272.774971 180.119975,270.57108 194.445267,253.490924 L194.445267,253.490924 Z\",\"stroke\":\"#E68C3F\",\"strokeWidth\":\"6.2507\",\"fill\":\"url(#linearGradient-16)\",\"key\":20}),React.createElement(\"path\",{\"d\":\"M187.925423,229.064465 C211.249936,194.628667 193.894294,194.904154 188.017251,192.241119 C182.140209,189.486255 175.987679,184.068356 169.10052,187.833337 C162.21336,191.690146 161.846045,201.607656 161.662388,214.647344 C161.386901,224.013881 153.581454,239.716605 158.264722,248.440341 C163.958107,258.633337 177.732426,243.848901 187.925423,229.064465 L187.925423,229.064465 Z\",\"fill\":\"url(#linearGradient-17)\",\"key\":21}),React.createElement(\"path\",{\"d\":\"M47.0600529,234.02322 C12.1651113,211.433337 28.5106366,203.719718 33.7448778,200.138395 C40.0810646,195.546955 40.1728934,186.731391 47.9783409,187.55785 C55.7837883,188.384309 60.375228,198.026333 65.6094693,209.964076 C69.4662786,218.504154 82.8732825,229.890924 81.8631658,239.716605 C80.5775626,251.287033 62.1199751,243.665243 47.0600529,234.02322 L47.0600529,234.02322 Z\",\"fill\":\"url(#linearGradient-18)\",\"key\":22}),React.createElement(\"path\",{\"d\":\"M199.587679,188.843453 C196.832816,193.618551 185.629703,201.148512 178.19157,199.128278 C170.569781,197.199874 167.080286,186.455905 168.641376,178.374971 C170.018808,169.192092 178.19157,168.732948 188.476395,173.324387 C199.404022,178.283142 202.801687,182.507267 199.587679,188.843453 L199.587679,188.843453 Z\",\"fill\":\"#000000\",\"key\":23}),React.createElement(\"path\",{\"d\":\"M192.057718,186.180418 C190.312971,189.486255 182.966668,194.720496 177.824255,193.343064 C172.681843,191.965632 170.110637,184.5275 170.937096,178.925944 C171.671726,172.589757 177.181454,172.222442 184.160442,175.344621 C191.690403,178.834115 194.077952,181.772636 192.057718,186.180418 L192.057718,186.180418 Z\",\"fill\":\"url(#linearGradient-19)\",\"key\":24}),React.createElement(\"path\",{\"d\":\"M97.1067455,66.3438425 C100.779897,62.9461771 109.68729,52.5695234 126.583788,63.4053211 C129.705967,65.4255546 132.277174,65.6092121 138.246045,68.1804184 C150.275617,73.1391732 144.582232,85.0769164 131.726201,89.1173833 C126.216473,90.8621304 121.257718,97.5656324 111.340209,96.9228308 C102.800131,96.4636868 100.59624,90.8621304 95.3619984,87.8317802 C86.0872903,82.597539 84.7098584,75.5267219 89.760442,71.7617413 C94.8110257,67.9967608 96.7394304,66.6193289 97.1067455,66.3438425 L97.1067455,66.3438425 Z\",\"stroke\":\"#E68C3F\",\"strokeWidth\":\"3.75\",\"fill\":\"url(#linearGradient-20)\",\"key\":25}),React.createElement(\"path\",{\"d\":\"M138.429703,75.9858658 C133.379119,76.2613522 122.451493,87.1889787 110.972893,87.1889787 C99.4942942,87.1889787 92.6071346,76.5368386 90.8623875,76.5368386\",\"stroke\":\"#E68C3F\",\"strokeWidth\":\"2.5\",\"key\":26}),React.createElement(\"path\",{\"d\":\"M102.800131,65.4255546 C104.636707,63.7726363 110.421921,59.2730254 118.043711,63.8644651 C119.696629,64.782753 121.349547,65.7928697 123.737096,67.1703016 C128.604022,70.0169942 126.216473,74.14929 120.33943,76.7204962 C117.676395,77.8224417 113.268613,80.2099904 109.962777,80.0263328 C106.289625,79.6590176 103.810247,77.2714689 101.422699,75.7103795 C96.9230879,72.7718581 97.1985743,70.2924806 99.3106366,68.364076 C100.871726,66.8948153 102.616473,65.5173833 102.800131,65.4255546 L102.800131,65.4255546 Z\",\"fill\":\"url(#linearGradient-21)\",\"key\":27})]))]);\n}\n\nLinuxTux.defaultProps = {\"width\":\"256px\",\"height\":\"295px\",\"viewBox\":\"0 0 256 295\",\"version\":\"1.1\",\"preserveAspectRatio\":\"xMidYMid\"};\n\nmodule.exports = LinuxTux;\n\nLinuxTux.default = LinuxTux;\n","var React = require('react');\n\nfunction Mongodb (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"defs\",{\"key\":0}),React.createElement(\"g\",{\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",null,[React.createElement(\"path\",{\"d\":\"M476.713442,60.4626238 C476.252384,60.5550082 475.791324,61.5703742 475.791324,62.1238178 C475.69894,65.8148802 475.606556,75.5972748 475.606556,82.241187 C475.606556,82.425956 475.882846,82.7946306 476.16,82.7946306 C477.54404,82.887015 480.866428,82.9793996 483.726894,82.9793996 C487.69511,82.9793996 490.00213,82.425956 491.29465,81.8725124 C494.616174,80.2113186 496.184984,76.6117772 496.184984,72.6435614 C496.184984,63.6926272 489.909746,60.2778548 480.589274,60.2778548 C479.943446,60.1863338 478.098346,60.1863338 476.713442,60.4626238 L476.713442,60.4626238 L476.713442,60.4626238 Z M500.522738,101.712728 C500.522738,92.5770252 493.785578,87.5010588 481.60464,87.5010588 C481.051196,87.5010588 477.175366,87.4086744 476.252384,87.5934434 C475.97523,87.6858278 475.606556,87.8705968 475.606556,88.1477502 C475.606556,94.699278 475.514172,105.127501 475.791324,109.187238 C475.97523,110.940816 477.26775,113.432607 478.83656,114.170819 C480.49689,115.093801 484.2812,115.277706 486.864512,115.277706 C494.155116,115.277706 500.522738,111.217969 500.522738,101.712728 L500.522738,101.712728 L500.522738,101.712728 Z M457.888592,55.387521 C458.810712,55.387521 461.579656,55.663811 468.68549,55.663811 C475.421786,55.663811 480.774044,55.4799054 487.326434,55.4799054 C495.354388,55.4799054 506.428438,58.3403708 506.428438,70.3365394 C506.428438,76.2431028 502.275454,80.949531 496.830812,83.256553 C496.554522,83.3489374 496.554522,83.532843 496.830812,83.6252274 C504.582474,85.5635748 511.41202,90.3623876 511.41202,99.4057064 C511.41202,108.26512 505.874994,113.893666 497.846178,117.400823 C492.95498,119.523076 486.864512,120.261288 480.681658,120.261288 C475.97523,120.261288 463.333234,119.707845 456.319784,119.892614 C455.581572,119.61546 456.965612,116.293072 457.61144,115.739629 C459.272634,115.647244 460.56429,115.55486 462.317868,115.001416 C464.809658,114.355588 465.085948,113.617376 465.455486,109.833929 C465.640256,106.603926 465.640256,95.1603372 465.640256,87.0399998 C465.640256,75.8735648 465.73264,68.306671 465.640256,64.6156086 C465.547872,61.7551432 464.532506,60.8321618 462.502636,60.2778548 C460.933828,60.0015648 458.349652,59.6320268 456.2274,59.3557368 C455.765476,58.8938144 457.334286,55.7561954 457.888592,55.387521 L457.888592,55.387521 L457.888592,55.387521 Z M404.641456,112.786779 C406.856958,114.539494 411.193848,115.277706 415.069678,115.277706 C420.05326,115.277706 425.03598,114.355588 429.834792,110.017835 C434.72599,105.58856 438.139898,98.7598784 438.139898,87.8705968 C438.139898,77.4423742 434.171682,68.952499 426.051346,63.9697806 C421.437302,61.1084518 415.530738,59.9091802 408.702056,59.9091802 C406.672188,59.9091802 404.73384,60.0015648 403.53457,60.5550082 C403.257416,60.7397772 402.611588,61.5703742 402.611588,62.0314332 C402.426818,63.8773962 402.426818,78.0882022 402.426818,86.3941718 C402.426818,94.9764316 402.426818,106.9726 402.611588,108.356641 C402.611588,109.741545 403.257416,111.863797 404.641456,112.786779 L404.641456,112.786779 L404.641456,112.786779 Z M383.69349,55.387521 C385.447068,55.387521 392.183366,55.663811 395.413368,55.663811 C401.227548,55.663811 405.379668,55.387521 416.361334,55.387521 C425.589422,55.387521 433.341086,57.8793118 438.87811,62.5848768 C445.614408,68.3990554 449.121564,76.4278716 449.121564,86.2094028 C449.121564,100.143919 442.753942,108.172735 436.38632,112.786779 C430.01956,117.493207 421.713592,120.261288 409.902192,120.261288 C403.626954,120.261288 392.830056,120.076519 383.87826,119.984135 L383.785874,119.984135 C383.324816,119.154401 384.524088,115.924398 385.2623,115.832013 C387.661706,115.55486 388.307534,115.462475 389.507668,115.001416 C391.445152,114.263204 391.81469,113.247838 392.091844,109.833929 C392.368134,103.466307 392.27575,95.8070286 392.27575,87.1323844 C392.27575,80.949531 392.368134,68.8601146 392.183366,64.9842832 C391.907076,61.7551432 390.523034,60.9245462 387.75409,60.3702392 C386.37005,60.0939492 384.524088,59.7244114 381.940776,59.4481212 C381.571238,58.8014298 383.232432,55.9409644 383.69349,55.387521 L383.69349,55.387521 L383.69349,55.387521 Z\",\"fill\":\"#8E714E\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M272.033456,116.385457 C269.726434,116.108303 268.06524,115.739629 266.034508,114.816647 C265.758218,114.631878 265.296296,113.70976 265.296296,113.340222 C265.111528,110.110219 265.111528,100.882131 265.111528,94.699278 C265.111528,89.7156962 264.281794,85.378806 262.158678,82.3335716 C259.666886,78.8264146 256.068208,76.7965462 251.454164,76.7965462 C247.393564,76.7965462 241.948924,79.5654906 237.427264,83.441322 C237.33488,83.532843 236.596668,84.1795344 236.689052,83.1641684 C236.689052,82.1488026 236.87382,80.118934 236.966206,78.7348936 C237.05859,77.4423742 236.320378,76.7965462 236.320378,76.7965462 C233.366664,78.2729712 225.061558,80.2113186 222.016323,80.4876086 C219.801686,80.949531 219.248242,83.071784 221.555264,83.8099964 L221.647649,83.8099964 C224.138576,84.548209 225.79977,85.378806 227.091426,86.2094028 C228.014408,86.9476154 227.922022,87.9629812 227.922022,88.7935782 C228.014408,95.714644 228.014408,106.326772 227.738118,112.140951 C227.645732,114.447973 226.999904,115.277706 225.338712,115.647244 L225.522616,115.55486 C224.23096,115.832013 223.215594,116.108303 221.646785,116.293072 C221.093342,116.846516 221.093342,119.800229 221.646785,120.446057 C222.662152,120.446057 228.014408,120.168904 232.444546,120.168904 C238.535014,120.168904 241.672634,120.446057 243.241442,120.446057 C243.88727,119.707845 244.07204,116.9389 243.702502,116.293072 C241.948924,116.200688 240.657268,116.016782 239.457996,115.647244 C237.796802,115.277706 237.33488,114.447973 237.242496,112.509625 C237.05859,107.618428 237.05859,97.2834534 237.05859,90.2700032 C237.05859,88.3316558 237.612034,87.4086744 238.165476,86.8552308 C240.28773,85.0101314 243.702502,83.717612 246.747736,83.717612 C249.700586,83.717612 251.638934,84.6405934 253.115358,85.8407284 C255.145228,87.5010588 255.791056,89.9004652 256.068208,91.6540436 C256.529268,95.6222596 256.345362,103.466307 256.345362,110.294988 C256.345362,113.98605 256.068208,114.909032 254.684168,115.370091 C254.03834,115.647244 252.377146,116.016782 250.438798,116.200688 C249.79297,116.846516 249.97774,119.707845 250.438798,120.353673 C253.115358,120.353673 256.252978,120.076519 260.867022,120.076519 C266.587952,120.076519 270.279878,120.353673 271.756302,120.353673 C272.217362,119.800229 272.40213,117.123669 272.032592,116.385457 L272.033456,116.385457 L272.033456,116.385457 Z M297.595466,81.1343 C292.70427,81.1343 289.659034,84.9177468 289.659034,90.8234468 C289.659034,96.821531 292.334732,103.742597 299.902488,103.742597 C301.194144,103.742597 303.59355,103.189153 304.700438,101.897497 C306.454016,100.236303 307.654152,96.9139156 307.654152,93.407622 C307.654152,85.7483438 303.86984,81.1343 297.595466,81.1343 L297.595466,81.1343 L297.595466,81.1343 Z M296.948776,121.922482 C295.103676,121.922482 293.811156,122.475926 292.981422,122.937848 C289.104728,125.428776 287.352012,127.828182 287.352012,130.689511 C287.352012,133.365207 288.366516,135.48746 290.582016,137.333423 C293.257712,139.640445 296.948776,140.748195 301.655204,140.748195 C311.06806,140.748195 315.221044,135.672229 315.221044,130.689511 C315.221044,127.182354 313.467466,124.875332 309.868788,123.583676 C307.284614,122.475926 302.578184,121.922482 296.948776,121.922482 L296.948776,121.922482 L296.948776,121.922482 Z M297.595466,145.915683 C291.966056,145.915683 287.905456,144.715548 284.399162,142.039851 C280.98439,139.455676 279.507966,135.579845 279.507966,132.904148 C279.507966,132.165936 279.692734,130.135204 281.353928,128.290104 C282.368432,127.182354 284.583068,125.060101 289.843804,121.461423 C290.02771,121.369039 290.120094,121.276654 290.120094,121.091885 C290.120094,120.907116 289.935324,120.722347 289.75142,120.630826 C285.413666,118.969632 284.12201,116.293072 283.752472,114.816647 L283.752472,114.631878 C283.66095,114.078435 283.476182,113.524991 284.306778,112.970684 C284.952606,112.509625 285.875588,111.956182 286.89009,111.310354 C288.4589,110.387373 290.120094,109.372007 291.13546,108.54141 C291.320228,108.356641 291.320228,108.172735 291.320228,107.987966 C291.320228,107.803197 291.13546,107.618428 290.95069,107.526907 C284.491548,105.403791 281.261544,100.604978 281.261544,93.407622 C281.261544,88.7011938 283.383798,84.4558244 287.167244,81.780128 C289.75142,79.7493962 296.210562,77.2584686 300.455932,77.2584686 L300.733086,77.2584686 C305.069976,77.3499898 307.469382,78.2729712 310.883292,79.473106 C312.729254,80.118934 314.482832,80.3952242 316.882238,80.3952242 C320.480916,80.3952242 322.049726,79.2883372 323.341382,77.9966812 C323.433766,78.1805866 323.618536,78.6425092 323.71092,79.8417806 C323.803304,81.0419156 323.433766,82.7946306 322.510786,84.08715 C321.772572,85.1016524 320.112242,85.8407284 318.451048,85.8407284 L317.989126,85.8407284 C316.327932,85.6559594 315.58972,85.4711904 315.58972,85.4711904 L315.221044,85.6559594 C315.12866,85.8407284 315.221044,86.024634 315.31343,86.3017874 L315.405814,86.4865564 C315.58972,87.3171532 315.959258,89.8080808 315.959258,90.4547722 C315.959258,98.021666 312.914022,101.34319 309.68402,103.834981 C306.5464,106.142003 302.947722,107.618428 298.887122,107.987966 C298.794738,107.987966 298.426064,107.987966 297.595466,108.080351 C297.133544,108.080351 296.487716,108.172735 296.395332,108.172735 L296.302948,108.172735 C295.564734,108.356641 293.719636,109.279622 293.719636,110.848432 C293.719636,112.232472 294.550232,113.893666 298.517584,114.170819 C299.348182,114.263204 300.178778,114.263204 301.10176,114.355588 C306.361632,114.724263 312.914022,115.186185 315.959258,116.200688 C320.203764,117.769497 322.880324,121.552944 322.880324,126.075467 C322.880324,132.904148 317.989126,139.27177 309.868788,143.239123 C305.900572,144.992701 301.932356,145.915683 297.595466,145.915683 L297.595466,145.915683 L297.595466,145.915683 Z M350.195912,81.595359 C348.257564,81.595359 346.503986,82.056418 345.21233,82.9793996 C341.613652,85.194037 339.76769,89.6241752 339.76769,96.0833186 C339.76769,108.172735 345.858158,116.66261 354.532802,116.66261 C357.116978,116.66261 359.146846,115.924398 360.900424,114.447973 C363.57612,112.232472 364.961024,107.803197 364.961024,101.620344 C364.961024,89.6241752 358.962076,81.595359 350.195912,81.595359 L350.195912,81.595359 L350.195912,81.595359 Z M351.857106,121.091885 C336.169012,121.091885 330.539602,109.556776 330.539602,98.7598784 C330.539602,91.1929846 333.584836,85.378806 339.675304,81.225821 C344.013058,78.5501246 349.180546,77.0736996 353.79459,77.0736996 C365.790758,77.0736996 374.189112,85.6559594 374.189112,98.021666 C374.189112,106.419157 370.866724,113.063069 364.499102,117.123669 C361.453868,119.153538 356.193996,121.091885 351.856242,121.091885 L351.857106,121.091885 L351.857106,121.091885 Z M187.410994,81.595359 C185.472647,81.595359 183.719932,82.056418 182.427413,82.9793996 C178.828735,85.194037 176.982772,89.6241752 176.982772,96.0833186 C176.982772,108.172735 183.073241,116.66261 191.747885,116.66261 C194.33206,116.66261 196.361929,115.924398 198.115507,114.447973 C200.791203,112.232472 202.176107,107.803197 202.176107,101.620344 C202.176107,89.6241752 196.269544,81.595359 187.410994,81.595359 L187.410994,81.595359 L187.410994,81.595359 Z M189.072188,121.091885 C173.384094,121.091885 167.754684,109.556776 167.754684,98.7598784 C167.754684,91.1929846 170.799918,85.378806 176.890387,81.225821 C181.228141,78.5501246 186.395628,77.0736996 191.009672,77.0736996 C203.006704,77.0736996 211.404195,85.6559594 211.404195,98.021666 C211.404195,106.419157 208.081807,113.063069 201.714185,117.123669 C198.761335,119.153538 193.501463,121.091885 189.072188,121.091885 L189.072188,121.091885 L189.072188,121.091885 Z M83.5941444,120.168904 C83.4093754,119.892614 83.2246064,119.062017 83.316991,118.046651 C83.316991,117.308438 83.50176,116.846516 83.5941444,116.66261 C85.5316284,116.385457 86.5469944,116.108303 87.6538814,115.832013 C89.4998442,115.370091 90.2380568,114.355588 90.3304412,112.048566 C90.6075946,106.511541 90.6075946,95.990934 90.5152102,88.7011938 L90.5152102,88.5164248 C90.5152102,87.6858278 90.5152102,86.6704618 89.4998442,85.9322494 C88.0234192,85.0101314 86.2698408,84.1795344 83.962819,83.532843 C83.132222,83.256553 82.5787784,82.7946306 82.671163,82.241187 C82.671163,81.6877436 83.2246064,81.0419156 84.4247414,80.8571466 C87.4699758,80.579993 95.405544,78.6425092 98.543163,77.2584686 C98.727932,77.4423742 99.0050854,77.9966812 99.0050854,78.7348936 L98.912701,79.7493962 C98.8203164,80.764762 98.727932,81.964897 98.727932,83.1641684 C98.727932,83.532843 99.0974698,83.8099964 99.4661444,83.8099964 C99.6509134,83.8099964 99.8356824,83.717612 100.020451,83.6252274 C105.926151,79.0111836 111.278407,77.3499898 114.046488,77.3499898 C118.569011,77.3499898 122.075305,79.473106 124.751864,83.902381 C124.93577,84.1795344 125.120539,84.2710554 125.397692,84.2710554 C125.582461,84.2710554 125.858751,84.1795344 125.951136,83.9947654 C131.395777,79.8417806 136.840418,77.3499898 140.439096,77.3499898 C149.021355,77.3499898 154.097321,83.717612 154.097321,94.5145092 C154.097321,97.5597436 154.097321,101.527959 154.004937,105.127501 C154.004937,108.356641 153.912553,111.310354 153.912553,113.432607 C153.912553,113.893666 154.558381,115.370091 155.573746,115.647244 C156.865402,116.293072 158.618981,116.570226 160.926003,116.9389 L161.018387,116.9389 C161.203156,117.584728 160.833618,119.984135 160.464944,120.446057 C159.910637,120.446057 159.08004,120.446057 158.157922,120.353673 C156.404343,120.261288 153.912553,120.168904 151.144472,120.168904 C145.422677,120.168904 142.469827,120.261288 139.608499,120.446057 C139.424593,119.707845 139.332208,117.493207 139.608499,116.9389 C141.269692,116.66261 142.100289,116.385457 143.115655,116.108303 C144.961618,115.55486 145.422677,114.724263 145.515062,112.324856 C145.515062,110.572141 145.883736,95.6222596 145.330293,92.0227182 C144.776849,88.3316558 142.007905,83.9947654 135.917436,83.9947654 C133.610414,83.9947654 130.011736,84.9177468 126.504579,87.5934434 C126.320674,87.7782124 126.135905,88.2392714 126.135905,88.5164248 L126.135905,88.6088092 C126.504579,90.5462932 126.504579,92.7617942 126.504579,96.175703 L126.504579,102.173787 C126.504579,106.326772 126.412195,110.202604 126.504579,113.155453 C126.504579,115.186185 127.704714,115.647244 128.72008,116.016782 C129.273524,116.108303 129.642198,116.200688 130.104121,116.293072 C130.934718,116.477841 131.765315,116.66261 133.056971,116.9389 C133.24174,117.308438 133.24174,118.50771 132.964586,119.523076 C132.872202,120.076519 132.687433,120.353673 132.595912,120.446057 C129.458293,120.353673 126.228289,120.261288 121.521861,120.261288 C120.137821,120.261288 117.738414,120.353673 115.707682,120.353673 C114.046488,120.353673 112.477679,120.446057 111.555561,120.446057 C111.463176,120.261288 111.278407,119.61546 111.278407,118.600094 C111.278407,117.769497 111.463176,117.123669 111.647945,116.9389 C112.109004,116.846516 112.477679,116.754995 112.939601,116.754995 C114.046488,116.570226 114.96947,116.385457 115.892451,116.200688 C117.461261,115.739629 118.014704,114.909032 118.107089,112.879163 C118.384242,108.26512 118.660532,95.068816 118.014704,91.7464282 C116.907817,86.3941718 113.862583,83.717612 108.971386,83.717612 C106.11092,83.717612 102.511379,85.1016524 99.558529,87.3171532 C99.0974698,87.6858278 98.727932,88.6088092 98.727932,89.4394062 L98.727932,94.884047 C98.727932,101.527959 98.727932,109.833929 98.8203164,113.432607 C98.912701,114.539494 99.2813754,115.832013 101.404492,116.293072 C101.865551,116.385457 102.603763,116.570226 103.526745,116.66261 L105.187939,116.9389 C105.372708,117.493207 105.280323,119.707845 104.910785,120.446057 C103.987804,120.446057 102.880917,120.353673 101.588397,120.353673 C99.6509134,120.261288 97.1591224,120.168904 94.3910416,120.168904 C91.1610382,120.168904 88.8540162,120.261288 87.0080534,120.353673 C85.7163974,120.168904 84.7010314,120.168904 83.5941444,120.168904 L83.5941444,120.168904 L83.5941444,120.168904 Z\",\"fill\":\"#442D22\",\"key\":1}),React.createElement(\"g\",{\"key\":2},[React.createElement(\"path\",{\"d\":\"M35.0534362,142.317005 L31.2699893,141.024486 C31.2699893,141.024486 31.7319117,121.737713 24.8108459,120.353673 C20.1968021,115.001416 25.5490584,-106.659184 42.1592709,119.61546 C42.1592709,119.61546 36.43834,122.475926 35.4229741,127.367123 C34.3152237,132.165936 35.0534362,142.317005 35.0534362,142.317005 L35.0534362,142.317005 L35.0534362,142.317005 Z\",\"fill\":\"#FFFFFF\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M35.0534362,142.317005 L31.2699893,141.024486 C31.2699893,141.024486 31.7319117,121.737713 24.8108459,120.353673 C20.1968021,115.001416 25.5490584,-106.659184 42.1592709,119.61546 C42.1592709,119.61546 36.43834,122.475926 35.4229741,127.367123 C34.3152237,132.165936 35.0534362,142.317005 35.0534362,142.317005 L35.0534362,142.317005 L35.0534362,142.317005 Z\",\"fill\":\"#A6A385\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M37.0841679,123.676061 C37.0841679,123.676061 70.2130718,101.897497 62.461409,56.5867926 C54.9868998,23.6426576 37.360458,12.8457605 35.422974,8.69277572 C33.3007211,5.7399258 31.2699892,0.572438448 31.2699892,0.572438448 L32.6548931,92.2074874 C32.6548931,92.2998718 29.7935642,120.261288 37.0841679,123.676061\",\"fill\":\"#FFFFFF\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M37.0841679,123.676061 C37.0841679,123.676061 70.2130718,101.897497 62.461409,56.5867926 C54.9868998,23.6426576 37.360458,12.8457605 35.422974,8.69277572 C33.3007211,5.7399258 31.2699892,0.572438448 31.2699892,0.572438448 L32.6548931,92.2074874 C32.6548931,92.2998718 29.7935642,120.261288 37.0841679,123.676061\",\"fill\":\"#499D4A\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M29.332506,124.875332 C29.332506,124.875332 -1.76652951,103.650212 0.0794333896,66.2768026 C1.8321484,28.9025296 23.7954806,10.5387386 28.0399866,7.21635076 C30.8089308,4.26350084 30.9013154,3.15575042 31.0860844,0.202900506 C33.0235682,4.35588532 32.6548938,62.3085868 32.9311838,69.1372682 C33.7617808,95.4374908 31.4547588,119.892614 29.332506,124.875332 L29.332506,124.875332 L29.332506,124.875332 Z\",\"fill\":\"#FFFFFF\",\"key\":4}),React.createElement(\"path\",{\"d\":\"M29.332506,124.875332 C29.332506,124.875332 -1.76652951,103.650212 0.0794333896,66.2768026 C1.8321484,28.9025296 23.7954806,10.5387386 28.0399866,7.21635076 C30.8089308,4.26350084 30.9013154,3.15575042 31.0860844,0.202900506 C33.0235682,4.35588532 32.6548938,62.3085868 32.9311838,69.1372682 C33.7617808,95.4374908 31.4547588,119.892614 29.332506,124.875332 L29.332506,124.875332 L29.332506,124.875332 Z\",\"fill\":\"#58AA50\",\"key\":5})])]))]);\n}\n\nMongodb.defaultProps = {\"width\":\"512px\",\"height\":\"146px\",\"viewBox\":\"0 0 512 146\",\"version\":\"1.1\"};\n\nmodule.exports = Mongodb;\n\nMongodb.default = Mongodb;\n","var React = require('react');\n\nfunction NodejsIcon (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"g\",null,React.createElement(\"path\",{\"d\":\"M127.999999,288.463771 C124.024844,288.463771 120.314699,287.403728 116.869564,285.548656 L81.6231884,264.612838 C76.32298,261.697724 78.9730854,260.637682 80.5631458,260.107661 C87.7184259,257.72257 89.0434775,257.192547 96.4637688,252.952381 C97.2587979,252.422361 98.3188405,252.687372 99.1138718,253.217392 L126.144927,269.383024 C127.20497,269.913045 128.530021,269.913045 129.325053,269.383024 L235.064182,208.165634 C236.124225,207.635611 236.654245,206.575571 236.654245,205.250519 L236.654245,83.0807467 C236.654245,81.7556929 236.124225,80.6956526 235.064182,80.1656324 L129.325053,19.2132506 C128.26501,18.6832305 126.939959,18.6832305 126.144927,19.2132506 L20.4057954,80.1656324 C19.3457551,80.6956526 18.8157349,82.0207041 18.8157349,83.0807467 L18.8157349,205.250519 C18.8157349,206.31056 19.3457551,207.635611 20.4057954,208.165634 L49.2919247,224.861286 C64.9275364,232.811595 74.7329196,223.536234 74.7329196,214.260871 L74.7329196,93.681159 C74.7329196,92.0910985 76.0579711,90.5010358 77.9130428,90.5010358 L91.4285716,90.5010358 C93.0186343,90.5010358 94.6086948,91.8260873 94.6086948,93.681159 L94.6086948,214.260871 C94.6086948,235.196689 83.2132512,247.387164 63.3374737,247.387164 C57.2422362,247.387164 52.4720502,247.387164 38.9565214,240.761906 L11.1304347,224.861286 C4.24016581,220.886129 5.68434189e-14,213.46584 5.68434189e-14,205.515528 L5.68434189e-14,83.3457557 C5.68434189e-14,75.3954465 4.24016581,67.9751552 11.1304347,64.0000006 L116.869564,2.78260752 C123.494824,-0.927535841 132.505176,-0.927535841 139.130436,2.78260752 L244.869565,64.0000006 C251.759834,67.9751552 256,75.3954465 256,83.3457557 L256,205.515528 C256,213.46584 251.759834,220.886129 244.869565,224.861286 L139.130436,286.078676 C135.685299,287.668739 131.710145,288.463771 127.999999,288.463771 L127.999999,288.463771 Z M160.596274,204.455488 C114.219461,204.455488 104.679089,183.254659 104.679089,165.233955 C104.679089,163.643893 106.004141,162.053832 107.859212,162.053832 L121.639752,162.053832 C123.229813,162.053832 124.554864,163.113872 124.554864,164.703935 C126.674947,178.749484 132.770187,185.639753 160.861283,185.639753 C183.122154,185.639753 192.662526,180.604556 192.662526,168.67909 C192.662526,161.788821 190.012423,156.753624 155.296065,153.308489 C126.409938,150.393375 108.389235,144.033126 108.389235,120.977226 C108.389235,99.5113875 126.409938,86.7908901 156.621119,86.7908901 C190.542443,86.7908901 207.238095,98.4513472 209.358178,123.89234 C209.358178,124.687371 209.093167,125.482403 208.563147,126.277434 C208.033127,126.807454 207.238095,127.337474 206.443064,127.337474 L192.662526,127.337474 C191.337475,127.337474 190.012423,126.277434 189.747412,124.952382 C186.567289,110.376813 178.351966,105.606625 156.621119,105.606625 C132.240165,105.606625 129.325053,114.086957 129.325053,120.447205 C129.325053,128.132506 132.770187,130.5176 165.631471,134.757766 C198.227744,138.997931 213.598344,145.093169 213.598344,167.884058 C213.333333,191.20497 194.252589,204.455488 160.596274,204.455488 L160.596274,204.455488 Z\",\"fill\":\"#539E43\"})));\n}\n\nNodejsIcon.defaultProps = {\"width\":\"256px\",\"height\":\"289px\",\"viewBox\":\"0 0 256 289\",\"version\":\"1.1\",\"preserveAspectRatio\":\"xMidYMid\"};\n\nmodule.exports = NodejsIcon;\n\nNodejsIcon.default = NodejsIcon;\n","var React = require('react');\n\nfunction Postgresql (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"g\",null,[React.createElement(\"path\",{\"d\":\"M255.007926,158.085617 C253.473109,153.437413 249.452194,150.199279 244.251788,149.42182 C241.799982,149.055852 238.991667,149.211935 235.668988,149.897164 C229.877358,151.092028 225.580342,151.546679 222.44449,151.635363 C234.280794,131.650217 243.905921,108.859714 249.446873,87.4065589 C258.406282,52.7182633 253.61855,36.9154365 248.023797,29.7669469 C233.217182,10.8477783 211.614448,0.683454965 185.55152,0.371879908 C171.649478,0.202198614 159.443658,2.94725173 153.077358,4.92075751 C147.149155,3.87547344 140.774577,3.29134411 134.08606,3.18315012 C121.550337,2.9833164 110.473164,5.71595381 101.008259,11.332582 C95.7670577,9.56127483 87.3580785,7.06335335 77.6460416,5.46882217 C54.8035104,1.71868822 36.3939769,4.64110855 22.9282587,14.153903 C6.62230023,25.6721293 -0.937090069,45.6838799 0.461154734,73.6339954 C0.904572748,82.5082679 5.86908083,109.507695 13.6850624,135.114199 C18.1771824,149.831538 22.9672794,162.053912 27.9223279,171.443732 C34.9490254,184.758688 42.4676212,192.600092 50.9085266,195.415501 C55.6400924,196.992296 64.2358984,198.09552 73.2774873,190.566873 C74.4232794,191.953885 75.9515935,193.33321 77.9812656,194.613801 C80.5578199,196.239076 83.7090439,197.566965 86.8555381,198.353885 C98.1969885,201.189395 108.820102,200.479926 117.882975,196.506309 C117.93855,198.117986 117.981709,199.658125 118.018365,200.987788 C118.07867,203.145164 118.137792,205.259972 118.217016,207.237617 C118.753848,220.612286 119.663741,231.011326 122.359723,238.286928 C122.507529,238.687778 122.706771,239.29733 122.917247,239.943538 C124.261691,244.062005 126.511298,250.955677 132.232573,256.355326 C138.158411,261.947714 145.325229,263.663446 151.888998,263.662855 C155.180933,263.662855 158.322106,263.231261 161.076619,262.640628 C170.897441,260.536462 182.050291,257.329663 190.118134,245.84218 C197.745515,234.981986 201.453672,218.625182 202.124711,192.851363 C202.211621,192.122975 202.292028,191.427104 202.369478,190.763751 C202.421506,190.316194 202.474716,189.858587 202.528517,189.402162 L204.325838,189.560018 L204.788767,189.591353 C214.791095,190.047187 227.021155,187.925875 234.532065,184.437062 C240.467363,181.68255 259.485857,171.642383 255.007926,158.085617\",\"fill\":\"#000000\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M237.905589,160.722476 C208.165838,166.857016 206.121386,156.78788 206.121386,156.78788 C237.521885,110.194697 250.64824,51.0516028 239.320388,36.5766651 C208.417109,-2.90823095 154.921977,15.7655797 154.029229,16.2503834 L153.741894,16.3018199 C147.866309,15.0821247 141.290716,14.3555104 133.900416,14.2349007 C120.443566,14.0143741 110.236083,17.7627344 102.490457,23.636545 C102.490457,23.636545 7.06039723,-15.6768961 11.4987159,73.0806097 C12.4429007,91.9631224 38.5625866,215.954032 69.7171363,178.502947 C81.1041109,164.808425 92.1061986,153.229303 92.1061986,153.229303 C97.5708822,156.859418 104.112776,158.711132 110.970975,158.046005 L111.503667,157.593718 C111.338125,159.294079 111.413801,160.957192 111.717099,162.925968 C103.691233,171.893062 106.049626,173.467492 90.0055797,176.770069 C73.7711594,180.115806 83.308194,186.072388 89.5349654,187.629081 C97.0837136,189.516859 114.54788,192.190965 126.34812,175.672166 L125.877506,177.556988 C129.022226,180.075603 131.230448,193.940397 130.860342,206.508637 C130.490236,219.077469 130.243104,227.706383 132.720924,234.446337 C135.198744,241.186291 137.668286,256.351187 158.759612,251.831871 C176.383409,248.055132 185.516046,238.268009 186.786587,221.94254 C187.688203,210.336222 189.728517,212.051954 189.857404,201.675381 L191.493912,196.762901 C193.381099,181.029838 191.793663,175.95418 202.651492,178.314938 L205.290125,178.546697 C213.2817,178.9103 223.741044,177.261376 229.879723,174.408129 C243.098309,168.273589 250.93794,158.031224 237.904406,160.722476 L237.905589,160.722476\",\"fill\":\"#336791\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M108.076342,81.5250624 C105.396915,81.152 102.969349,81.4972748 101.741376,82.426679 C101.050236,82.9499122 100.836804,83.5559169 100.779455,83.973321 C100.625145,85.0783187 101.399649,86.2997875 101.874993,86.9300323 C103.220619,88.7137552 105.18703,89.9399538 107.133339,90.2101432 C107.415353,90.249164 107.695594,90.2680831 107.974651,90.2680831 C111.220471,90.2680831 114.170679,87.7411917 114.430818,85.8758799 C114.755991,83.5399538 111.36473,81.9826697 108.076342,81.5250624\",\"fill\":\"#FFFFFF\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M196.860453,81.5989654 L196.859861,81.5989654 C196.604453,79.7679446 193.345626,79.2458938 190.253524,79.6757136 C187.166152,80.1061247 184.171603,81.4996397 184.421691,83.3347991 C184.622707,84.7620139 187.19867,87.198448 190.249386,87.1978568 C190.506568,87.1978568 190.766707,87.1807113 191.028619,87.1440554 C193.064794,86.8620416 194.558818,85.5690346 195.268286,84.8235012 C196.349635,83.688351 196.974559,82.4219492 196.860453,81.5989654\",\"fill\":\"#FFFFFF\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M247.802088,160.025423 C246.66812,156.596323 243.018494,155.492508 236.954309,156.745312 C218.949173,160.461155 212.501284,157.886965 210.38352,156.327908 C224.378975,135.007187 235.89188,109.236323 242.102688,85.1906513 C245.04521,73.8007206 246.670485,63.2231316 246.802919,54.601903 C246.949543,45.1375889 245.338457,38.1842032 242.014005,33.9362587 C228.611547,16.8108637 208.942115,7.62501617 185.131751,7.37256351 C168.763122,7.18869284 154.93321,11.3781062 152.252009,12.5558245 C146.60582,11.1516674 140.450587,10.2896628 133.750245,10.1796952 C121.461654,9.98104388 110.840314,12.9229746 102.045857,18.9191686 C98.2259584,17.4978661 88.3536998,14.10897 76.2814965,12.1644342 C55.4089238,8.80332564 38.8233164,11.3497275 26.9870115,19.7350577 C12.8638522,29.740933 6.34383372,47.626642 7.60727945,72.8943741 C8.03236952,81.3961755 12.8756767,107.547788 20.5202032,132.593219 C30.5822448,165.556915 41.5192979,184.218309 53.0280647,188.056536 C54.374873,188.505866 55.9286097,188.820397 57.6407945,188.820397 C61.8390762,188.820397 66.9856813,186.927889 72.3409885,180.490051 C81.2359538,169.788896 89.5408776,160.821801 92.6022356,157.563566 C97.1262818,159.992314 102.09552,161.347991 107.179455,161.483972 C107.188323,161.616998 107.201921,161.750023 107.213746,161.882457 C106.193885,163.092102 105.357303,164.152166 104.644286,165.05733 C101.122365,169.528166 100.389247,170.458753 89.0519353,172.793497 C85.8273995,173.458624 77.2611547,175.224018 77.1364065,181.227898 C76.9998337,187.787529 87.2605266,190.542633 88.4299677,190.834697 C92.5040924,191.854559 96.4286374,192.357691 100.171677,192.357691 C109.275344,192.357099 117.285838,189.365506 123.688203,183.576831 C123.490734,206.962697 124.466254,230.006836 127.273977,237.028212 C129.573247,242.775501 135.191649,256.822984 152.93842,256.821801 C155.54158,256.821801 158.408425,256.519095 161.561423,255.843326 C180.082106,251.872074 188.124527,243.686577 191.236139,225.640055 C192.901025,215.995418 195.758411,192.963695 197.101672,180.610069 C199.937774,181.49454 203.589173,181.899529 207.536185,181.898938 C215.768388,181.898938 225.266993,180.150097 231.224166,177.384942 C237.91564,174.277469 249.991982,166.650679 247.802088,160.025423 L247.802088,160.025423 Z M203.696185,76.5445912 C203.634697,80.1918522 203.132748,83.5027067 202.600647,86.9590023 C202.028342,90.6760277 201.435935,94.5189838 201.286947,99.1843326 C201.139732,103.724342 201.706716,108.444674 202.255372,113.008924 C203.363326,122.228471 204.500249,131.720573 200.098587,141.086744 C199.41454,139.871778 198.754143,138.546254 198.14873,137.078245 C197.601848,135.752129 196.414079,133.621949 194.769885,130.673515 C188.370476,119.197857 173.385312,92.3243603 181.056443,81.3583372 C183.340933,78.0935982 189.139658,74.7384018 203.696185,76.5445912 L203.696185,76.5445912 Z M186.052286,14.7581339 C207.386014,15.2293395 224.261321,23.2102725 236.209958,38.4780416 C245.373931,50.1890069 235.282919,103.476028 206.069949,149.446651 C205.781432,149.080092 205.487594,148.709986 205.183704,148.33042 C205.062503,148.178476 204.938938,148.024166 204.814189,147.868083 C212.362938,135.400942 210.886651,123.066236 209.572952,112.129774 C209.033164,107.641792 208.523529,103.402716 208.653007,99.4214134 C208.787215,95.2000739 209.34533,91.5811917 209.884527,88.0811455 C210.548471,83.7675751 211.223058,79.3050162 211.036822,74.0437136 C211.17576,73.4921016 211.231926,72.8399815 211.159206,72.0660693 C210.683861,67.0205635 204.924157,51.9224758 193.18363,38.2551501 C186.762346,30.7808961 177.396767,22.4156674 164.609774,16.7736166 C170.109931,15.6337367 177.631483,14.5707159 186.052286,14.7581339 L186.052286,14.7581339 Z M66.6741062,175.777995 C60.7742818,182.871501 56.6995658,181.512277 55.3598522,181.065903 C46.6292471,178.153533 36.499806,159.702023 27.568776,130.441755 C19.8408868,105.123769 15.3245266,79.6650716 14.9674273,72.5260416 C13.8387806,49.9483788 19.3117413,34.2129515 31.2349561,25.7572656 C50.6389284,11.9965266 82.5413764,20.2328684 95.3602956,24.4104573 C95.1758337,24.591963 94.9842771,24.7622356 94.8015889,24.9466975 C73.7664296,46.1911501 74.2654226,82.4875751 74.3168591,84.7058476 C74.3150855,85.56194 74.3866236,86.7739492 74.485358,88.4412009 C74.8471871,94.5455889 75.5205912,105.907732 73.7214965,118.775132 C72.0489238,130.732046 75.7346143,142.435326 83.8320185,150.883917 C84.6703741,151.758337 85.5453857,152.579547 86.4493672,153.352277 C82.8446744,157.212379 75.0115473,165.74788 66.6741062,175.777995 L66.6741062,175.777995 Z M89.1530346,145.78461 C82.6265127,138.975483 79.6627067,129.503483 81.020157,119.795584 C82.920351,106.202753 82.2185681,94.3646744 81.8419584,88.0048776 C81.7893395,87.1150855 81.7426328,86.335261 81.7148453,85.7197968 C84.7880277,82.9954365 99.0288406,75.3645081 109.184296,77.6915658 C113.819492,78.7534042 116.642587,81.9087667 117.816758,87.3373857 C123.893358,115.440037 118.621413,127.153367 114.385293,136.565654 C113.512055,138.504868 112.687298,140.337663 111.982559,142.234309 L111.436859,143.699954 C110.054577,147.406337 108.768665,150.851991 107.971695,154.124416 C101.034273,154.103132 94.2848591,151.139917 89.1530346,145.78461 L89.1530346,145.78461 Z M90.2178291,183.685025 C88.1922956,183.178938 86.3701432,182.299788 85.3012102,181.570808 C86.1939584,181.150448 87.7831686,180.579326 90.5388637,180.011751 C103.876286,177.265515 105.93552,175.328074 110.433552,169.61685 C111.465238,168.30788 112.634088,166.823316 114.252859,165.015353 C114.25345,165.014171 114.254042,165.01358 114.254633,165.012988 C116.666236,162.31346 117.768868,162.771067 119.768979,163.600554 C121.390115,164.271594 122.968684,166.303039 123.608979,168.539048 C123.911686,169.594975 124.252231,171.599815 123.138956,173.158873 C113.742633,186.31479 100.051067,186.1457 90.2178291,183.685025 L90.2178291,183.685025 Z M160.016554,248.637487 C143.700545,252.133395 137.923695,243.80837 134.116804,234.291436 C131.659677,228.146845 130.452397,200.440314 131.309081,169.84388 C131.320314,169.436527 131.262374,169.043363 131.150042,168.673848 C131.05249,167.96024 130.902319,167.238356 130.694208,166.511741 C129.419529,162.059824 126.315012,158.335704 122.5903,156.792018 C121.110467,156.178919 118.393792,155.05382 115.129644,155.888628 C115.826106,153.0206 117.033386,149.782467 118.341764,146.275326 L118.891012,144.79963 C119.509432,143.136517 120.284527,141.413691 121.105145,139.590356 C125.538143,129.741746 131.609423,116.25297 125.020231,85.7795104 C122.551871,74.3659307 114.310208,68.7924619 101.815871,70.0866513 C94.3250624,70.861746 87.472776,73.8840831 84.0549099,75.6169607 C83.3200185,75.9894319 82.6477968,76.3488961 82.0199169,76.6994919 C82.9735612,65.1990023 86.578254,43.707418 100.060527,30.1098568 C108.54873,21.548933 119.854115,17.3210901 133.628453,17.5487113 C160.768591,17.9933118 178.172453,31.9213672 187.994457,43.5276859 C196.457829,53.5294226 201.040998,63.6038799 202.870245,69.0372286 C189.115418,67.6389838 179.76048,70.3544758 175.017681,77.1340416 C164.700822,91.8815335 180.662097,120.506236 188.333229,134.262836 C189.739751,136.784406 190.954125,138.963067 191.336055,139.888924 C193.833977,145.943058 197.067972,149.984665 199.429321,152.935464 C200.152979,153.839446 200.855353,154.716231 201.389229,155.481866 C197.223464,156.683233 189.740342,159.457848 190.422023,173.328554 C189.872185,180.289035 185.960647,212.874938 183.974134,224.387843 C181.351464,239.597672 175.754346,245.263372 160.016554,248.637487 L160.016554,248.637487 Z M228.120831,170.700564 C223.861062,172.678208 216.732083,174.161589 209.959612,174.479667 C202.479446,174.830263 198.671963,173.641903 197.776259,172.91115 C197.355307,164.267455 200.573339,163.364065 203.978199,162.408055 C204.513256,162.257293 205.035307,162.111261 205.53903,161.935076 C205.852379,162.189894 206.195289,162.442938 206.570716,162.690661 C212.582873,166.658956 223.306494,167.087002 238.444785,163.962383 C238.50036,163.950559 238.555935,163.939917 238.610919,163.928684 C236.569423,165.837746 233.075289,168.400111 228.120831,170.700564 L228.120831,170.700564 Z\",\"fill\":\"#FFFFFF\",\"key\":4})]));\n}\n\nPostgresql.defaultProps = {\"width\":\"256px\",\"height\":\"264px\",\"viewBox\":\"0 0 256 264\",\"version\":\"1.1\",\"preserveAspectRatio\":\"xMidYMid\"};\n\nmodule.exports = Postgresql;\n\nPostgresql.default = Postgresql;\n","var React = require('react');\n\nfunction ReactIco (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"g\",null,React.createElement(\"path\",{\"d\":\"M210.483381,73.8236374 C207.827698,72.9095503 205.075867,72.0446761 202.24247,71.2267368 C202.708172,69.3261098 203.135596,67.4500894 203.515631,65.6059664 C209.753843,35.3248922 205.675082,10.9302478 191.747328,2.89849283 C178.392359,-4.80289661 156.551327,3.22703567 134.492936,22.4237776 C132.371761,24.2697233 130.244662,26.2241201 128.118477,28.2723861 C126.701777,26.917204 125.287358,25.6075897 123.876584,24.3549348 C100.758745,3.82852863 77.5866802,-4.82157937 63.6725966,3.23341515 C50.3303869,10.9571328 46.3792156,33.8904224 51.9945178,62.5880206 C52.5367729,65.3599011 53.1706189,68.1905639 53.8873982,71.068617 C50.6078941,71.9995641 47.4418534,72.9920277 44.4125156,74.0478303 C17.3093297,83.497195 0,98.3066828 0,113.667995 C0,129.533287 18.5815786,145.446423 46.8116526,155.095373 C49.0394553,155.856809 51.3511025,156.576778 53.7333796,157.260293 C52.9600965,160.37302 52.2875179,163.423318 51.7229345,166.398431 C46.3687351,194.597975 50.5500231,216.989464 63.8566899,224.664425 C77.6012619,232.590464 100.66852,224.443422 123.130185,204.809231 C124.905501,203.257196 126.687196,201.611293 128.472081,199.886102 C130.785552,202.113904 133.095375,204.222319 135.392897,206.199955 C157.14963,224.922338 178.637969,232.482469 191.932332,224.786092 C205.663234,216.837268 210.125675,192.78347 204.332202,163.5181 C203.88974,161.283006 203.374826,158.99961 202.796573,156.675661 C204.416503,156.196743 206.006814,155.702335 207.557482,155.188332 C236.905331,145.46465 256,129.745175 256,113.667995 C256,98.2510906 238.132466,83.3418093 210.483381,73.8236374 L210.483381,73.8236374 Z M204.118035,144.807565 C202.718197,145.270987 201.281904,145.718918 199.818271,146.153177 C196.578411,135.896354 192.205739,124.989735 186.854729,113.72131 C191.961041,102.721277 196.164656,91.9540963 199.313837,81.7638014 C201.93261,82.5215915 204.474374,83.3208483 206.923636,84.1643056 C230.613348,92.3195488 245.063763,104.377206 245.063763,113.667995 C245.063763,123.564379 229.457753,136.411268 204.118035,144.807565 L204.118035,144.807565 Z M193.603754,165.642007 C196.165567,178.582766 196.531475,190.282717 194.834536,199.429057 C193.309843,207.64764 190.243595,213.12715 186.452366,215.321689 C178.384612,219.991462 161.131788,213.921395 142.525146,197.909832 C140.392124,196.074366 138.243609,194.114502 136.088259,192.040261 C143.301619,184.151133 150.510878,174.979732 157.54698,164.793993 C169.922699,163.695814 181.614905,161.900447 192.218042,159.449363 C192.740247,161.555956 193.204126,163.621993 193.603754,165.642007 L193.603754,165.642007 Z M87.2761866,214.514686 C79.3938934,217.298414 73.1160375,217.378157 69.3211631,215.189998 C61.2461189,210.532528 57.8891498,192.554265 62.4682434,168.438039 C62.9927272,165.676183 63.6170041,162.839142 64.3365173,159.939216 C74.8234575,162.258154 86.4299951,163.926841 98.8353334,164.932519 C105.918826,174.899534 113.336329,184.06091 120.811247,192.08264 C119.178102,193.65928 117.551336,195.16028 115.933685,196.574699 C106.001303,205.256705 96.0479605,211.41654 87.2761866,214.514686 L87.2761866,214.514686 Z M50.3486141,144.746959 C37.8658105,140.48046 27.5570398,134.935332 20.4908634,128.884403 C14.1414664,123.446815 10.9357817,118.048415 10.9357817,113.667995 C10.9357817,104.34622 24.8334611,92.4562517 48.0123604,84.3748281 C50.8247961,83.3942121 53.7689223,82.4701001 56.8242337,81.6020363 C60.0276398,92.0224477 64.229889,102.917218 69.3011135,113.93411 C64.1642716,125.11459 59.9023288,136.182975 56.6674809,146.725506 C54.489347,146.099407 52.3791089,145.440499 50.3486141,144.746959 L50.3486141,144.746959 Z M62.7270678,60.4878073 C57.9160346,35.9004118 61.1112387,17.3525532 69.1516515,12.6982729 C77.7160924,7.74005624 96.6544653,14.8094222 116.614922,32.5329619 C117.890816,33.6657739 119.171723,34.8514442 120.456275,36.0781256 C113.018267,44.0647686 105.66866,53.1573386 98.6480514,63.0655695 C86.6081646,64.1815215 75.0831931,65.9741531 64.4868907,68.3746571 C63.8206914,65.6948233 63.2305903,63.0619242 62.7270678,60.4878073 L62.7270678,60.4878073 Z M173.153901,87.7550367 C170.620796,83.3796304 168.020249,79.1076627 165.369124,74.9523483 C173.537126,75.9849113 181.362914,77.3555864 188.712066,79.0329319 C186.505679,86.1041206 183.755673,93.4974728 180.518546,101.076741 C178.196419,96.6680702 175.740322,92.2229454 173.153901,87.7550367 L173.153901,87.7550367 Z M128.122121,43.8938899 C133.166461,49.3588189 138.218091,55.4603279 143.186789,62.0803968 C138.179814,61.8439007 133.110868,61.720868 128.000001,61.720868 C122.937434,61.720868 117.905854,61.8411667 112.929865,62.0735617 C117.903575,55.515009 122.99895,49.4217021 128.122121,43.8938899 L128.122121,43.8938899 Z M82.8018984,87.830679 C80.2715265,92.2183886 77.8609975,96.6393627 75.5753239,101.068539 C72.3906004,93.5156998 69.6661103,86.0886276 67.440586,78.9171899 C74.7446255,77.2826781 82.5335049,75.9461789 90.6495601,74.9332099 C87.9610684,79.1268011 85.3391054,83.4302106 82.8018984,87.8297677 L82.8018984,87.830679 L82.8018984,87.830679 Z M90.8833221,153.182899 C82.4979621,152.247395 74.5919739,150.979704 67.289757,149.390303 C69.5508242,142.09082 72.3354636,134.505173 75.5876271,126.789657 C77.8792246,131.215644 80.2993228,135.638441 82.8451877,140.03572 L82.8456433,140.03572 C85.4388987,144.515476 88.1255676,148.90364 90.8833221,153.182899 L90.8833221,153.182899 Z M128.424691,184.213105 C123.24137,178.620587 118.071264,172.434323 113.021912,165.780078 C117.923624,165.972373 122.921029,166.0708 128.000001,166.0708 C133.217953,166.0708 138.376211,165.953235 143.45336,165.727219 C138.468257,172.501308 133.434855,178.697141 128.424691,184.213105 L128.424691,184.213105 Z M180.622896,126.396409 C184.044571,134.195313 186.929004,141.741317 189.219234,148.9164 C181.796719,150.609693 173.782736,151.973534 165.339049,152.986959 C167.996555,148.775595 170.619884,144.430263 173.197646,139.960532 C175.805484,135.438399 178.28163,130.90943 180.622896,126.396409 L180.622896,126.396409 Z M163.724586,134.496971 C159.722835,141.435557 155.614455,148.059271 151.443648,154.311611 C143.847063,154.854776 135.998946,155.134562 128.000001,155.134562 C120.033408,155.134562 112.284171,154.887129 104.822013,154.402745 C100.48306,148.068386 96.285368,141.425078 92.3091341,134.556664 L92.3100455,134.556664 C88.3442923,127.706935 84.6943232,120.799333 81.3870228,113.930466 C84.6934118,107.045648 88.3338117,100.130301 92.276781,93.292874 L92.2758697,93.294241 C96.2293193,86.4385872 100.390102,79.8276317 104.688954,73.5329157 C112.302398,72.9573964 120.109505,72.6571055 127.999545,72.6571055 L128.000001,72.6571055 C135.925583,72.6571055 143.742714,72.9596746 151.353879,73.5402067 C155.587114,79.7888993 159.719645,86.3784378 163.688588,93.2350031 C167.702644,100.168578 171.389978,107.037901 174.724618,113.77508 C171.400003,120.627999 167.720871,127.566587 163.724586,134.496971 L163.724586,134.496971 Z M186.284677,12.3729198 C194.857321,17.3165548 198.191049,37.2542268 192.804953,63.3986692 C192.461372,65.0669011 192.074504,66.7661189 191.654369,68.4881206 C181.03346,66.0374921 169.500286,64.2138746 157.425315,63.0810626 C150.391035,53.0639249 143.101577,43.9572289 135.784778,36.073113 C137.751934,34.1806885 139.716356,32.3762092 141.672575,30.673346 C160.572216,14.2257007 178.236518,7.73185406 186.284677,12.3729198 L186.284677,12.3729198 Z M128.000001,90.8080696 C140.624975,90.8080696 150.859926,101.042565 150.859926,113.667995 C150.859926,126.292969 140.624975,136.527922 128.000001,136.527922 C115.375026,136.527922 105.140075,126.292969 105.140075,113.667995 C105.140075,101.042565 115.375026,90.8080696 128.000001,90.8080696 L128.000001,90.8080696 Z\",\"fill\":\"#00D8FF\"})));\n}\n\nReactIco.defaultProps = {\"width\":\"256px\",\"height\":\"228px\",\"viewBox\":\"0 0 256 228\",\"version\":\"1.1\",\"preserveAspectRatio\":\"xMidYMid\"};\n\nmodule.exports = ReactIco;\n\nReactIco.default = ReactIco;\n","var React = require('react');\n\nfunction Spring (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"g\",{\"fill\":\"#6DB33F\"},React.createElement(\"g\",null,[React.createElement(\"path\",{\"d\":\"M244.896373,54.5668792 L74.6284825,1.61008271 C66.3966382,-0.949840074 57.5491985,3.63825319 54.9692762,11.8062848 L1.59875487,180.754269 C-0.981167315,188.92329 3.64277043,197.701156 11.8746148,200.261079 L182.143502,253.217875 C190.375347,255.777798 199.22179,251.189705 201.801712,243.021673 L255.172234,74.0727 C257.753152,65.9046684 253.128218,57.126802 244.896373,54.5668792 L244.896373,54.5668792 L244.896373,54.5668792 Z M81.5982568,180.535836 C81.5982568,187.754028 75.6465059,193.659641 68.3719222,193.659641 L68.3231129,193.659641 C61.0495253,193.659641 55.0977743,187.754028 55.0977743,180.535836 L55.0977743,113.288938 C55.0977743,106.070746 61.0495253,100.166121 68.3231129,100.166121 L68.3719222,100.166121 C75.6465059,100.166121 81.5982568,106.070746 81.5982568,113.288938 L81.5982568,180.535836 L81.5982568,180.535836 Z M68.3480155,87.2449359 C60.9997199,87.2449359 55.0429884,81.3343806 55.0429884,74.0440368 C55.0429884,66.7527046 60.9997199,60.8421493 68.3480155,60.8421493 C75.6953152,60.8421493 81.6520467,66.7527046 81.6520467,74.0440368 C81.6520467,81.3343806 75.6953152,87.2449359 68.3480155,87.2449359 L68.3480155,87.2449359 L68.3480155,87.2449359 Z M152.610864,193.616152 C119.494225,193.616152 92.6939144,166.420678 92.6939144,133.560759 C92.6939144,100.69985 119.541043,74.0618278 152.658677,74.0618278 C169.714055,74.0618278 185.106926,81.1268193 196.025277,92.4695505 L202.430257,81.2246697 C208.998599,98.8080775 213.275891,119.34874 213.275891,133.445118 C213.275891,166.305038 185.728498,193.616152 152.610864,193.616152 L152.610864,193.616152 L152.610864,193.616152 Z\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M129.955362,174.318881 C136.391222,172.316408 143.25242,170.208179 148.991004,168.369778 C171.651487,161.109086 191.131393,142.829854 196.281277,119.86962 C192.182288,130.670715 175.446662,151.769816 149.237043,160.176049 C140.827891,162.821961 132.104965,164.497277 123.491611,166.471087 C122.384934,166.725102 120.86786,166.442424 119.895657,165.842473 C114.375222,162.43649 111.400841,156.343084 110.931673,150.195315 C109.666615,133.653668 120.989385,120.154276 137.820638,116.659338 C144.889027,115.190594 152.166599,115.573101 159.387393,114.806112 C178.457899,112.814512 196.383876,99.2657007 201.798723,87.9397721 C201.798723,87.9397721 202.770926,90.1468406 202.980109,90.7971994 C207.07312,103.519719 210.336373,116.411253 210.654133,129.857272 C210.825463,137.119941 210.023596,144.268946 207.435705,151.130329 C202.233027,164.921295 191.611517,171.914135 177.421945,173.559799 C169.12635,174.5215 160.68333,174.309985 152.304063,174.470104 C145.503627,174.599583 137.633369,174.318881 129.955362,174.318881\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M121.522303,175.012729 C121.522303,177.816783 119.232249,180.089085 116.406288,180.089085 C113.580327,180.089085 111.290273,177.816783 111.290273,175.012729 C111.290273,172.208674 113.580327,169.936372 116.406288,169.936372 C119.232249,169.936372 121.522303,172.208674 121.522303,175.012729\",\"key\":2})])));\n}\n\nSpring.defaultProps = {\"width\":\"256px\",\"height\":\"254px\",\"viewBox\":\"0 0 256 254\",\"version\":\"1.1\",\"preserveAspectRatio\":\"xMidYMid\"};\n\nmodule.exports = Spring;\n\nSpring.default = Spring;\n","var React = require('react');\n\nfunction TypescriptIcon (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"g\",null,[React.createElement(\"polygon\",{\"fill\":\"#007ACC\",\"transform\":\"translate(128.000000, 128.000000) scale(1, -1) translate(-128.000000, -128.000000) \",\"points\":\"0 128 0 0 128 0 256 0 256 128 256 256 128 256 0 256\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M146.658132,223.436863 L146.739401,212.953054 L130.079084,212.953054 L113.418767,212.953054 L113.418767,165.613371 L113.418767,118.273689 L101.63464,118.273689 L89.8505126,118.273689 L89.8505126,165.613371 L89.8505126,212.953054 L73.1901951,212.953054 L56.5298776,212.953054 L56.5298776,223.233689 C56.5298776,228.922577 56.6517824,233.676863 56.8143221,233.798768 C56.9362269,233.961308 77.2130522,234.042577 101.797179,234.001943 L146.536227,233.880038 L146.658132,223.436863 Z\",\"fill\":\"#FFFFFF\",\"transform\":\"translate(101.634640, 176.142993) rotate(-180.000000) translate(-101.634640, -176.142993) \",\"key\":1}),React.createElement(\"path\",{\"d\":\"M206.566631,234.272145 C213.068219,232.646748 218.025679,229.761668 222.57679,225.048018 C224.933616,222.528653 228.428219,217.936907 228.712663,216.839764 C228.793933,216.514684 217.659965,209.037859 210.914568,204.852462 C210.670758,204.689922 209.69552,205.74643 208.598377,207.371827 C205.306949,212.166748 201.852981,214.239129 196.570441,214.604843 C188.809171,215.133097 183.811076,211.069605 183.851711,204.283573 C183.851711,202.292462 184.136155,201.114049 184.948854,199.488653 C186.65552,195.953414 189.825044,193.840399 199.7806,189.533097 C218.106949,181.649922 225.949489,176.448653 230.825679,169.053097 C236.270758,160.804208 237.489806,147.638494 233.792028,137.845478 C229.728536,127.199129 219.651076,119.966113 205.469489,117.568653 C201.080917,116.796589 190.678377,116.918494 185.964727,117.771827 C175.684092,119.600399 165.931711,124.679764 159.917743,131.343891 C157.560917,133.944526 152.969171,140.730557 153.253616,141.218176 C153.37552,141.380716 154.432028,142.030875 155.610441,142.721668 C156.748219,143.371827 161.05552,145.850557 165.119012,148.207383 L172.473933,152.474049 L174.01806,150.198494 C176.171711,146.907065 180.885362,142.396589 183.729806,140.893097 C191.897425,136.585795 203.112663,137.195319 208.639012,142.15278 C210.995838,144.30643 211.971076,146.541351 211.971076,149.83278 C211.971076,152.799129 211.605362,154.099446 210.061235,156.334367 C208.070123,159.178811 204.006631,161.576272 192.466314,166.574367 C179.259965,172.263256 173.571076,175.798494 168.369806,181.406113 C165.362822,184.656907 162.518377,189.858176 161.339965,194.206113 C160.364727,197.822621 160.120917,206.884208 160.892981,210.541351 C163.61552,223.300716 173.245996,232.199764 187.143139,234.841034 C191.653616,235.694367 202.137425,235.369287 206.566631,234.272145 Z\",\"fill\":\"#FFFFFF\",\"transform\":\"translate(194.578507, 176.190240) scale(1, -1) translate(-194.578507, -176.190240) \",\"key\":2})]));\n}\n\nTypescriptIcon.defaultProps = {\"width\":\"256px\",\"height\":\"256px\",\"viewBox\":\"0 0 256 256\",\"version\":\"1.1\",\"preserveAspectRatio\":\"xMidYMid\"};\n\nmodule.exports = TypescriptIcon;\n\nTypescriptIcon.default = TypescriptIcon;\n","var React = require('react');\n\nfunction Vertx (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"g\",{\"transform\":\"translate(-71.357 -110.488)\"},[React.createElement(\"rect\",{\"width\":\"38.412\",\"height\":\"38.412\",\"x\":\"72.307\",\"y\":\"111.438\",\"ry\":\"3.985\",\"rx\":\"4.675\",\"fill\":\"#782a90\",\"stroke\":\"#782a90\",\"strokeWidth\":\"1.899\",\"strokeLinejoin\":\"round\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M70.564 118.744h6.175l6.119 14.072 6.38-13.924h5.898l-10.71 23.526h-3.397z\",\"fill\":\"#fff\",\"fillRule\":\"evenodd\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M89.179 118.78h7.459l4.59 6.657 4.59-6.656h7.345l-16.64 23.526h-7.23l8.378-11.706zM102.488 138.338l3.443-4.935 6.426 8.837h-7.23z\",\"fill\":\"#fff\",\"fillRule\":\"evenodd\",\"key\":2}),React.createElement(\"circle\",{\"cx\":\"88.728\",\"cy\":\"142.316\",\"r\":\"4.398\",\"fill\":\"#fff\",\"stroke\":\"#782a90\",\"strokeWidth\":\"2.111\",\"strokeLinejoin\":\"round\",\"key\":3})]));\n}\n\nVertx.defaultProps = {\"width\":\"152.355\",\"height\":\"152.355\",\"viewBox\":\"0 0 40.310665 40.310665\"};\n\nmodule.exports = Vertx;\n\nVertx.default = Vertx;\n","module.exports = require(\"@material-ui/core\");","module.exports = require(\"@material-ui/core/AppBar\");","module.exports = require(\"@material-ui/core/Avatar\");","module.exports = require(\"@material-ui/core/Card\");","module.exports = require(\"@material-ui/core/CardActions\");","module.exports = require(\"@material-ui/core/CardContent\");","module.exports = require(\"@material-ui/core/CardHeader\");","module.exports = require(\"@material-ui/core/Grid\");","module.exports = require(\"@material-ui/core/Tab\");","module.exports = require(\"@material-ui/core/Tabs\");","module.exports = require(\"@material-ui/core/Typography\");","module.exports = require(\"@material-ui/core/styles\");","module.exports = require(\"@material-ui/styles\");","module.exports = require(\"@material-ui/styles/makeStyles\");","module.exports = require(\"core-js/library/fn/json/stringify\");","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/create\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-prototype-of\");","module.exports = require(\"core-js/library/fn/object/set-prototype-of\");","module.exports = require(\"core-js/library/fn/symbol\");","module.exports = require(\"core-js/library/fn/symbol/iterator\");","module.exports = require(\"next-server/dist/lib/utils\");","module.exports = require(\"next/router\");","module.exports = require(\"prop-types\");","module.exports = require(\"prop-types-exact\");","module.exports = require(\"react\");","module.exports = require(\"url\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AADA;AACA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;ACpDA;AACA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChlGA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AAUA;AACA;AAEA;AACA;AADA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;;;;;AAAA;AAUA;AAfA;AAkBA;AACA;AACA;AACA;AACA;;;;;AAAA;AAUA;AAfA;AAkBA;AACA;AACA;AACA;AACA;AACA;;;;;AAAA;AAUA;AAhBA;AAmBA;AACA;AACA;AACA;AACA;;;;;AAAA;AAUA;AAfA;AAkBA;AACA;AACA;AACA;AACA;;;;;AAAA;AAUA;AAfA;AAmBA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;ACznBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpjPA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AADA;AADA;AACA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;;;;;;;;;;;AClsourceRoot":""}